00001FE6 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 13/01/2022 16:54:07

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : GAME OF LIFE APPLICATION
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; CREATION : 05-JULY-2021
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; TITLE    : SYSTEM CONSTANTS
00001000                            14  ; AUTHOR   : ANTONI BURGUERA
00001000                            15  ; HISTORY  : 05-JULY-2021 - CREATION
00001000                            16  ; COMMENTS : * MOUVAL AND MOUEDGE FORMAT IS AS FOLLOWS:
00001000                            17  ;              +---+---+---+---+---+---+---+---+
00001000                            18  ;              | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            19  ;              +---+---+---+---+---+---+---+---+
00001000                            20  ;              \-------------------/ |   |   |
00001000                            21  ;                        |           |   |   +-- LEFT MOUSE BUTTON
00001000                            22  ;                        |           |   +------ RIGHT MOUSE BUTTON
00001000                            23  ;                        |           +---------- CENTRAL MOUSE BUTTON
00001000                            24  ;                        +---------------------- 0
00001000                            25  ;              A "1" IN ONE OF THESE BITS IN MOUVAL MEANS "BUTTON PRESSED".
00001000                            26  ;              A "0" IN ONE OF THESE BITS IN MOUVAL MEANS "BUTTON NOT PRESSED".
00001000                            27  ;              A "1" IN ONE OF THESE BITS IN MOUEDGE MEANS "BUTTON CLICKED".
00001000                            28  ;              A "0" IN ONE OF THESE BITS IN MOUEDGE MEANS "BUTTON NOT CLICKED".
00001000                            29  ;              A "CLICK" IS A CHANGE FROM 0 TO 1 IN SUBSEQUENT UPDATES.
00001000                            30  ;              BOTH MOUVEL AND MOUEDGE ARE UPDATED BY TRAP #MOUTRAP
00001000                            31  ;
00001000                            32  ;            * MASKS AND BIT POSITIONS ARE DEFINED TO EASE MOUSE ACCESS. FOR
00001000                            33  ;              EXAMPLE, ONE CAN DO THE FOLLOWING TO CHECK IF THE LEFT BUTTON
00001000                            34  ;              IS PRESSED:
00001000                            35  ;
00001000                            36  ;              BTST.L #MOUBITLF,(MOUVAL)
00001000                            37  ;              BNE ...
00001000                            38  ;
00001000                            39  ;              ALTERNATIVELY, ONE CAN ALSO DO THE FOLLOWING DEPENDING ON THE
00001000                            40  ;              CONTEXT:
00001000                            41  ;
00001000                            42  ;              MOVE.B  (MOUVAL),D0
00001000                            43  ;              AND.B   #MOUMSKLF,D0
00001000                            44  ;              BNE ...
00001000                            45  ; =============================================================================
00001000                            46  
00001000                            47  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            48  
00001000  =00000000                 49  SCRTRAP     EQU     0                       ; SCREEN REFRESH TRAP NUMBER
00001000  =00000320                 50  SCRWIDTH    EQU     800                     ; SCREEN WIDTH (PIXELS)
00001000  =00000258                 51  SCRHEIGH    EQU     600                     ; SCREEN HEIGHT (PIXELS)
00001000                            52  
00001000                            53  ; --- MOUSE RELATED CONSTANTS -------------------------------------------------
00001000                            54  
00001000  =00000001                 55  MOUTRAP     EQU     1                       ; MOUSE QUERY TRAP NUMBER
00001000  =00000001                 56  MOUMSKLF    EQU     %00000001               ; LEFT MOUSE BUTTON MASK
00001000  =00000002                 57  MOUMSKRT    EQU     %00000010               ; RIGHT MOUSE BUTTON MASK
00001000  =00000004                 58  MOUMSKMD    EQU     %00000100               ; MIDDLE MOUSE BUTTON MASL
00001000  =00000000                 59  MOUBITLF    EQU     0                       ; LEFT MOUSE BUTTON BIT POSITION
00001000  =00000001                 60  MOUBITRT    EQU     1                       ; RIGHT MOUSE BUTTON BIT POSITION
00001000  =00000002                 61  MOUBITMD    EQU     2                       ; MIDDLE MOUSE BUTTON BIT POSITION
00001000  =00000002                 62  -------------------- end include --------------------
00001000                            63              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            64  ; =============================================================================
00001000                            65  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            66  ; AUTHOR   : ANTONI BURGUERA
00001000                            67  ; HISTORY  : 05-JULY-2021 - CREATION
00001000                            68  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                            69  ;            - SYS : GENERIC.
00001000                            70  ;            - SCR : SCREEN MANAGEMENT.
00001000                            71  ;            - MOU : MOUSE MANAGEMENT
00001000                            72  ;            THE FORMAT OF MOUVAL AND MOUEDGE IS DESCRIBED IN SYSCONST.
00001000                            73  ; =============================================================================
00001000                            74  
00001000                            75  ; -----------------------------------------------------------------------------
00001000                            76  SYSINIT
00001000                            77  ; INITIALIZES THE SYSTEM AS FOLLOWS:
00001000                            78  ; * DISABLES INTERRUPTS
00001000                            79  ; * CALLS SCRINIT
00001000                            80  ; * CALLS MOUINIT
00001000                            81  ; * ENABLES SIMULATOR EXCEPTION PROCESSING
00001000                            82  ; * SWITCHES TO USER
00001000                            83  ; INPUT    - NONE
00001000                            84  ; OUTPUT   - NONE
00001000                            85  ; MODIFIES - NONE
00001000                            86  ; NOTE     - NOTE THAT INTERRUPTS REMAIN DISABLED AFTER THIS SUBROUTINE
00001000                            87  ; -----------------------------------------------------------------------------
00001000                            88              
00001000                            89              
00001000  007C 0700                 90              OR.W    #$0700,SR               ; Disables interrupts
00001004  4EB9 0000107E             91              JSR     SCRINIT                 ; Calls to SCRINIT
0000100A  4EB9 00001020             92              JSR     MOUINIT                 ; Calls to MOUINIT
00001010  103C 0020                 93              MOVE.B  #32,D0                  ; Enable exception processing
00001014  123C 0005                 94              MOVE.B  #5,D1                   
00001018  4E4F                      95              TRAP    #15                      
0000101A  46FC 2000                 96              MOVE    #$2000,SR               ; Switches to user 
0000101E                            97              
0000101E  4E75                      98              RTS
00001020                            99  
00001020                           100  ; =============================================================================
00001020                           101  ; MOUSE MANAGEMENT (SYSTEM CODE)
00001020                           102  ; =============================================================================
00001020                           103  
00001020                           104  ; -----------------------------------------------------------------------------
00001020                           105  MOUINIT
00001020                           106  ; INITIALIZES MOUSE AS FOLLOWS:
00001020                           107  ; * STORES CURRENT MOUSE POSITION AND BUTTON STATUS INTO MOUY, MOUX AND MOUVAL
00001020                           108  ; * CLEARS MOUEDGE
00001020                           109  ; * INSTALLS MOUREAD INTO TRAP #MOUTRAP
00001020                           110  ; INPUT    - NONE
00001020                           111  ; OUTPUT   - NONE
00001020                           112  ; MODIFIES - ALL REGISTERS CAN BE MODIFIED
00001020                           113  ; -----------------------------------------------------------------------------
00001020                           114  
00001020  103C 003D                115              MOVE.B  #61, D0
00001024  123C 0000                116              MOVE.B  #0, D1
00001028  4E4F                     117              TRAP    #15
0000102A  C0BC 00000007            118              AND.L   #7, D0
00001030  13C0 00002004            119              MOVE.B  D0, MOUVAL
00001036  33C1 00002002            120              MOVE.W  D1, MOUX
0000103C  4841                     121              SWAP    D1
0000103E  33C1 00002000            122              MOVE.W  D1, MOUY            
00001044  4239 00002005            123              CLR.B   MOUEDGE                  ; clears MOUEDGE
0000104A  21FC 00001054 0084       124              MOVE.L  #MOUREAD,($80+MOUTRAP*4) ;Installs mouread into moutrap
00001052                           125              
00001052  4E75                     126              RTS
00001054                           127  
00001054                           128  ; -----------------------------------------------------------------------------
00001054                           129  MOUREAD
00001054                           130  ; MOUSE READING TRAP SERVICE ROUTINE. IT DOES THE FOLLOWING:
00001054                           131  ; * STORES CURRENT MOUSE POSITION INTO MOUY AND MOUX.
00001054                           132  ; * STORES CURRENT BUTTON STATUS INTO MOUVAL
00001054                           133  ; * COMPUTES AND STORES MOUEDGE
00001054                           134  ; INPUT    - NONE
00001054                           135  ; OUTPUT   - NONE
00001054                           136  ; MODIFIES - NONE
00001054                           137  ; -----------------------------------------------------------------------------
00001054                           138                         
00001054  303C 003D                139              MOVE.W  #61,D0
00001058  4281                     140              CLR.L   D1
0000105A  4E4F                     141              TRAP    #15
0000105C  23C1 00002000            142              MOVE.L  D1,(MOUY)               ; STORES CURRENT POS TO MOUX/Y
00001062  C03C 0007                143              AND.B   #7,D0                   ; AND TO GET ONLY THE LAST 3 BITS
00001066  1439 00002004            144              MOVE.B  (MOUVAL),D2             ; COMPUTE EDGE
0000106C  4602                     145              NOT.B   D2                      ; EDGE=NOT(PREVIOUS) AND CURRENT
0000106E  C400                     146              AND.B   D0,D2
00001070  13C0 00002004            147              MOVE.B  D0,(MOUVAL)             ; STORES MOUSE STATUS TO MOUVAL 
00001076  13C2 00002005            148              MOVE.B  D2,(MOUEDGE)            ; STORES MOUEDGE
0000107C                           149                  
0000107C  4E73                     150              RTE
0000107E                           151  
0000107E                           152  ; =============================================================================
0000107E                           153  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000107E                           154  ; =============================================================================
0000107E                           155  
0000107E                           156  ; -----------------------------------------------------------------------------
0000107E                           157  SCRINIT
0000107E                           158  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS AS FOLLOWS:
0000107E                           159  ; * INSTALLS SCRUPD INTO TRAP #SCRTRAP
0000107E                           160  ; * SETS OUTPUT RESOLUTION TO SCRWIDTH*SCRHEIGH
0000107E                           161  ; * SETS OUTPUT TO WINDOWED MODE
0000107E                           162  ; * ENABLES DOUBLE BUFFER AND CLEARS BOTH SCREEN BUFFERS
0000107E                           163  ; INPUT    - NONE
0000107E                           164  ; OUTPUT   - NONE
0000107E                           165  ; MODIFIES - ALL REGISTERS CAN BE MODIFIED
0000107E                           166  ; -----------------------------------------------------------------------------
0000107E  21FC 000010B6 0080       167              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001086  223C 03200258            168              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000108C  103C 0021                169              MOVE.B  #33,D0
00001090  4E4F                     170              TRAP    #15
00001092  7201                     171              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001094  4E4F                     172              TRAP    #15
00001096  323C FF00                173              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000109A  103C 000B                174              MOVE.B  #11,D0
0000109E  4E4F                     175              TRAP    #15
000010A0  123C 0011                176              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
000010A4  103C 005C                177              MOVE.B  #92,D0
000010A8  4E4F                     178              TRAP    #15
000010AA  323C FF00                179              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010AE  103C 000B                180              MOVE.B  #11,D0
000010B2  4E4F                     181              TRAP    #15
000010B4  4E75                     182              RTS
000010B6                           183  
000010B6                           184  ; -----------------------------------------------------------------------------
000010B6                           185  SCRUPD
000010B6                           186  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
000010B6                           187  ; BUFFER FOR THE NEXT ONE. PERFORMS TWO TASKS:
000010B6                           188  ; * CLEARS ACTIVE (HIDDEN) GRAPHICS BUFFER
000010B6                           189  ; * SWITCHES ACTIVE AND VISIBLE GRAPHICS BUFFER
000010B6                           190  ; INPUT    - NONE
000010B6                           191  ; OUTPUT   - NONE
000010B6                           192  ; MODIFIES - NONE
000010B6                           193  ; -----------------------------------------------------------------------------
000010B6  48A7 C000                194              MOVEM.W D0-D1,-(A7)
000010BA  103C 005E                195              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010BE  4E4F                     196              TRAP    #15
000010C0  323C FF00                197              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010C4  103C 000B                198              MOVE.B  #11,D0
000010C8  4E4F                     199              TRAP    #15
000010CA  4C9F 0003                200              MOVEM.W (A7)+,D0-D1
000010CE  4E73                     201              RTE
000010D0                           202  
000010D0                           203  
000010D0                           204  
000010D0                           205  
000010D0                           206  
000010D0                           207  
000010D0                           208  
000010D0                           209  -------------------- end include --------------------
000010D0                           210              INCLUDE "CONST.X68"             ; USER CONSTANTS
000010D0                           211  ; =============================================================================
000010D0                           212  ; TITLE    : USER CONSTANTS
000010D0                           213  ; AUTHOR   : ANTONI BURGUERA
000010D0                           214  ; HISTORY  : 05-JULY-2021 - CREATION
000010D0                           215  ; COMMENTS : * MOST OF THE CONSTANTS HELP IN PRODUCING A CLEAN CODE
000010D0                           216  ;              IN ACCORDANCE TO THE ASSIGNMENT SPECS, THOUGH THEIR USE IS
000010D0                           217  ;              NOT MANDATORY AS LONG AS THE ASSIGNMENT SPECS ARE FOLLOWED.
000010D0                           218  ;
000010D0                           219  ;            * THE UICOLORS ARE THE BASIC USER INTERFACE COLORS. USING THEM
000010D0                           220  ;              WILL LEAD TO A VISUALLY CONSISTENT USER INTERFACE.
000010D0                           221  ;
000010D0                           222  ;            * THE CHARACTER SIZES SPECIFY WIDTH AND HEIGHT IN PIXELS OF THE
000010D0                           223  ;              TEXT CHARACTERS. THIS SIZE DEPENDS ON THE SYSTEM (WINDOWS) FONTS
000010D0                           224  ;              AND CAN CHANGE FROM ONE COMPUTER TO ANOTHER. FEEL FREE TO ADAPT
000010D0                           225  ;              THEM TO YOUR OWN COMPUTER.
000010D0                           226  ;
000010D0                           227  ;            * CHARACTER SIZES ARE SPECIFIED AS AN EXPONENT AND THE SIZE ITSELF
000010D0                           228  ;              THE EXPONENT IS USEFUL TO MULTIPLY/DIVIDE, WHEN NECESSARY,
000010D0                           229  ;              USING SHIFTS. DEPENDING ON YOUR SYSTEM (WINDOWS) FONTS, CHAR
000010D0                           230  ;              SIZES MAY NOT BE POWER OF TWO. IF THIS IS THE CASE, DO YOUR BEST
000010D0                           231  ;              TO AVOID MULU AND DIVU.
000010D0                           232  ;
000010D0                           233  ;            * MOST OF THE GRD CONSTANTS ARE EXPRESSIONS TO EASE TESTING
000010D0                           234  ;              DIFFERENT RESOLUTIONS. IF TESTS WITH OTHER RESOLUTIONS ARE
000010D0                           235  ;              PERFORMED, TAKE INTO ACCOUNT THAT ALL EXPRESSIONS MUST EVALUATE
000010D0                           236  ;              TO INTEGER. IF THEY DON'T, UNEXPECTED RESULTS CAN HAPPEN.
000010D0                           237  ; =============================================================================
000010D0                           238  
000010D0                           239  ; --- UI COLORS ---------------------------------------------------------------
000010D0                           240  
000010D0  =00000000                241  CLRBLACK    EQU     $00000000               ; BLACK
000010D0  =00FFFFFF                242  CLRWHITE    EQU     $00FFFFFF               ; WHITE
000010D0  =00005500                243  CLRDKGRN    EQU     $00005500               ; DARK GREEN
000010D0  =00006600                244  CLRMDGRN    EQU     $00006600               ; MEDIUN GREEN
000010D0  =0000AA00                245  CLRLTGRN    EQU     $0000AA00               ; LIGHT GREEN
000010D0  =00FF0000                246  CLRLTBLU    EQU     $00FF0000               ; LIGHT BLUE
000010D0  =000000FF                247  CLRLTRED    EQU     $000000FF               ; LIGHT RED
000010D0                           248  
000010D0                           249  ; --- CHARACTER SIZES ---------------------------------------------------------
000010D0                           250  
000010D0  =00000004                251  CHRSHHEI    EQU     4                       ; CHARACTER HEIGHT AS EXPONENT OF 2
000010D0  =00000003                252  CHRSHWID    EQU     3                       ; CHARACTER WIDTH AS EXPONENT OF 2
000010D0  =00000010                253  CHRHEIGH    EQU     1<<CHRSHHEI             ; CHARACTER HEIGHT
000010D0  =00000008                254  CHRWIDTH    EQU     1<<CHRSHWID             ; CHARACTER WIDTH
000010D0                           255  
000010D0                           256  ; --- BUTTON ------------------------------------------------------------------
000010D0                           257  
000010D0  =00000004                258  BTNPENWD    EQU     4                       ; BUTTON LINE WIDTH
000010D0  =00005500                259  BTNPENCL    EQU     CLRDKGRN                ; BUTTON LINE COLOR
000010D0  =0000AA00                260  BTNSELCL    EQU     CLRLTGRN                ; BUTTON SELECTED FILL COLOR
000010D0  =00006600                261  BTNPRSCL    EQU     CLRMDGRN                ; BUTTON PRESSED FILL COLOR
000010D0  =00000006                262  BTNSZVDB    EQU     6                       ; SIZE (BYTES) OF VDB
000010D0                           263  
000010D0                           264  ; --- BUTTON LIST -------------------------------------------------------------
000010D0                           265  
000010D0  =0000000A                266  BTLMXVDB    EQU     10                      ; SIZE OF THE BUTTON LIST (ITEMS)
000010D0  =00000028                267  BTLVERSZ    EQU     40                      ; HEIGHT OF BUTTONS
000010D0  =0000000A                268  BTLVEMRG    EQU     10                      ; VERTICAL VISUAL MARGIN (TOP&BOT)
000010D0  =0000000A                269  BTLHOMRG    EQU     10                      ; HORIZONTAL VISUAL MARGIN (L & R)
000010D0                           270  
000010D0                           271  ; --- APPLICATION -------------------------------------------------------------
000010D0                           272  
000010D0  =00000000                273  GOLSPAUS    EQU     0                       ; PAUSED STATE
000010D0  =00000001                274  GOLSEXEC    EQU     1                       ; EXECUTION STATE
000010D0  =000000FA                275  GOLMAXGN    EQU     250                     ; MAXIMUM NUMBER OF GENERATIONS
000010D0                           276  
000010D0                           277  ; --- GRID --------------------------------------------------------------------
000010D0                           278  
000010D0  =00FF0000                279  GRDCOLP1    EQU     CLRLTBLU                ; PLAYER 1 COLOR
000010D0  =000000FF                280  GRDCOLP2    EQU     CLRLTRED                ; PLAYER 2 COLOR
000010D0  =00000006                281  GRDSHWID    EQU     6                       ; SHIFT TO ACHIEVE GRDWIDTH
000010D0  =00000005                282  GRDSHHEI    EQU     5                       ; SHIFT TO ACHIEVE GRDHEIGH
000010D0  =00000040                283  GRDWIDTH    EQU     1<<GRDSHWID             ; NUMBER OF GRID COLUMNS
000010D0  =00000020                284  GRDHEIGH    EQU     1<<GRDSHHEI             ; NUMBER OF ROWS
000010D0  =0000003F                285  GRDMSWID    EQU     GRDWIDTH-1              ; MASK TO GET X FROM GRID OFFSET
000010D0  =0000001F                286  GRDMSHEI    EQU     GRDHEIGH-1              ; MASK TO GET Y FROM GRID OFFSET
000010D0  =00000300                287  GRDPXWID    EQU     768                     ; GRID DISPLAY WIDTH (PIXELS)
000010D0  =00000180                288  GRDPXHEI    EQU     GRDHEIGH*GRDPXWID/GRDWIDTH ; GRID DISPLAY HEIGHT (PIXELS)
000010D0  =0000000C                289  GRDSZCEL    EQU     GRDPXWID/GRDWIDTH       ; GRID CELL SIZE (PIXELS)
000010D0  =0000006E                290  GRDVEMRG    EQU     3*BTLVEMRG+2*BTLVERSZ   ; TOP MARGIN (2 BUTTON ROWS)
000010D0  =00000010                291  GRDXOFF     EQU     (SCRWIDTH-GRDPXWID)/2   ; X OFFSETS TO DISPLAY CENTERED GRID
000010D0  =0000009E                292  GRDYOFF     EQU     (SCRHEIGH-GRDPXHEI+GRDVEMRG-BTLVEMRG)/2 ; Y OFFSET CENT. GRD
000010D0  =00000002                293  GRDSCP1X    EQU     GRDXOFF/CHRWIDTH        ; PLAYER 1 SCORE X (CHAR RESOL.)
000010D0  =00000009                294  GRDSCP1Y    EQU     GRDYOFF/CHRHEIGH        ; PLAYER 1 SCORE Y (CHAR RESOL.)
000010D0  =0000005E                295  GRDSCP2X    EQU     (GRDXOFF+GRDPXWID)/CHRWIDTH-4 ; PLAYER 2 SCORE X (CHAR RES.)
000010D0  =00000009                296  GRDSCP2Y    EQU     GRDYOFF/CHRHEIGH        ; PLAYER 2 SCORE Y (CHAR RESOL.)
000010D0  =00000030                297  GRDSCNGX    EQU     (SCRWIDTH/(CHRWIDTH*2))-2 ; NUM. GENER. X (CHAR RESOL.)
000010D0  =00000009                298  GRDSCNGY    EQU     GRDYOFF/CHRHEIGH        ; NUM. GENER. Y (CHAR RESOL.)
000010D0  =00000009                299  -------------------- end include --------------------
000010D0                           300              INCLUDE "UTIL.X68"              ; UTILITY CODE
000010D0                           301  ; =============================================================================
000010D0                           302  ; TITLE    : UTILITY SUBROUTINES
000010D0                           303  ; AUTHOR   : ANTONI BURGUERA
000010D0                           304  ; HISTORY  : 05-JULY-2021 - CREATION
000010D0                           305  ; COMMENTS : GENERAL PURPOSE SUBROUTINES.
000010D0                           306  ; =============================================================================
000010D0                           307  
000010D0                           308  ; -----------------------------------------------------------------------------
000010D0                           309  UTLINIT
000010D0                           310  ; INITIALIZES UTILITIES.
000010D0                           311  ; INPUT    : NONE
000010D0                           312  ; OUTPUT   : NONE
000010D0                           313  ; MODIFIES : NONE
000010D0                           314  ; -----------------------------------------------------------------------------
000010D0  4239 00002006            315              CLR.B   (UTLRNDIX)
000010D6  4E75                     316              RTS
000010D8                           317  
000010D8                           318  ; -----------------------------------------------------------------------------
000010D8                           319  UTLSTRLN
000010D8                           320  ; COMPUTES THE LENGTH OF A ZERO-TERMINATED STRING
000010D8                           321  ; INPUT    - A1 POINTER TO THE STRING
000010D8                           322  ; OUTPUT   - D0.W STRING LENGTH
000010D8                           323  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010D8                           324  ; -----------------------------------------------------------------------------
000010D8  2F09                     325              MOVE.L  A1,-(A7)
000010DA  4240                     326              CLR.W   D0
000010DC  4A19                     327  .LOOP       TST.B   (A1)+
000010DE  6700 0006                328              BEQ     .END
000010E2  5240                     329              ADDQ.W  #1,D0
000010E4  60F6                     330              BRA     .LOOP
000010E6  225F                     331  .END        MOVE.L  (A7)+,A1
000010E8  4E75                     332              RTS
000010EA                           333  
000010EA                           334  ; -----------------------------------------------------------------------------
000010EA                           335  UTLRAND
000010EA                           336  ; PROVIDES A PSEUDO-RANDOM COIN FLIP (RETURNS 1 OR 2)
000010EA                           337  ; INPUT    - NONE
000010EA                           338  ; OUTPUT   - D1.L RANDOM VALUE (ONLY BYTE)
000010EA                           339  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010EA                           340  ; -----------------------------------------------------------------------------
000010EA  2F08                     341              MOVE.L  A0,-(A7)
000010EC  41F9 00001108            342              LEA     .RANDVEC,A0
000010F2  4281                     343              CLR.L   D1
000010F4  1239 00002006            344              MOVE.B  (UTLRNDIX),D1
000010FA  1230 1800                345              MOVE.B  (A0,D1.L),D1
000010FE  5239 00002006            346              ADDQ.B  #1,(UTLRNDIX)
00001104  205F                     347              MOVE.L  (A7)+,A0
00001106  4E75                     348              RTS
00001108                           349  
00001108= 02 02 02 02 01 02 ...    350  .RANDVEC    DC.B    2, 2, 2, 2, 1, 2, 1, 2
00001110= 01 01 01 02 01 01 ...    351              DC.B    1, 1, 1, 2, 1, 1, 1, 2
00001118= 02 01 02 01 01 02 ...    352              DC.B    2, 1, 2, 1, 1, 2, 2, 1
00001120= 02 01 02 01 01 01 ...    353              DC.B    2, 1, 2, 1, 1, 1, 1, 2
00001128= 02 02 01 01 02 02 ...    354              DC.B    2, 2, 1, 1, 2, 2, 1, 1
00001130= 02 01 02 02 02 01 ...    355              DC.B    2, 1, 2, 2, 2, 1, 1, 1
00001138= 02 02 01 01 01 01 ...    356              DC.B    2, 2, 1, 1, 1, 1, 1, 2
00001140= 01 01 01 02 01 02 ...    357              DC.B    1, 1, 1, 2, 1, 2, 1, 2
00001148= 02 02 02 02 01 02 ...    358              DC.B    2, 2, 2, 2, 1, 2, 1, 2
00001150= 01 01 02 02 02 01 ...    359              DC.B    1, 1, 2, 2, 2, 1, 2, 1
00001158= 02 02 02 01 01 02 ...    360              DC.B    2, 2, 2, 1, 1, 2, 1, 1
00001160= 01 02 01 01 01 02 ...    361              DC.B    1, 2, 1, 1, 1, 2, 1, 2
00001168= 01 02 02 01 02 01 ...    362              DC.B    1, 2, 2, 1, 2, 1, 2, 2
00001170= 01 02 01 02 01 01 ...    363              DC.B    1, 2, 1, 2, 1, 1, 2, 1
00001178= 01 02 01 01 01 01 ...    364              DC.B    1, 2, 1, 1, 1, 1, 1, 1
00001180= 02 01 01 02 01 01 ...    365              DC.B    2, 1, 1, 2, 1, 1, 1, 2
00001188= 02 01 01 01 01 02 ...    366              DC.B    2, 1, 1, 1, 1, 2, 1, 1
00001190= 01 01 02 01 01 02 ...    367              DC.B    1, 1, 2, 1, 1, 2, 1, 2
00001198= 02 02 01 01 02 02 ...    368              DC.B    2, 2, 1, 1, 2, 2, 2, 2
000011A0= 01 01 02 01 02 02 ...    369              DC.B    1, 1, 2, 1, 2, 2, 1, 2
000011A8= 01 02 01 02 02 02 ...    370              DC.B    1, 2, 1, 2, 2, 2, 2, 1
000011B0= 01 01 02 02 01 01 ...    371              DC.B    1, 1, 2, 2, 1, 1, 2, 1
000011B8= 02 02 01 02 01 02 ...    372              DC.B    2, 2, 1, 2, 1, 2, 1, 1
000011C0= 02 01 02 01 01 02 ...    373              DC.B    2, 1, 2, 1, 1, 2, 1, 2
000011C8= 01 01 02 02 02 01 ...    374              DC.B    1, 1, 2, 2, 2, 1, 1, 1
000011D0= 01 01 02 02 01 02 ...    375              DC.B    1, 1, 2, 2, 1, 2, 1, 2
000011D8= 01 02 01 01 01 02 ...    376              DC.B    1, 2, 1, 1, 1, 2, 1, 1
000011E0= 02 01 01 02 01 02 ...    377              DC.B    2, 1, 1, 2, 1, 2, 2, 2
000011E8= 02 01 01 01 02 02 ...    378              DC.B    2, 1, 1, 1, 2, 2, 1, 1
000011F0= 02 02 02 01 02 02 ...    379              DC.B    2, 2, 2, 1, 2, 2, 1, 2
000011F8= 01 02 01 01 02 01 ...    380              DC.B    1, 2, 1, 1, 2, 1, 2, 2
00001200= 02 02 02 01 01 01 ...    381              DC.B    2, 2, 2, 1, 1, 1, 1, 2
00001200= 02 02 02 01 01 01 ...    382  -------------------- end include --------------------
00001208                           383              INCLUDE "BUTTON.X68"            ; BUTTON MANAGEMENT
00001208                           384  ; =============================================================================
00001208                           385  ; TITLE    : BUTTON MANAGEMENT
00001208                           386  ; AUTHOR   : ANTONI BURGUERA
00001208                           387  ; HISTORY  : 05-JULY-2021 - CREATION
00001208                           388  ; COMMENTS : * A BUTTON IS DEFINED BY A STATIC DATA BLOCK (SDB), WHICH DOES NOT
00001208                           389  ;              CHANGE OVER TIME, AND A VARIABLE DATA BLOCK (VDB), THAT CAN
00001208                           390  ;              CHANGE OVER TIME. CHANGES IN THE VDB ARE PRODUCED WHEN CALLING
00001208                           391  ;              SUBROUTINE BTNUPD.
00001208                           392  ;
00001208                           393  ;            * THE BUTTON SDB (CAN BE IN ROM) HAS THE FOLLOWING FIELDS. THE
00001208                           394  ;              NUMBER DENOTES THE OFFSET WITH RESPECT TO THE SDB START:
00001208                           395  ;
00001208                           396  ;                +0  - WORD - YTOP COORDINATE (PIXELS)
00001208                           397  ;                +2  - WORD - XLEFT COORDINATE (PIXELS)
00001208                           398  ;                +4  - WORD - HEIGHT (PIXELS)
00001208                           399  ;                +6  - WORD - WIDTH (PIXELS)
00001208                           400  ;                +8  - LONG - CALLBACK POINTER
00001208                           401  ;                +12 - BYTE STRING - ZERO TERMINATED STRING. TEXT TO SHOW.
00001208                           402  ;
00001208                           403  ;            * THE BUTTON VDB (MUST BE IN RAM) IS:
00001208                           404  ;
00001208                           405  ;                +0 - LONG - POINTER TO THE STATIC DATABLOCK
00001208                           406  ;                +4 - BYTE - STATUS WITH FORMAT XXXXXCPI WHERE:
00001208                           407  ;                            - I (BIT 0) - 1=MOUSE INSIDE, 0=MOUSE OUTSIDE
00001208                           408  ;                            - P (BIT 1) - 1=MOUSE PRESSED INSIDE
00001208                           409  ;                                          0=MOUSE NOT PRESSED INSIDE
00001208                           410  ;                            - C (BIT 2) - 1=MOUSE CLICKED INSIDE
00001208                           411  ;                                          0=MOUSE NOT CLICKED INSIDE
00001208                           412  ;                            NOTE THAT IF I=0 THEN P=C=0, IF I=1 AND P=0
00001208                           413  ;                            THEN C=0.
00001208                           414  ; =============================================================================
00001208                           415  
00001208                           416  ; -----------------------------------------------------------------------------
00001208                           417  BTNINIT
00001208                           418  ; INITIALIZES THE BUTTON BY:
00001208                           419  ;  * COPYING THE SDB POINTER INTO THE VDB.
00001208                           420  ;  * CLEARING THE STATUS BYTE.
00001208                           421  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001208                           422  ;            A1 - POINTER TO THE STATIC DATABLOCK
00001208                           423  ; OUTPUT   : NONE
00001208                           424  ; MODIFIES : NONE
00001208                           425  ; -----------------------------------------------------------------------------
00001208                           426  
00001208  48E7 FFC0                427              MOVEM.L D0-D7/A0-A1,-(A7)       ; Save content registers
0000120C                           428              
0000120C  2089                     429              MOVE.L  A1,(A0)                 ; Copy SDB pointer into VDB
0000120E  4228 0004                430              CLR.B   4(A0)                   ; CLEAR STATUS BYTE(VDB)                
00001212                           431  
00001212  4CDF 03FF                432              MOVEM.L (A7)+,D0-D7/A0-A1       ; Restore content resgiters
00001216                           433              
00001216  4E75                     434              RTS
00001218                           435  
00001218                           436  ; -----------------------------------------------------------------------------
00001218                           437  BTNUPD
00001218                           438  ; UPDATES THE BUTTON VDB AND EXECUTES THE CALLBACK IF REQUIRED
00001218                           439  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001218                           440  ; OUTPUT   : NONE
00001218                           441  ; MODIFIES : NONE
00001218                           442  ; -----------------------------------------------------------------------------
00001218                           443              
00001218  48E7 FCE0                444              MOVEM.L D0-D5/A0-A2,-(A7)       ; Save content registers
0000121C                           445              
0000121C  117C 0000 0004           446              MOVE.B   #0,4(A0)               ; CLEAR STATUS BYTE
00001222  2250                     447              MOVE.L  (A0),A1                 ; COPY @ SDB OF BUTTON
00001224                           448              
00001224                           449              ; COPY MOUSE POSITION
00001224  3039 00002000            450              MOVE.W  MOUY,D0                 ; COPY MOUSE Y POSITION
0000122A  3239 00002002            451              MOVE.W  MOUX,D1                 ; COPY MOUSE X POSITION
00001230                           452              
00001230                           453              ; GET BUTTON POSITION
00001230  3419                     454              MOVE.W  (A1)+,D2                ; TOP Y
00001232  3619                     455              MOVE.W  (A1)+,D3                ; LEFT X
00001234  3819                     456              MOVE.W  (A1)+,D4                ; HEIGHT
00001236  3A19                     457              MOVE.W  (A1)+,D5                ; WIDTH  
00001238                           458              
00001238                           459              ; IF D2<D0 MOUSE NOT INSIDE (IS UPPER THAN THE BUTTON)
00001238  B042                     460              CMP.W   D2,D0
0000123A  6D00 004A                461              BLT     .MOUSEOUT
0000123E                           462              
0000123E                           463              ; IF D3<D1 MOUSE NOT INSIDE (IS ON THE LEFT SIDE)
0000123E  B243                     464              CMP.W   D3,D1
00001240  6D00 0044                465              BLT     .MOUSEOUT
00001244                           466              
00001244                           467              ; IF D4>D0 MOUSE NOT INSIDE (IS LOWER THAN THE BUTTON)
00001244  D842                     468              ADD.W   D2,D4
00001246  B044                     469              CMP.W   D4,D0
00001248  6E00 003C                470              BGT     .MOUSEOUT
0000124C                           471              
0000124C                           472              ; IF D5>D0 MOUSE NOT INSIDE (IS ON THE RIGHT SIDE)
0000124C  DA43                     473              ADD.W   D3,D5
0000124E  B245                     474              CMP.W   D5,D1
00001250  6E00 0034                475              BGT     .MOUSEOUT
00001254                           476  
00001254                           477              ; UPDATE VDB 
00001254  117C 0001 0004           478              MOVE.B  #1,4(A0)                ; I (BIT 0) = 1
0000125A  0839 0000 00002004       479              BTST    #0,MOUVAL               ; BUTTON NOT PRESSED?
00001262  6700 0026                480              BEQ     .END                    ; BUTTON NOT PRESSED
00001266  117C 0003 0004           481              MOVE.B  #3,4(A0)                ; P (BIT 1) = 1
0000126C  0839 0000 00002005       482              BTST    #0,MOUEDGE              ; BUTTON NOT CLICKED?
00001274  6700 0014                483              BEQ     .END                    ; BUTTON NOT CLICKED
00001278  117C 0007 0004           484              MOVE.B  #7,4(A0)                ; C (BIT 2) = 1
0000127E                           485              
0000127E                           486              ; EXECUTE CALLBACK
0000127E  2451                     487              MOVE.L  (A1),A2                 ; COPY @ CALLBACK
00001280  4E92                     488              JSR     (A2)                    ; JUMP TO CALLBACK SUBR
00001282  6000 0006                489              BRA     .END                    
00001286                           490              
00001286  4228 0004                491  .MOUSEOUT   CLR.B   4(A0)                   ; I,P,C = 0
0000128A                           492  
0000128A  4CDF 073F                493  .END        MOVEM.L (A7)+,D0-D5/A0-A2       ; Restore content resgiters
0000128E                           494             
0000128E  4E75                     495              RTS
00001290                           496  
00001290                           497  ; -----------------------------------------------------------------------------
00001290                           498  BTNPLOT
00001290                           499  ; PLOTS THE BUTTON. A RECTANGLE IS DRAWN WITH THICKNESS BTNPENWD. THE CONTOUR
00001290                           500  ; COLOR IS BTNPENCL. THE FILL COLOR IS BLACK IF THE MOUSE IS NOT INSIDE,
00001290                           501  ; BTNSELCL IF THE MOUSE IS INSIDE BUT THE MOUSE BUTTON IS NOT PRESSED AND
00001290                           502  ; BTNPRSCL IF THE MOUSE BUTTON IS PRESSED INSIDE.
00001290                           503  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001290                           504  ; OUTPUT   : NONE
00001290                           505  ; MODIFIES : NONE
00001290                           506  ; -----------------------------------------------------------------------------
00001290                           507  
00001290  48E7 FFE0                508              MOVEM.L D0-D7/A0-A2,-(A7)       ; Save content registers
00001294                           509              
00001294  103C 0050                510              MOVE.B  #80,D0
00001298  223C 00005500            511              MOVE.L  #BTNPENCL,D1
0000129E  4E4F                     512              TRAP    #15
000012A0                           513              
000012A0                           514              ; SET PEN WIDTH/THICKNESS
000012A0  103C 005D                515              MOVE.B  #93,D0
000012A4  7204                     516              MOVE.L  #BTNPENWD,D1
000012A6  4E4F                     517              TRAP    #15
000012A8                           518              ; DRAW FILL COLOR BUTTON
000012A8  0C28 0001 0004           519              CMP.B   #1,4(A0)                
000012AE  6700 0018                520              BEQ     .MOUIN
000012B2  7200                     521              MOVE.L  #CLRBLACK,D1            ; MOUSE OUTSIDE
000012B4  0C28 0003 0004           522              CMP.B   #3,4(A0) 
000012BA  6600 0012                523              BNE     .EXIT 
000012BE  223C 00006600            524              MOVE.L  #BTNPRSCL,D1            ; MOUSE PRESSED
000012C4  6000 0008                525              BRA     .EXIT              
000012C8  223C 0000AA00            526  .MOUIN      MOVE.L  #BTNSELCL,D1            ; MOUSE INSIDE
000012CE  103C 0051                527  .EXIT       MOVE.B  #81,D0                  ; SET FILL COLOR
000012D2  4E4F                     528              TRAP    #15
000012D4                           529              
000012D4  2250                     530              MOVE.L  (A0),A1                 ; COPY @ SDB OF BUTTON
000012D6  4281                     531              CLR.L   D1
000012D8                           532              
000012D8                           533              ; GET COORDINATES(UP)
000012D8  3419                     534              MOVE.W  (A1)+,D2                ; UPPER Y
000012DA  3219                     535              MOVE.W  (A1)+,D1                ; LEFT X
000012DC                           536              
000012DC                           537              ; GET HEIGHT
000012DC  3819                     538              MOVE.W  (A1)+,D4
000012DE  3F04                     539              MOVE.W  D4,-(A7)
000012E0                           540              
000012E0                           541              ; GET WIDTH 
000012E0  3619                     542              MOVE.W  (A1)+,D3
000012E2  3E03                     543              MOVE.W  D3,D7
000012E4                           544  
000012E4                           545              ; GET COORDINATES(LOW)
000012E4  D641                     546              ADD.W   D1,D3                   ; RIGHT X
000012E6  3A02                     547              MOVE.W  D2,D5                   
000012E8  DA44                     548              ADD.W   D4,D5                   ; LOWER Y
000012EA  3805                     549              MOVE.W  D5,D4 
000012EC                           550              
000012EC                           551             ; DRAW BUTTON
000012EC  103C 0057                552              MOVE.B  #87,D0
000012F0  4E4F                     553              TRAP    #15
000012F2                           554              
000012F2                           555              ; SET PEN COLOR
000012F2  3A01                     556              MOVE.W  D1,D5                   ; SAVE D1 CONTENT
000012F4  103C 0050                557              MOVE.B  #80,D0
000012F8  223C 00FFFFFF            558              MOVE.L  #CLRWHITE,D1
000012FE  4E4F                     559              TRAP    #15
00001300  4281                     560              CLR.L   D1
00001302  3205                     561              MOVE.W  D5,D1                   ; RESTORE D1
00001304                           562              
00001304                           563              ; GET & DRAW TEXT
00001304  5849                     564              ADD.W   #4,A1
00001306                           565              ; TEXTWIDTH  = NUMCAR*CHRWIDTH ; CHARACTER WIDTH
00001306                           566              ; TEXTHEIGHT = CHRHEIGH        ; CHARACTER HEIGHT
00001306  4285                     567              CLR.L   D5
00001308  2450                     568              MOVE.L  (A0),A2
0000130A  D4FC 000C                569              ADD.W   #12,A2
0000130E  1C1A                     570              MOVE.B  (A2)+,D6
00001310  BC7C 0000                571  .LOOP       CMP     #0,D6                   ; GET TEXT LENGTH            
00001314  6700 0008                572              BEQ     .DONE
00001318  5245                     573              ADD.W   #1,D5
0000131A  1C1A                     574              MOVE.B  (A2)+,D6                
0000131C  60F2                     575              BRA     .LOOP
0000131E  CAFC 0008                576  .DONE       MULU.W  #CHRWIDTH,D5
00001322  9E45                     577              SUB.W   D5,D7                   ; WIDTH-TEXTWIDTH
00001324  8EFC 0002                578              DIVU.W  #2,D7                   ; (WIDTH-TEXTWIDTH)/2
00001328  D247                     579              ADD.W   D7,D1                   ; LEFTX +(WIDTH-TEXTWIDTH)/2
0000132A                           580  
0000132A  381F                     581              MOVE.W  (A7)+,D4
0000132C  0444 0010                582              SUB.W   #CHRHEIGH,D4            ; HEIGHT-TEXTHEIGHT
00001330  88FC 0002                583              DIVU.W  #2,D4                   ; (HEIGHT-TEXTHEIGHT)/2
00001334  D444                     584              ADD.W   D4,D2                   ; UPPERY+(HEIGHT-TEXTHEIGHT)/2
00001336                           585              
00001336  103C 005F                586              MOVE.B  #95,D0
0000133A  4E4F                     587              TRAP    #15
0000133C                           588              
0000133C  4CDF 07FF                589              MOVEM.L (A7)+,D0-D7/A0-A2       ; Restore content resgiters
00001340                           590              
00001340  4E75                     591              RTS
00001342                           592                  
00001342                           593  
00001342                           594  
00001342                           595  -------------------- end include --------------------
00001342                           596              INCLUDE "BTNLIST.X68"           ; BUTTON LIST MANAGEMENT
00001342                           597  ; =============================================================================
00001342                           598  ; TITLE    : BUTTON LIST MANAGEMENT
00001342                           599  ; AUTHOR   : ANTONI BURGUERA
00001342                           600  ; HISTORY  : 05-JULY-2021 - CREATION
00001342                           601  ; COMMENTS : * ALLOWS ADDING, UPDATING AND PLOTTING A LIST OF BUTTONS. ALLOWS
00001342                           602  ;              REMOVING THEM ALL, BUT NOT INDIVIDUALLY.
00001342                           603  ;
00001342                           604  ;            * THE LIST OF BUTTONS IS STORED AS A LIST OF BUTTON'S VDB. THIS
00001342                           605  ;              LIST IS STORED AT BTLDATA.
00001342                           606  ;
00001342                           607  ;            * THE LIST OF VBD IS BUILT ASSUMING A MAXIMUM OF BTLMXVDB BUTTONS
00001342                           608  ;              AND A SIZE OF BTNSZVDB BYTES FOR EACH VDB.
00001342                           609  ; =============================================================================
00001342                           610  
00001342                           611  ; -----------------------------------------------------------------------------
00001342                           612  BTLINIT
00001342                           613  ; INITIALIZES BUTTON LIST BY SETTING ALL THE POINTERS TO STATIC DATA BLOCKS
00001342                           614  ; TO $FFFFFFFF.
00001342                           615  ; INPUT    : NONE
00001342                           616  ; OUTPUT   : NONE
00001342                           617  ; MODIFIES : NONE
00001342                           618  ; -----------------------------------------------------------------------------
00001342  48E7 8080                619              MOVEM.L D0/A0,-(A7)
00001346  41F9 00002008            620              LEA     BTLDATA,A0
0000134C  303C 0009                621              MOVE.W  #BTLMXVDB-1,D0          ; NUM ITERATIONS
00001350  20BC FFFFFFFF            622  .LOOP       MOVE.L  #$FFFFFFFF,(A0)         ; MARK SLOT AS EMPTY
00001356  5C88                     623              ADD.L   #BTNSZVDB,A0            ; GO TO NEXT SLOT
00001358  51C8 FFF6                624              DBRA.W  D0,.LOOP                ; LOOP FOR ALL SLOTS
0000135C  4CDF 0101                625              MOVEM.L (A7)+,D0/A0
00001360  4E75                     626              RTS
00001362                           627  
00001362                           628  ; -----------------------------------------------------------------------------
00001362  =00001342                629  BTLCLEAR    EQU     BTLINIT
00001362                           630  ; CLEARS THE BUTTON LIST. SAME AS BTLINIT.
00001362                           631  ; INPUT    : NONE
00001362                           632  ; OUTPUT   : NONE
00001362                           633  ; MODIFIES : NONE
00001362                           634  ; -----------------------------------------------------------------------------
00001362                           635  
00001362                           636  ; -----------------------------------------------------------------------------
00001362                           637  BTLADD
00001362                           638  ; ADDS A NEW BUTTON INTO THE BUTTON LIST AND INITS IT.
00001362                           639  ; INPUT    : A1 - POINTER TO THE BUTTON SDB
00001362                           640  ; OUTPUT   : NONE
00001362                           641  ; MODIFIES : NONE
00001362                           642  ; -----------------------------------------------------------------------------
00001362  48E7 8080                643              MOVEM.L A0/D0,-(A7)
00001366                           644  
00001366                           645              ; SEARCH FOR AN EMPTY SLOT
00001366                           646  
00001366  41F9 00002008            647              LEA     BTLDATA,A0
0000136C  303C 0009                648              MOVE.W  #BTLMXVDB-1,D0
00001370  0C90 FFFFFFFF            649  .LOOP       CMP.L   #$FFFFFFFF,(A0)
00001376  6700 000E                650              BEQ     .FOUND
0000137A  5C88                     651              ADD.L   #BTNSZVDB,A0
0000137C  51C8 FFF2                652              DBRA.W  D0,.LOOP
00001380                           653  
00001380                           654              ; NO SLOT? DO NOTHING
00001380                           655  
00001380  4CDF 0101                656  .END        MOVEM.L (A7)+,A0/D0
00001384  4E75                     657              RTS
00001386                           658  
00001386                           659              ; SLOT FOUND? PLACE THE BUTTON THERE BY CALLING BTNINIT
00001386                           660  
00001386  4EB8 1208                661  .FOUND      JSR     BTNINIT
0000138A  60F4                     662              BRA     .END
0000138C                           663  
0000138C                           664  ; -----------------------------------------------------------------------------
0000138C                           665  BTLUPD
0000138C                           666  ; CALLS BTNUPD FOR ALL THE BUTTONS IN THE BUTTON LIST.
0000138C                           667  ; INPUT    : NONE
0000138C                           668  ; OUTPUT   : NONE
0000138C                           669  ; MODIFIES : NONE
0000138C                           670  ; -----------------------------------------------------------------------------
0000138C                           671  
0000138C  48E7 8080                672              MOVEM.L A0/D0,-(A7)
00001390                           673  
00001390                           674              ; TRAVERSE THE LIST
00001390                           675  
00001390  41F9 00002008            676              LEA     BTLDATA,A0
00001396  303C 0009                677              MOVE.W  #BTLMXVDB-1,D0
0000139A  0C90 FFFFFFFF            678  .LOOP       CMP.L   #$FFFFFFFF,(A0)
000013A0  6700 000C                679              BEQ     .DONE
000013A4                           680  
000013A4                           681              ; UPDATE EACH BUTTON
000013A4                           682  
000013A4  4EB8 1218                683              JSR     BTNUPD
000013A8                           684  
000013A8                           685              ; GO TO THE NEXT BUTTON
000013A8                           686  
000013A8  5C88                     687              ADD.L   #BTNSZVDB,A0
000013AA  51C8 FFEE                688              DBRA.W  D0,.LOOP
000013AE                           689  
000013AE  4CDF 0101                690  .DONE       MOVEM.L (A7)+,A0/D0
000013B2  4E75                     691              RTS
000013B4                           692  
000013B4                           693  
000013B4                           694  ; -----------------------------------------------------------------------------
000013B4                           695  BTLPLOT
000013B4                           696  ; CALLS BTNPLOT FOR ALL THE BUTTONS IN THE BUTTON LIST.
000013B4                           697  ; INPUT    : NONE
000013B4                           698  ; OUTPUT   : NONE
000013B4                           699  ; MODIFIES : NONE
000013B4                           700  ; -----------------------------------------------------------------------------
000013B4                           701  
000013B4                           702  ; TODO : PLACE YOUR CODE HERE
000013B4                           703              ; JSR BTLUPD
000013B4                           704              ; RTS
000013B4  48E7 8080                705              MOVEM.L A0/D0,-(A7)             ; Save content registers
000013B8                           706              
000013B8  41F9 00002008            707              LEA     BTLDATA,A0              ; @ OF THE BUTTONS
000013BE  303C 0009                708              MOVE.W  #BTLMXVDB-1,D0
000013C2  0C90 FFFFFFFF            709  .LOOP       CMP.L   #$FFFFFFFF,(A0)         ; Until end of list
000013C8  6700 000C                710              BEQ     .DONE
000013CC                           711  
000013CC  4EB8 1290                712              JSR     BTNPLOT                 ; Calls BTNUPD
000013D0                           713  
000013D0  5C88                     714              ADD.L   #BTNSZVDB,A0            ; Next button
000013D2  51C8 FFEE                715              DBRA.W  D0,.LOOP
000013D6                           716              
000013D6  4CDF 0101                717  .DONE       MOVEM.L (A7)+,A0/D0             ; Restore content resgiters
000013DA                           718              
000013DA  4E75                     719              RTS
000013DC                           720  
000013DC                           721              
000013DC                           722  
000013DC                           723  
000013DC                           724  
000013DC                           725  
000013DC                           726  
000013DC                           727  
000013DC                           728  
000013DC                           729  
000013DC                           730  
000013DC                           731  
000013DC                           732  -------------------- end include --------------------
000013DC                           733              INCLUDE "GRID.X68"              ; GRID MANAGEMENT
000013DC                           734  ; =============================================================================
000013DC                           735  ; TITLE    : GRID MANAGEMENT
000013DC                           736  ; AUTHOR   : ANTONI BURGUERA
000013DC                           737  ; HISTORY  : 05-JULY-2021 - CREATION
000013DC                           738  ; COMMENTS : * THERE ARE TWO MATRICES (GRDMATR0 AND GRDMATR1) AND TWO POINTERS
000013DC                           739  ;              TO THESE MATRICES (GRDSRC AND GRDDST).
000013DC                           740  ;
000013DC                           741  ;            * THE MATRIX TO BE PLOTTED IS ALWAYS THE ONE POINTED BY GRDDST.
000013DC                           742  ;
000013DC                           743  ;            * THE MATRIX TO BE UPDATED BY THE MOUSE (GRDMUPD) IS ALWAYS THE
000013DC                           744  ;              ONE POINTED BY GRDDST.
000013DC                           745  ;
000013DC                           746  ;            * THE RULES-UPDATE (GRDRUPD) SWITCHES THE POINTERS AND THEN READS
000013DC                           747  ;              THE NEW SOURCE MATRIX (GRDSRC) TO DETERMINE THE NUMBER OF
000013DC                           748  ;              NEIGHBORS. THE RESULTING CELL VALUE IS WRITTEN TO THE DESTINA-
000013DC                           749  ;              TION MATRIX, POINTED BY GRDDST.
000013DC                           750  ; =============================================================================
000013DC                           751  
000013DC                           752  ; -----------------------------------------------------------------------------
000013DC                           753  GRDINIT
000013DC                           754  ; INITIALIZE THE GRID AS FOLLOWS:
000013DC                           755  ; * POINTS THE SOURCE GRID POINTER TO GRDMATR0.
000013DC                           756  ; * POINTS THE DESTINATION GRID POINTER TO GRDMATR1.
000013DC                           757  ; * RESETS THE COUNTERS (GRDNPLR1, GRDNPLR2, GRDNGEN).
000013DC                           758  ; * FILLS THE TWO MATRICES (GRDMATR0 AND GRDMATR1) WITH ZEROS.
000013DC                           759  ; INPUT    : NONE
000013DC                           760  ; OUTPUT   : NONE
000013DC                           761  ; MODIFIES : NONE
000013DC                           762  ; -----------------------------------------------------------------------------
000013DC  48E7 8080                763              MOVEM.L A0/D0,-(A7)
000013E0  23FC 0000204C 00002044   764              MOVE.L  #GRDMATR0,(GRDSRC)
000013EA  23FC 0000284C 00002048   765              MOVE.L  #GRDMATR1,(GRDDST)
000013F4  4279 0000304C            766              CLR.W   (GRDNPLR1)
000013FA  4279 0000304E            767              CLR.W   (GRDNPLR2)
00001400  4279 00003050            768              CLR.W   (GRDNGEN)
00001406  41F9 0000204C            769              LEA     GRDMATR0,A0
0000140C  303C 0FFF                770              MOVE.W  #GRDWIDTH*GRDHEIGH*2-1,D0
00001410  4218                     771  .LOOP       CLR.B   (A0)+
00001412  51C8 FFFC                772              DBRA.W  D0,.LOOP
00001416  4CDF 0101                773              MOVEM.L (A7)+,A0/D0
0000141A  4E75                     774              RTS
0000141C                           775  
0000141C                           776  ; -----------------------------------------------------------------------------
0000141C                           777  GRDMUPD
0000141C                           778  ; GRID UPDATE USING MOUSE. THE INTERFACE IS AS FOLLOWS:
0000141C                           779  ; * IF MOUSE IS NOT PRESSED OR IS OUTSIDE THE PLOTTED GRID, DOES NOTHING.
0000141C                           780  ; * IF LEFT MOUSE BUTTON IS PRESSED INSIDE THE GRID:
0000141C                           781  ;   - A PLAYER 1 (VALUE=1) CELL IS CREATED AT THE MOUSE POSITION IF THE MOUSE
0000141C                           782  ;     IS ON THE LEFT HALF OF THE GRID.
0000141C                           783  ;   - A PLAYER 2 (VALUE=2) CELL IS CREATED AT THE MOUSE POSITION IF THE MOUSE
0000141C                           784  ;     IS ON THE RIGHT HALF OF THE GRID.
0000141C                           785  ; * IF RIGHT MOUSE BUTTON IS PRESSED INSIDE THE GRID, THE CELL WHERE THE MOUSE
0000141C                           786  ;   IS IS CLEARED (VALUE=0).
0000141C                           787  ; INPUT    : NONE
0000141C                           788  ; OUTPUT   : NONE
0000141C                           789  ; MODIFIES : NONE
0000141C                           790  ; -----------------------------------------------------------------------------
0000141C                           791  
0000141C                           792  ; TODO : PLACE YOUR CODE HERE
0000141C                           793  
0000141C                           794  
0000141C  48E7 FFFE                795              MOVEM.L D0-D7/A0-A6,-(A7)       ; SAVE CONTENT REGISTERS
00001420                           796  
00001420  3039 00002000            797              MOVE.W  MOUY,D0                 ; COPY MOUSE Y POSITION
00001426  3239 00002002            798              MOVE.W  MOUX,D1                 ; COPY MOUSE X POSITION
0000142C                           799              
0000142C                           800              ;MOUSE INSIDE?
0000142C                           801              ; GET GRID POSITION
0000142C  343C 009E                802              MOVE.W  #GRDYOFF,D2             ; TOP Y
00001430  363C 0010                803              MOVE.W  #GRDXOFF,D3             ; LEFT X
00001434                           804                          
00001434                           805              ; IF D2<D0 MOUSE NOT INSIDE (IS UPPER THAN THE BUTTON)
00001434  B042                     806              CMP.W   D2,D0
00001436  6D00 00E0                807              BLT     .END
0000143A                           808              ; IF D3<D1 MOUSE NOT INSIDE (IS ON THE LEFT SIDE)
0000143A  B243                     809              CMP.W   D3,D1
0000143C  6D00 00DA                810              BLT     .END
00001440                           811              ; IF D4>D0 MOUSE NOT INSIDE (IS LOWER THAN THE BUTTON)
00001440  3802                     812              MOVE.W  D2,D4
00001442  0644 0180                813              ADD.W   #GRDPXHEI,D4            ; BOTTOM Y
00001446  5344                     814              SUB.W   #1,D4
00001448  B044                     815              CMP.W   D4,D0
0000144A  6E00 00CC                816              BGT     .END
0000144E                           817              ; IF D5>D0 MOUSE NOT INSIDE (IS ON THE RIGHT SIDE)
0000144E  3A03                     818              MOVE.W  D3,D5
00001450  0645 0300                819              ADD.W   #GRDPXWID,D5             ; RIGHT X
00001454  5345                     820              SUB.W   #1,D5
00001456  B245                     821              CMP.W   D5,D1
00001458  6E00 00BE                822              BGT     .END
0000145C                           823              
0000145C  4280                     824              CLR.L   D0
0000145E  4281                     825              CLR.L   D1
00001460                           826              ; CALCULATE CELL POSITION
00001460  3039 00002000            827              MOVE.W  MOUY,D0                 ; COPY MOUSE Y POSITION
00001466  0440 009E                828              SUB.W   #GRDYOFF,D0
0000146A  3239 00002002            829              MOVE.W  MOUX,D1                 ; COPY MOUSE X POSITION
00001470  0441 0010                830              SUB.W   #GRDXOFF,D1
00001474  80FC 000C                831              DIVU.W  #GRDSZCEL,D0
00001478  82FC 000C                832              DIVU.W  #GRDSZCEL,D1
0000147C                           833              
0000147C  C0FC 0040                834              MULU.W  #GRDWIDTH,D0
00001480  D041                     835              ADD.W   D1,D0
00001482  3040                     836              MOVE.W  D0,A0 
00001484                           837              
00001484  2279 00002048            838              MOVE.L  (GRDDST), A1
0000148A                           839               
0000148A                           840              ; CHECK CLICK(RIGHT OR LEFT)
0000148A  0839 0000 00002004       841              BTST    #0,MOUVAL
00001492  6700 0006                842              BEQ     .RGHTCLK
00001496  6000 0012                843              BRA     .PLYR1R2
0000149A                           844              
0000149A  0839 0001 00002004       845  .RGHTCLK    BTST    #1,MOUVAL 
000014A2  6700 0074                846              BEQ     .END
000014A6  6000 0040                847              BRA     .CLRCELL
000014AA                           848              
000014AA  343C 001F                849  .PLYR1R2    MOVE.W  #(GRDWIDTH/2)-1,D2      ; D2= HALF GRID
000014AE  B242                     850              CMP.W   D2,D1                   ; CHECK WHICH PLAYER IS
000014B0  6E00 001C                851              BGT     .PLAYER2                
000014B4                           852              
000014B4                           853              ; PLAYER 1
000014B4  0C31 0001 8000           854  .PLAYER1    CMP.B   #1,(A1,A0)              ; CELL ALREADY CREATED?                   
000014BA  6700 005C                855              BEQ     .END                    ; IF IT IS, RETURN
000014BE  5279 0000304C            856              ADD.W   #1,GRDNPLR1             ; IF NOT,ADD 1 TO COUNTER
000014C4  13BC 0001 8000           857              MOVE.B  #1,(A1,A0)              ; AND CREATE CELL
000014CA  6000 004C                858              BRA     .END
000014CE                           859              
000014CE                           860              ; PLAYER 2
000014CE  0C31 0002 8000           861  .PLAYER2    CMP.B   #2,(A1,A0)              ; CELL ALREADY CREATED?              
000014D4  6700 0042                862              BEQ     .END                    ; IF IT IS, RETURN
000014D8  5279 0000304E            863              ADD.W   #1,GRDNPLR2             ; IF NOT,ADD 1 TO COUNTER
000014DE  13BC 0002 8000           864              MOVE.B  #2,(A1,A0)              ; AND CREATE CELL
000014E4  6000 0032                865              BRA     .END 
000014E8                           866           
000014E8  0C31 0000 8000           867  .CLRCELL    CMP.B   #0,(A1,A0)              ; CELL ALREADY CREATED?          
000014EE  6700 0028                868              BEQ     .END                    ; IF IT IS, RETURN
000014F2  0C31 0001 8000           869              CMP.B   #1,(A1,A0)              ; CHECK IF CELL IS P1
000014F8  6600 0008                870              BNE     .CLRPLR2                ; IF NOT, CLEAR P2 CELL
000014FC  5379 0000304C            871              SUB.W   #1,GRDNPLR1             ; SUB 1 FROM P1 COUNTER
00001502  0C31 0002 8000           872  .CLRPLR2    CMP.B   #2,(A1,A0)              ; CHECK IF CELL IS P2
00001508  6600 0008                873              BNE     .SETZERO                ; IF NOT REMOVE CELL
0000150C  5379 0000304E            874              SUB.W  #1,GRDNPLR2              ; SUB 1 FROM P2 COUNTER
00001512                           875              
00001512  13BC 0000 8000           876  .SETZERO    MOVE.B  #0,(A1,A0)              ; SET CELL TO 0(DEAD)
00001518                           877                         
00001518  4CDF 7FFF                878  .END        MOVEM.L (A7)+,D0-D7/A0-A6       ; RESTORE CONTENT REGISTERS
0000151C  4E75                     879              RTS
0000151E                           880  
0000151E                           881  ; -----------------------------------------------------------------------------
0000151E                           882  GRDRUPD
0000151E                           883  ; UPDATES THE GRID ACCORDING TO 2-PLAYER GAME OF LIFE RULES AS FOLLOWS:
0000151E                           884  ; * ADDS 1 TO THE NUMBER OF GENERATIONS (GRDNGEN)
0000151E                           885  ; * SWITCHES THE MATRIX POINTERS (GRDDST AND GRDSRC).
0000151E                           886  ; * CHECKS THE NEIGHBORS USING THE NEW SOURCE MATRIX (POINTER BY GRDDRC)
0000151E                           887  ; * THE RESULTS OF APPLYING THE RULES ARE WRITTEN INTO THE NEW DESTINATION
0000151E                           888  ;   MATRIX (POINTED BY GRDDST).
0000151E                           889  ; * THE RULES ARE THE FOLLOWING, WHERE P1 AND P2 ARE 1 AND 2 RESPECTIVELY,
0000151E                           890  ;   DEAD CELLS ARE REPRESENTED BY 0 AND NP1 AND NP2 DENOTE THE NUMBER OF
0000151E                           891  ;   PLAYER 1 AND PLAYER 2 NEIGHBORS RESPECTIVELY:
0000151E                           892  ;   + SURVIVAL RULES
0000151E                           893  ;     - IF CELL IS P1 AND NP1-NP2 IS 2 OR 3 -> NEW VALUE IS P1
0000151E                           894  ;     - IF CELL IS P1 AND NP1-NP2 IS 1 AND NP1>=2 -> NEW VALUE IS P1
0000151E                           895  ;     - OTHERWISE -> NEW VALUE IS 0
0000151E                           896  ;     - IF CELL IS P2 AND NP2-NP1 IS 2 OR 3 -> NEW VALUE IS P2
0000151E                           897  ;     - IF CELL IS P2 AND NP2-NP1 IS 1 AND NP2>=2 -> NEW VALUE IS P2
0000151E                           898  ;     - OTHERWISE -> NEW VALUE IS 0
0000151E                           899  ;   + BIRTH RULES
0000151E                           900  ;     - THE CELL HAS EXACTLY THREE P1 NEIGHBOURS AND THE NUMBER
0000151E                           901  ;       OF P2 NEIGHBOURS IS DIFFERENT FROM THREE. IN THIS CASE A
0000151E                           902  ;       P1 TOKEN IS BORN IN THE CELL.
0000151E                           903  ;     - THE CELL HAS EXACTLY THREE P2 NEIGHBOURS AND THE NUMBER
0000151E                           904  ;       OF P1 NEIGHBOURS IS DIFFERENT FROM THREE. IN THIS CASE A
0000151E                           905  ;       P2 TOKEN IS BORN IN THE CELL.
0000151E                           906  ;     - THE CELL HAS EXACTLY THREE WHITE AND THREE BLACK NEIGHBOURS.
0000151E                           907  ;       IN THIS CASE AN UNBIASED COIN DETERMINES WHETHER A WHITE OR
0000151E                           908  ;       BLACK TOKEN IS BORN IN THE CELL.
0000151E                           909  ; INPUT    : NONE
0000151E                           910  ; OUTPUT   : NONE
0000151E                           911  ; MODIFIES : NONE
0000151E                           912  ; -----------------------------------------------------------------------------
0000151E                           913  
0000151E  48E7 FFFE                914              MOVEM.L D0-D7/A0-A6,-(A7)       ; SAVE CONTENT REGISTER
00001522                           915  
00001522                           916              ; INIT. COUNTERS
00001522  5279 00003050            917              ADD.W   #1,GRDNGEN              ; INIT. GEN COUNTER TO 1
00001528  4279 0000304C            918              CLR.W   GRDNPLR1                ; INIT. PLR 1 CONT. TO 0
0000152E  4279 0000304E            919              CLR.W   GRDNPLR2                ; INIT. PLR 2 CONT. TO 0
00001534                           920              
00001534  2039 00002048            921              MOVE.L  GRDDST,D0               ; COPY @ TO SWAP THEM
0000153A  2239 00002044            922              MOVE.L  GRDSRC,D1
00001540  23C0 00002044            923              MOVE.L  D0,GRDSRC               ; SWAP POINTERS
00001546  23C1 00002048            924              MOVE.L  D1,GRDDST               
0000154C  2079 00002044            925              MOVE.L  GRDSRC,A0               
00001552  2279 00002048            926              MOVE.L  GRDDST,A1              
00001558  4280                     927              CLR.L   D0
0000155A  4281                     928              CLR.L   D1
0000155C                           929  
0000155C  3C3C 0040                930              MOVE.W  #GRDWIDTH,D6
00001560  CCFC 0020                931              MULU.W  #GRDHEIGH,D6
00001564  5346                     932              SUB.W   #1,D6                   ; D6 = TOTAL NUM. CELLS
00001566  3E3C 0000                933              MOVE.W  #0,D7                   ; CELL COUNTER
0000156A                           934  
0000156A  4242                     935  .LOOP       CLR.W   D2
0000156C  4243                     936              CLR.W   D3
0000156E  303C 0040                937              MOVE.W  #GRDWIDTH,D0 
00001572  C0FC 0020                938              MULU.W  #GRDHEIGH,D0            ; D0 = TOTAL NUM. CELLS
00001576  4285                     939              CLR.L   D5 
00001578  3A07                     940              MOVE.W  D7,D5                   
0000157A  8AFC 0040                941              DIVU.W  #GRDWIDTH,D5            ; POS. OF ACTUAL CELL (ROW & COL)
0000157E  4845                     942              SWAP.W  D5                      ; MOVE COL. TO LOW PART
00001580                           943              
00001580  BE7C 0000                944              CMP.W   #0,D7                   ; FIRST CELL(TOP LEFT CORNER)?
00001584  6700 0040                945              BEQ     .TLC                    ; IF IT'S, GO TO TLC
00001588  3800                     946              MOVE.W  D0,D4                   
0000158A  0444 0040                947              SUB.W   #GRDWIDTH,D4            ; GET LAST CELL OF FIRST COL.
0000158E  BE44                     948              CMP.W   D4,D7                   ; ACT CELL IS ON THE LOW LEFT CORNER? 
00001590  6700 00BC                949              BEQ     .LLC                    ; IF IT'S, GO TO LLC
00001594  BA7C 0000                950              CMP.W   #0,D5                   ; ACT CELL ON FIRST COL(LEFT SIDE)?
00001598  6700 0070                951              BEQ     .MLC                    ; IF IT'S, GO TO MLC
0000159C  BE7C 0040                952              CMP.W   #GRDWIDTH,D7            ; ACT CELL ON FIRST ROW(TOP SIDE)?
000015A0  6D00 00F0                953              BLT     .TC                     ; ?, GO TO TC
000015A4                           954              
000015A4  BE7C 0040                955              CMP.W   #GRDWIDTH,D7            ; ACT CELL ON TOP RIGHT CORNER?
000015A8  6700 012C                956              BEQ     .TRC                    ; IF IT'S, GO TO TRC
000015AC  5340                     957              SUB.W   #1,D0
000015AE  BE40                     958              CMP.W   D0,D7                   ; ACT CELL ON LOW RIGHT CORNER?
000015B0  6700 01AC                959              BEQ     .LRC                    ; IF IT'S, GO TO LRC
000015B4  BA7C 003F                960              CMP.W   #GRDWIDTH-1,D5          ; ACT CELL ON LAST COL(RIGHT SIDE)?
000015B8  6700 0160                961              BEQ     .MRC                    ; IF IT'S, GO TO MRC
000015BC  BE44                     962              CMP.W   D4,D7                   ; ACT CELL ON LAST ROW(LOW SIDE)?
000015BE  6E00 01E2                963              BGT     .LC                     ; ?, GO TO LC
000015C2  6000 0222                964              BRA     .MC                     ; ACT CELL IT'S ON MIDDLE
000015C6                           965              
000015C6                           966   ; GET THE NEIGHTBOURS FROM TOP LEFT CONER CELL           
000015C6  1228 003F                967  .TLC        MOVE.B  (GRDWIDTH-1,A0),D1
000015CA  6100 025E                968              BSR     .CALCN
000015CE  1228 0001                969              MOVE.B  (1,A0),D1
000015D2  6100 0256                970              BSR     .CALCN
000015D6  1228 007F                971              MOVE.B  (GRDWIDTH*2-1,A0),D1
000015DA  6100 024E                972              BSR     .CALCN
000015DE  1228 0040                973              MOVE.B  (GRDWIDTH,A0),D1
000015E2  6100 0246                974              BSR     .CALCN
000015E6  1228 0041                975              MOVE.B  (GRDWIDTH+1,A0),D1
000015EA  6100 023E                976              BSR     .CALCN
000015EE  1228 07C0                977              MOVE.B  (GRDWIDTH*GRDHEIGH-GRDWIDTH,A0),D1
000015F2  6100 0236                978              BSR     .CALCN
000015F6  1228 07C1                979              MOVE.B  (GRDWIDTH*GRDHEIGH-GRDWIDTH+1,A0),D1
000015FA  6100 022E                980              BSR     .CALCN
000015FE  1228 07FF                981              MOVE.B  (GRDWIDTH*GRDHEIGH-1,A0),D1
00001602  6100 0226                982              BSR     .CALCN
00001606  6000 023C                983              BRA     .SRULES
0000160A                           984              
0000160A                           985   ; GET THE NEIGHTBOURS FROM LEFT EDGE CELL CELLS            
0000160A  1228 003F                986  .MLC        MOVE.B  (GRDWIDTH-1,A0),D1
0000160E  6100 021A                987              BSR     .CALCN
00001612  1228 0001                988              MOVE.B  (1,A0),D1
00001616  6100 0212                989              BSR     .CALCN
0000161A  1228 007F                990              MOVE.B  (GRDWIDTH*2-1,A0),D1
0000161E  6100 020A                991              BSR     .CALCN
00001622  1228 0040                992              MOVE.B  (GRDWIDTH,A0),D1
00001626  6100 0202                993              BSR     .CALCN
0000162A  1228 0041                994              MOVE.B  (GRDWIDTH+1,A0),D1
0000162E  6100 01FA                995              BSR     .CALCN
00001632  1228 FFC1                996              MOVE.B  (-GRDWIDTH+1,A0),D1
00001636  6100 01F2                997              BSR     .CALCN
0000163A  1228 FFC0                998              MOVE.B  (-GRDWIDTH,A0),D1
0000163E  6100 01EA                999              BSR     .CALCN
00001642  1228 FFFF               1000              MOVE.B  (-1,A0),D1
00001646  6100 01E2               1001              BSR     .CALCN
0000164A  6000 01F8               1002              BRA     .SRULES 
0000164E                          1003  
0000164E                          1004   ; GET THE NEIGHTBOURS FROM LOWER LEFT CONER CELL        
0000164E  1228 003F               1005  .LLC        MOVE.B  (GRDWIDTH-1,A0),D1
00001652  6100 01D6               1006              BSR     .CALCN
00001656  1228 0001               1007              MOVE.B  (1,A0),D1
0000165A  6100 01CE               1008              BSR     .CALCN
0000165E  1228 FFC0               1009              MOVE.B  (-GRDWIDTH,A0),D1
00001662  6100 01C6               1010              BSR     .CALCN
00001666  1228 FFC1               1011              MOVE.B  (-GRDWIDTH+1,A0),D1
0000166A  6100 01BE               1012              BSR     .CALCN
0000166E  1228 FFFF               1013              MOVE.B  (-1,A0),D1
00001672  6100 01B6               1014              BSR     .CALCN
00001676  1228 F840               1015              MOVE.B  (-(GRDWIDTH*GRDHEIGH-GRDWIDTH),A0),D1
0000167A  6100 01AE               1016              BSR     .CALCN
0000167E  1228 F83F               1017              MOVE.B  (-(GRDWIDTH*GRDHEIGH-GRDWIDTH+1),A0),D1
00001682  6100 01A6               1018              BSR     .CALCN
00001686  1228 F83F               1019              MOVE.B  (-GRDWIDTH*GRDHEIGH+GRDWIDTH-1,A0),D1
0000168A  6100 019E               1020              BSR     .CALCN
0000168E  6000 01B4               1021              BRA     .SRULES 
00001692                          1022  
00001692                          1023   ; GET THE NEIGHTBOURS FROM TOP EDGE CELLS 
00001692  1228 FFFF               1024  .TC         MOVE.B  (-1,A0),D1
00001696  6100 0192               1025              BSR     .CALCN
0000169A  1228 0001               1026              MOVE.B  (1,A0),D1
0000169E  6100 018A               1027              BSR     .CALCN
000016A2  1228 003F               1028              MOVE.B  (GRDWIDTH-1,A0),D1
000016A6  6100 0182               1029              BSR     .CALCN
000016AA  1228 0040               1030              MOVE.B  (GRDWIDTH,A0),D1
000016AE  6100 017A               1031              BSR     .CALCN
000016B2  1228 0041               1032              MOVE.B  (GRDWIDTH+1,A0),D1
000016B6  6100 0172               1033              BSR     .CALCN
000016BA  1228 07BF               1034              MOVE.B  (GRDWIDTH*GRDHEIGH-GRDWIDTH-1,A0),D1
000016BE  6100 016A               1035              BSR     .CALCN
000016C2  1228 07C1               1036              MOVE.B  (GRDWIDTH*GRDHEIGH-GRDWIDTH+1,A0),D1
000016C6  6100 0162               1037              BSR     .CALCN
000016CA  1228 07C0               1038              MOVE.B  (GRDWIDTH*GRDHEIGH-GRDWIDTH,A0),D1
000016CE  6100 015A               1039              BSR     .CALCN
000016D2  6000 0170               1040              BRA     .SRULES 
000016D6                          1041  
000016D6                          1042   ; GET THE NEIGHTBOURS FROM TOP RIGHT CONER CELL  
000016D6  1228 FFFF               1043  .TRC        MOVE.B  (-1,A0),D1
000016DA  6100 014E               1044              BSR     .CALCN
000016DE  1228 FFC1               1045              MOVE.B  (-GRDWIDTH+1,A0),D1
000016E2  6100 0146               1046              BSR     .CALCN
000016E6  1228 0001               1047              MOVE.B  (1,A0),D1
000016EA  6100 013E               1048              BSR     .CALCN
000016EE  1228 0040               1049              MOVE.B  (GRDWIDTH,A0),D1
000016F2  6100 0136               1050              BSR     .CALCN
000016F6  1228 003F               1051              MOVE.B  (GRDWIDTH-1,A0),D1
000016FA  6100 012E               1052              BSR     .CALCN
000016FE  1228 07C0               1053              MOVE.B  (GRDWIDTH*GRDHEIGH-GRDWIDTH,A0),D1
00001702  6100 0126               1054              BSR     .CALCN
00001706  1228 07BF               1055              MOVE.B  (GRDWIDTH*GRDHEIGH-GRDWIDTH-1,A0),D1
0000170A  6100 011E               1056              BSR     .CALCN
0000170E  1228 07C1               1057              MOVE.B  (GRDWIDTH*GRDHEIGH-GRDWIDTH+1,A0),D1
00001712  6100 0116               1058              BSR     .CALCN
00001716  6000 012C               1059              BRA     .SRULES    
0000171A                          1060   
0000171A                          1061   ; GET THE NEIGHTBOURS FROM RIGHT EDGE CELLS            
0000171A  1228 FFFF               1062  .MRC        MOVE.B  (-1,A0),D1
0000171E  6100 010A               1063              BSR     .CALCN
00001722  1228 FFC1               1064              MOVE.B  (-GRDWIDTH+1,A0),D1
00001726  6100 0102               1065              BSR     .CALCN
0000172A  1228 003F               1066              MOVE.B  (GRDWIDTH-1,A0),D1
0000172E  6100 00FA               1067              BSR     .CALCN
00001732  1228 0040               1068              MOVE.B  (GRDWIDTH,A0),D1
00001736  6100 00F2               1069              BSR     .CALCN
0000173A  1228 0001               1070              MOVE.B  (1,A0),D1
0000173E  6100 00EA               1071              BSR     .CALCN
00001742  1228 FFBF               1072              MOVE.B  (-GRDWIDTH-1,A0),D1
00001746  6100 00E2               1073              BSR     .CALCN
0000174A  1228 FFC0               1074              MOVE.B  (-GRDWIDTH,A0),D1
0000174E  6100 00DA               1075              BSR     .CALCN
00001752  1228 FF81               1076              MOVE.B  (-GRDWIDTH*2+1,A0),D1
00001756  6100 00D2               1077              BSR     .CALCN
0000175A  6000 00E8               1078              BRA     .SRULES 
0000175E                          1079  
0000175E                          1080   ; GET THE NEIGHTBOURS FROM LOWER RIGHT CONER CELL             
0000175E  1228 FFFF               1081  .LRC        MOVE.B  (-1,A0),D1
00001762  6100 00C6               1082              BSR     .CALCN
00001766  1228 FFC1               1083              MOVE.B  (-GRDWIDTH+1,A0),D1
0000176A  6100 00BE               1084              BSR     .CALCN
0000176E  1228 FFBF               1085              MOVE.B  (-GRDWIDTH-1,A0),D1
00001772  6100 00B6               1086              BSR     .CALCN
00001776  1228 FFC0               1087              MOVE.B  (-GRDWIDTH,A0),D1
0000177A  6100 00AE               1088              BSR     .CALCN
0000177E  1228 FF81               1089              MOVE.B  (-GRDWIDTH*2+1,A0),D1
00001782  6100 00A6               1090              BSR     .CALCN
00001786  1228 F841               1091              MOVE.B  (-(GRDWIDTH*GRDHEIGH-GRDWIDTH-1),A0),D1
0000178A  6100 009E               1092              BSR     .CALCN
0000178E  1228 F840               1093              MOVE.B  (-(GRDWIDTH*GRDHEIGH-GRDWIDTH),A0),D1
00001792  6100 0096               1094              BSR     .CALCN
00001796  1228 F801               1095              MOVE.B  (-GRDWIDTH*GRDHEIGH+1,A0),D1
0000179A  6100 008E               1096              BSR     .CALCN
0000179E  6000 00A4               1097              BRA     .SRULES   
000017A2                          1098  
000017A2                          1099   ; GET THE NEIGHTBOURS FROM LOW EDGE CELLS
000017A2  1228 FFFF               1100  .LC         MOVE.B  (-1,A0),D1
000017A6  6100 0082               1101              BSR     .CALCN
000017AA  1228 0001               1102              MOVE.B  (1,A0),D1
000017AE  6100 007A               1103              BSR     .CALCN
000017B2  1228 FFBF               1104              MOVE.B  (-GRDWIDTH-1,A0),D1
000017B6  6100 0072               1105              BSR     .CALCN
000017BA  1228 FFC0               1106              MOVE.B  (-GRDWIDTH,A0),D1
000017BE  6100 006A               1107              BSR     .CALCN
000017C2  1228 FFC1               1108              MOVE.B  (-GRDWIDTH+1,A0),D1
000017C6  6100 0062               1109              BSR     .CALCN
000017CA  1228 F841               1110              MOVE.B  (-(GRDWIDTH*GRDHEIGH-GRDWIDTH-1),A0),D1
000017CE  6100 005A               1111              BSR     .CALCN
000017D2  1228 F83F               1112              MOVE.B  (-(GRDWIDTH*GRDHEIGH-GRDWIDTH+1),A0),D1
000017D6  6100 0052               1113              BSR     .CALCN
000017DA  1228 F840               1114              MOVE.B  (-(GRDWIDTH*GRDHEIGH-GRDWIDTH),A0),D1
000017DE  6100 004A               1115              BSR     .CALCN
000017E2  6000 0060               1116              BRA     .SRULES  
000017E6                          1117              
000017E6                          1118   ; GET THE NEIGHTBOURS FROM MID GRID CELLS              
000017E6  1228 FFFF               1119  .MC         MOVE.B  (-1,A0),D1
000017EA  6100 003E               1120              BSR     .CALCN
000017EE  1228 0001               1121              MOVE.B  (1,A0),D1
000017F2  6100 0036               1122              BSR     .CALCN
000017F6  1228 003F               1123              MOVE.B  (GRDWIDTH-1,A0),D1
000017FA  6100 002E               1124              BSR     .CALCN
000017FE  1228 0040               1125              MOVE.B  (GRDWIDTH,A0),D1
00001802  6100 0026               1126              BSR     .CALCN
00001806  1228 0041               1127              MOVE.B  (GRDWIDTH+1,A0),D1
0000180A  6100 001E               1128              BSR     .CALCN
0000180E  1228 FFBF               1129              MOVE.B  (-GRDWIDTH-1,A0),D1
00001812  6100 0016               1130              BSR     .CALCN
00001816  1228 FFC0               1131              MOVE.B  (-GRDWIDTH,A0),D1
0000181A  6100 000E               1132              BSR     .CALCN
0000181E  1228 FFC1               1133              MOVE.B  (-GRDWIDTH+1,A0),D1
00001822  6100 0006               1134              BSR     .CALCN
00001826  6000 001C               1135              BRA     .SRULES
0000182A                          1136                  
0000182A  B23C 0001               1137  .CALCN      CMP.B   #1,D1                   ; NEIGHTBOUR IS P1 CELL?                  
0000182E  6700 000C               1138              BEQ     .ADDNP1                 ; IF IT'S, ADD 1 TO P1 COUNTER
00001832  B23C 0002               1139              CMP.B   #2,D1                   ; NEIGHTBOUR IS P2 CELL? 
00001836  6700 0008               1140              BEQ     .ADDNP2                 ; IF IT'S, ADD 1 TO P2 COUNTER
0000183A  4E75                    1141              RTS                             ; RETURN TO NEXT NEIGHTBOUR
0000183C  5242                    1142  .ADDNP1     ADD.W   #1,D2                   ; ADD 1 TO NP1 COUNTER 
0000183E  4E75                    1143              RTS
00001840  5243                    1144  .ADDNP2     ADD.W   #1,D3                   ; ADD 1 TO NP2 COUNTER   
00001842  4E75                    1145              RTS
00001844                          1146  
00001844  0C10 0000               1147  .SRULES     CMP.B   #0,(A0)                 ; IS ACT CELL IS A DEAD CELL?
00001848  6700 006E               1148              BEQ     .BRULES                 ; IF IT'S, GO TO BIRTH RULES
0000184C  0C10 0001               1149              CMP.B   #1,(A0)                 ; ACT CELL IS P1 CELL?
00001850  6600 0032               1150              BNE     .P2R                    ; IF IT'S, GO TO P2 RULES                    
00001854  3802                    1151              MOVE.W  D2,D4                   ; MOVE P1 NEIGHTBOURS TO D4
00001856  9843                    1152              SUB.W   D3,D4                   ; SUB P2 NEIGHTBOURS TO P1 NEIGHTBOURS
00001858  B87C 0003               1153              CMP.W   #3,D4                   ; NP1-?
0000185C  6700 001E               1154              BEQ     .CTOP1
00001860  B87C 0002               1155              CMP.W   #2,D4 
00001864  6700 0016               1156              BEQ     .CTOP1
00001868  B87C 0001               1157              CMP.W   #1,D4
0000186C  6600 0046               1158              BNE     .CTODEAD
00001870  B47C 0002               1159              CMP.W   #2,D2
00001874  6C00 0006               1160              BGE     .CTOP1
00001878  6000 003A               1161              BRA     .CTODEAD
0000187C                          1162              
0000187C  12BC 0001               1163  .CTOP1      MOVE.B  #1,(A1)
00001880  6000 0068               1164              BRA     .ENDLOOP
00001884                          1165              
00001884  3803                    1166  .P2R        MOVE.W  D3,D4
00001886  9842                    1167              SUB.W   D2,D4
00001888  B87C 0003               1168              CMP.W   #3,D4 
0000188C  6700 001E               1169              BEQ     .CTOP2
00001890  B87C 0002               1170              CMP.W   #2,D4 
00001894  6700 0016               1171              BEQ     .CTOP2
00001898  B87C 0001               1172              CMP.W   #1,D4
0000189C  6600 0016               1173              BNE     .CTODEAD
000018A0  B47C 0002               1174              CMP.W   #2,D2
000018A4  6C00 0006               1175              BGE     .CTOP2
000018A8  6000 000A               1176              BRA     .CTODEAD
000018AC                          1177              
000018AC  12BC 0002               1178  .CTOP2      MOVE.B  #2,(A1)
000018B0  6000 0038               1179              BRA     .ENDLOOP
000018B4                          1180  
000018B4  12BC 0000               1181  .CTODEAD    MOVE.B  #0,(A1)
000018B8                          1182  
000018B8  B47C 0003               1183  .BRULES     CMP.W   #3,D2
000018BC  6600 0016               1184              BNE     .BP2C
000018C0  B67C 0003               1185              CMP.W   #3,D3
000018C4  6600 0006               1186              BNE     .BP1C
000018C8  6000 001A               1187              BRA     .RANDC
000018CC                          1188              
000018CC  12BC 0001               1189  .BP1C       MOVE.B  #1,(A1)
000018D0  6000 0018               1190              BRA     .ENDLOOP
000018D4                          1191              
000018D4  B67C 0003               1192  .BP2C       CMP.W   #3,D3
000018D8  6600 0010               1193              BNE     .ENDLOOP
000018DC  12BC 0002               1194              MOVE.B  #2,(A1)
000018E0  6000 0008               1195              BRA     .ENDLOOP
000018E4                          1196              
000018E4  4EB8 10EA               1197  .RANDC      JSR     UTLRAND                 ; GET RANDOM NUMBER BETWEEN 1 AND 2
000018E8                          1198              
000018E8  1281                    1199              MOVE.B  D1,(A1)  
000018EA                          1200  
000018EA  5288                    1201  .ENDLOOP    ADD.L   #1,A0
000018EC  5289                    1202              ADD.L   #1,A1
000018EE  5247                    1203              ADD.W   #1,D7
000018F0  51CE FC78               1204              DBRA    D6,.LOOP
000018F4                          1205  
000018F4  303C 07FF               1206              MOVE.W  #GRDWIDTH*GRDHEIGH-1,D0
000018F8  2079 00002044           1207              MOVE.L  GRDSRC,A0
000018FE  2279 00002048           1208              MOVE.L  GRDDST,A1
00001904  1219                    1209  .END        MOVE.B  (A1)+,D1
00001906  B27C 0001               1210              CMP.W   #1,D1
0000190A  6600 0008               1211              BNE     .P2COUNTER
0000190E  5279 0000304C           1212              ADD.W   #1,GRDNPLR1
00001914  B27C 0002               1213  .P2COUNTER  CMP.W   #2,D1
00001918  6600 0008               1214              BNE     .CLRC
0000191C  5279 0000304E           1215              ADD.W   #1,GRDNPLR2
00001922  4218                    1216  .CLRC       CLR.B   (A0)+            
00001924  51C8 FFDE               1217              DBRA.W  D0,.END
00001928                          1218              
00001928  4CDF 7FFF               1219              MOVEM.L (A7)+,D0-D7/A0-A6
0000192C  4E75                    1220              RTS
0000192E                          1221  
0000192E                          1222  
0000192E                          1223  ; -----------------------------------------------------------------------------
0000192E                          1224  GRDSAVE
0000192E                          1225  ; SAVES THE GRID INTO A FILE IN CSV FORMAT
0000192E                          1226  ; INPUT    : NONE
0000192E                          1227  ; OUTPUT   : NONE
0000192E                          1228  ; MODIFIES : NONE
0000192E                          1229  ; NOTE     : THE LOCAL BUFFER SIZE MUST BE MAX(512,2*GRDWIDTH+1). PLEASE CHANGE
0000192E                          1230  ;            IT ACCORDINGLY IF GRDWIDTH*2+1 IS LARGER THAN 512.
0000192E                          1231  ; -----------------------------------------------------------------------------
0000192E  48E7 FFFE               1232              MOVEM.L D0-D7/A0-A6,-(A7)       ; TO BE OPTIMIZED
00001932  103C 0032               1233              MOVE.B  #50,D0                  ; CLOSE ALL FILES (RECOMMENDED)
00001936  4E4F                    1234              TRAP    #15
00001938  9FFC 00000200           1235              SUB.L   #512,A7                 ; ROW BUFFER IN LOCAL MEMORY
0000193E  103C 003A               1236              MOVE.B  #58,D0                  ; SHOW FILE DIALOG TASK
00001942  7201                    1237              MOVE.L  #1,D1                   ; DISPLAY SAVE DIALOG
00001944  43F9 000019BA           1238              LEA     .MSG,A1                 ; STANDARD MESSAGE
0000194A  45F9 000019D4           1239              LEA     .FILTER,A2              ; NO FILTER
00001950  264F                    1240              MOVE.L  A7,A3                   ; FILE NAME BUFFER
00001952  4253                    1241              CLR.W   (A3)                    ; ENSURE THERE IS NO STRING
00001954  4E4F                    1242              TRAP    #15
00001956  4A01                    1243              TST.B   D1
00001958  6700 0054               1244              BEQ     .END                    ; IF CANCELLED, DO NOTHING
0000195C  224B                    1245              MOVE.L  A3,A1                   ; PLACE THE FILENAME INTO A1
0000195E  103C 0034               1246              MOVE.B  #52,D0                  ; CREATE NEW FILE
00001962  4E4F                    1247              TRAP    #15
00001964  4A40                    1248              TST.W   D0                      ; CHECK CREATION ERROR
00001966  6600 0046               1249              BNE     .END                    ; DO NOTHING MORE IF ERROR
0000196A  2C4F                    1250              MOVE.L  A7,A6                   ; PUT A6 INTO START OF BUFFER
0000196C  224F                    1251              MOVE.L  A7,A1                   ; PUT A1 INTO START OF BUFFER
0000196E  2079 00002048           1252              MOVE.L  (GRDDST), A0            ; A0: POINTER TO THE DATA TO WRITE
00001974  363C 001F               1253              MOVE.W  #GRDHEIGH-1,D3          ; D3: NUMBER OF ROWS - 1
00001978  343C 003F               1254  .LOOPY      MOVE.W  #GRDWIDTH-1,D2          ; D2: NUMBER OF COLUMNS - 1
0000197C  103C 0030               1255  .LOOP       MOVE.B  #'0',D0                 ; ADD CHAR '0' AND THE CELL VALUE
00001980  D018                    1256              ADD.B   (A0)+,D0
00001982  1CC0                    1257              MOVE.B  D0, (A6)+               ; STORE IT IN THE BUFFER
00001984  1CFC 002C               1258              MOVE.B  #',',(A6)+              ; NOW PUT THE COMMA
00001988  51CA FFF2               1259              DBRA.W  D2,.LOOP
0000198C  1D7C 000D FFFF          1260              MOVE.B  #$0D,-1(A6)             ; STORE CARRIAGE RETURN (REMOVE ',')
00001992  1CBC 000A               1261              MOVE.B  #$0A,(A6)               ; STORE LINE FEED
00001996  103C 0036               1262              MOVE.B  #54,D0                  ; WRITE TO FILE TASK NUMBER
0000199A  243C 00000081           1263              MOVE.L  #GRDWIDTH*2+1,D2        ; NUMBER OF BYTES TO WRITE
000019A0  4E4F                    1264              TRAP    #15                     ; WRITE (A1 IS ALREADY THERE)
000019A2  2C49                    1265              MOVE.L  A1,A6                   ; GO BACK TO THE BUFFER START
000019A4  51CB FFD2               1266              DBRA.W  D3,.LOOPY
000019A8  103C 0038               1267              MOVE.B  #56,D0                  ; CLOSE FILE
000019AC  4E4F                    1268              TRAP    #15
000019AE  DFFC 00000200           1269  .END        ADD.L   #512,A7                 ; RESTORE STACK
000019B4  4CDF 7FFF               1270              MOVEM.L (A7)+,D0-D7/A0-A6       ; TO BE OPTIMIZED
000019B8  4E75                    1271              RTS
000019BA= 53 45 4C 45 43 54 ...   1272  .MSG        DC.B    'SELECT A CSV FILE TO SAVE',0
000019D4= 2A 2E 43 53 56 00       1273  .FILTER     DC.B    '*.CSV',0
000019DA                          1274              DS.W    0
000019DA                          1275  
000019DA                          1276  ; -----------------------------------------------------------------------------
000019DA                          1277  GRDLOAD
000019DA                          1278  ; LOADS THE GRID FROM A CSV FORMATTED FILE
000019DA                          1279  ; INPUT    : NONE
000019DA                          1280  ; OUTPUT   : NONE
000019DA                          1281  ; MODIFIES : NONE
000019DA                          1282  ; NOTE     : THE LOCAL BUFFER SIZE MUST BE MAX(512,2*GRDWIDTH+1). PLEASE CHANGE
000019DA                          1283  ;            IT ACCORDINGLY IF GRDWIDTH*2+1 IS LARGER THAN 512.
000019DA                          1284  ; -----------------------------------------------------------------------------
000019DA  48E7 FFFE               1285              MOVEM.L D0-D7/A0-A6,-(A7)       ; TO BE OPTIMIZED
000019DE  103C 0032               1286              MOVE.B  #50,D0                  ; CLOSE ALL FILES (RECOMMENDED)
000019E2  4E4F                    1287              TRAP    #15
000019E4  9FFC 00000200           1288              SUB.L   #512,A7                 ; ROW BUFFER IN LOCAL MEMORY
000019EA  103C 003A               1289              MOVE.B  #58,D0                  ; SHOW FILE DIALOG TASK
000019EE  4281                    1290              CLR.L   D1                      ; DISPLAY LOAD DIALOG
000019F0  43F9 00001A5A           1291              LEA     .MSG,A1                 ; STANDARD MESSAGE
000019F6  45F9 00001A74           1292              LEA     .FILTER,A2              ; NO FILTER
000019FC  264F                    1293              MOVE.L  A7,A3                   ; FILE NAME BUFFER
000019FE  4253                    1294              CLR.W   (A3)                    ; ENSURE THERE IS NO STRING
00001A00  4E4F                    1295              TRAP    #15
00001A02  4A01                    1296              TST.B   D1
00001A04  6700 0048               1297              BEQ     .END                    ; IF CANCELLED, DO NOTHING
00001A08  224B                    1298              MOVE.L  A3,A1                   ; PLACE THE FILENAME INTO A1
00001A0A  103C 0033               1299              MOVE.B  #51,D0                  ; OPEN EXISTING FILE
00001A0E  4E4F                    1300              TRAP    #15
00001A10  4A40                    1301              TST.W   D0                      ; CHECK ERRORS
00001A12  6600 003A               1302              BNE     .END                    ; IF ERRORS, DO NOTHING MORE
00001A16  2C4F                    1303              MOVE.L  A7,A6                   ; PUT A6 INTO START OF BUFFER
00001A18  224F                    1304              MOVE.L  A7,A1                   ; PUT A1 INTO START OF BUFFER
00001A1A  2079 00002048           1305              MOVE.L  (GRDDST), A0            ; POINTER TO STORE PROCESS. DATA
00001A20  363C 001F               1306              MOVE.W  #GRDHEIGH-1,D3
00001A24  224E                    1307  .LOOP       MOVE.L  A6,A1
00001A26  103C 0035               1308              MOVE.B  #53,D0                  ; READ DATA TASK NUMBER
00001A2A  243C 00000081           1309              MOVE.L  #GRDWIDTH*2+1,D2        ; NUMBER OF BYTES TO READ
00001A30  4E4F                    1310              TRAP    #15                     ; READ THE DATA
00001A32  343C 003F               1311              MOVE.W  #GRDWIDTH-1,D2
00001A36  1019                    1312  .COPY       MOVE.B  (A1)+,D0                ; PICK ONE LOADED CHARACTER
00001A38  0400 0030               1313              SUB.B   #'0',D0                 ; CONVERT FROM ASCII TO NUMBER
00001A3C  10C0                    1314              MOVE.B  D0,(A0)+                ; STORE DATA
00001A3E  5289                    1315              ADDQ.L  #1,A1                   ; SKIP THE COMMA
00001A40  51CA FFF4               1316              DBRA.W  D2,.COPY
00001A44  51CB FFDE               1317              DBRA.W  D3,.LOOP
00001A48  103C 0038               1318              MOVE.B  #56,D0                  ; CLOSE FILE
00001A4C  4E4F                    1319              TRAP    #15
00001A4E  DFFC 00000200           1320  .END        ADD.L   #512,A7                 ; RESTORE STACK
00001A54  4CDF 7FFF               1321              MOVEM.L (A7)+,D0-D7/A0-A6       ; TO BE OPTIMIZED
00001A58  4E75                    1322              RTS
00001A5A= 53 45 4C 45 43 54 ...   1323  .MSG        DC.B    'SELECT A CSV FILE TO LOAD',0
00001A74= 2A 2E 43 53 56 00       1324  .FILTER     DC.B    '*.CSV',0
00001A7A                          1325              DS.W    0
00001A7A                          1326  
00001A7A                          1327  ; -----------------------------------------------------------------------------
00001A7A                          1328  GRDLLEFT
00001A7A                          1329  ; LOADS THE LEFT PART OF THE GRID FROM A CSV FORMATTED FILE
00001A7A                          1330  ; INPUT    : NONE
00001A7A                          1331  ; OUTPUT   : NONE
00001A7A                          1332  ; MODIFIES : NONE
00001A7A                          1333  ; NOTE     : THE LOCAL BUFFER SIZE MUST BE MAX(512,2*GRDWIDTH+1). PLEASE CHANGE
00001A7A                          1334  ;            IT ACCORDINGLY IF GRDWIDTH*2+1 IS LARGER THAN 512.
00001A7A                          1335  ; NOTE     : ALL THE ACTIVE CELLS ARE STORED AS PLAYER 1 INDEPENDLY OF THEIR
00001A7A                          1336  ;            ACTUAL VALUE.
00001A7A                          1337  ; -----------------------------------------------------------------------------
00001A7A                          1338  
00001A7A                          1339  ; TODO : PLACE YOUR CODE HERE
00001A7A                          1340  
00001A7A  48E7 F0FE               1341              MOVEM.L D0-D3/A0-A6,-(A7)       ; SAVE CONTENT REGISTERS
00001A7E                          1342              
00001A7E  103C 0032               1343              MOVE.B  #50,D0                  ; CLOSE ALL FILES (RECOMMENDED)
00001A82  4E4F                    1344              TRAP    #15
00001A84  9FFC 00000200           1345              SUB.L   #512,A7                 ; ROW BUFFER IN LOCAL MEMORY
00001A8A  103C 003A               1346              MOVE.B  #58,D0                  ; SHOW FILE DIALOG TASK
00001A8E  4281                    1347              CLR.L   D1                      ; DISPLAY LOAD DIALOG
00001A90  43F9 00001B0A           1348              LEA     .MSG,A1                 ; STANDARD MESSAGE
00001A96  45F9 00001B24           1349              LEA     .FILTER,A2              ; NO FILTER
00001A9C  264F                    1350              MOVE.L  A7,A3                   ; FILE NAME BUFFER
00001A9E  4253                    1351              CLR.W   (A3)                    ; ENSURE THERE IS NO STRING
00001AA0  4E4F                    1352              TRAP    #15
00001AA2  4A01                    1353              TST.B   D1
00001AA4  6700 0058               1354              BEQ     .END                    ; IF CANCELLED, DO NOTHING
00001AA8  224B                    1355              MOVE.L  A3,A1                   ; PLACE THE FILENAME INTO A1
00001AAA  103C 0033               1356              MOVE.B  #51,D0                  ; OPEN EXISTING FILE
00001AAE  4E4F                    1357              TRAP    #15
00001AB0  4A40                    1358              TST.W   D0                      ; CHECK ERRORS
00001AB2  6600 004A               1359              BNE     .END                    ; IF ERRORS, DO NOTHING MORE
00001AB6  2C4F                    1360              MOVE.L  A7,A6                   ; PUT A6 INTO START OF BUFFER
00001AB8  224F                    1361              MOVE.L  A7,A1                   ; PUT A1 INTO START OF BUFFER
00001ABA  2079 00002048           1362              MOVE.L  (GRDDST), A0            ; POINTER TO STORE PROCESS. DATA
00001AC0  363C 001F               1363              MOVE.W  #GRDHEIGH-1,D3
00001AC4  224E                    1364  .LOOP       MOVE.L  A6,A1
00001AC6  103C 0035               1365              MOVE.B  #53,D0                  ; READ DATA TASK NUMBER
00001ACA  243C 00000081           1366              MOVE.L  #GRDWIDTH*2+1,D2          ; NUMBER OF BYTES TO READ
00001AD0  4E4F                    1367              TRAP    #15                     ; READ THE DATA
00001AD2  343C 001F               1368              MOVE.W  #GRDWIDTH/2-1,D2
00001AD6  1019                    1369  .COPY       MOVE.B  (A1)+,D0                ; PICK ONE LOADED CHARACTER
00001AD8  0400 0030               1370              SUB.B   #'0',D0                 ; CONVERT FROM ASCII TO NUMBER
00001ADC  B07C 0002               1371              CMP.W   #2,D0
00001AE0  6600 0006               1372              BNE     .STORE
00001AE4  303C 0001               1373              MOVE.W  #1,D0
00001AE8  10C0                    1374  .STORE      MOVE.B  D0,(A0)+                ; STORE DATA
00001AEA  5289                    1375              ADDQ.L  #1,A1                   ; SKIP THE COMMA
00001AEC  51CA FFE8               1376              DBRA.W  D2,.COPY
00001AF0  D0FC 0020               1377              ADD.W   #GRDWIDTH/2,A0
00001AF4  51CB FFCE               1378              DBRA.W  D3,.LOOP
00001AF8  103C 0038               1379              MOVE.B  #56,D0                  ; CLOSE FILE
00001AFC  4E4F                    1380              TRAP    #15
00001AFE  DFFC 00000200           1381  .END        ADD.L   #512,A7                 ; RESTORE STACK
00001B04                          1382              
00001B04  4CDF 7F0F               1383              MOVEM.L (A7)+,D0-D3/A0-A6       ; RESTORES CONTENT REGISTERS
00001B08  4E75                    1384              RTS
00001B0A                          1385  
00001B0A= 53 45 4C 45 43 54 ...   1386  .MSG        DC.B    'SELECT A CSV FILE TO LOAD',0
00001B24= 2A 2E 43 53 56 00       1387  .FILTER     DC.B    '*.CSV',0
00001B2A                          1388              DS.W    0
00001B2A                          1389  
00001B2A                          1390  ; -----------------------------------------------------------------------------
00001B2A                          1391  GRDLRGT
00001B2A                          1392  ; LOADS THE RIGHT PART OF THE GRID FROM A CSV FORMATTED FILE
00001B2A                          1393  ; INPUT    : NONE
00001B2A                          1394  ; OUTPUT   : NONE
00001B2A                          1395  ; MODIFIES : NONE
00001B2A                          1396  ; NOTE     : THE LOCAL BUFFER SIZE MUST BE MAX(512,2*GRDWIDTH+1). PLEASE CHANGE
00001B2A                          1397  ;            IT ACCORDINGLY IF GRDWIDTH*2+1 IS LARGER THAN 512.
00001B2A                          1398  ; NOTE     : ALL THE ACTIVE CELLS ARE STORED AS PLAYER 2 INDEPENDLY OF THEIR
00001B2A                          1399  ;            ACTUAL VALUE.
00001B2A                          1400  ; -----------------------------------------------------------------------------
00001B2A                          1401  
00001B2A                          1402  ; TODO : PLACE YOUR CODE HERE
00001B2A                          1403  
00001B2A  48E7 FFFE               1404              MOVEM.L D0-D7/A0-A6,-(A7)       ; SAVE CONTENT REGISTERS
00001B2E                          1405  
00001B2E  103C 0032               1406              MOVE.B  #50,D0                  ; CLOSE ALL FILES (RECOMMENDED)
00001B32  4E4F                    1407              TRAP    #15
00001B34  9FFC 00000200           1408              SUB.L   #512,A7                 ; ROW BUFFER IN LOCAL MEMORY
00001B3A  103C 003A               1409              MOVE.B  #58,D0                  ; SHOW FILE DIALOG TASK
00001B3E  4281                    1410              CLR.L   D1                      ; DISPLAY LOAD DIALOG
00001B40  43F9 00001BC0           1411              LEA     .MSG,A1                 ; STANDARD MESSAGE
00001B46  45F9 00001BDA           1412              LEA     .FILTER,A2              ; NO FILTER
00001B4C  264F                    1413              MOVE.L  A7,A3                   ; FILE NAME BUFFER
00001B4E  4253                    1414              CLR.W   (A3)                    ; ENSURE THERE IS NO STRING
00001B50  4E4F                    1415              TRAP    #15
00001B52  4A01                    1416              TST.B   D1
00001B54  6700 005E               1417              BEQ     .END                    ; IF CANCELLED, DO NOTHING
00001B58  224B                    1418              MOVE.L  A3,A1                   ; PLACE THE FILENAME INTO A1
00001B5A  103C 0033               1419              MOVE.B  #51,D0                  ; OPEN EXISTING FILE
00001B5E  4E4F                    1420              TRAP    #15
00001B60  4A40                    1421              TST.W   D0                      ; CHECK ERRORS
00001B62  6600 0050               1422              BNE     .END                    ; IF ERRORS, DO NOTHING MORE
00001B66  2C4F                    1423              MOVE.L  A7,A6                   ; PUT A6 INTO START OF BUFFER
00001B68  224F                    1424              MOVE.L  A7,A1                   ; PUT A1 INTO START OF BUFFER
00001B6A  2079 00002048           1425              MOVE.L  (GRDDST), A0            ; POINTER TO STORE PROCESS. DATA
00001B70  363C 001F               1426              MOVE.W  #GRDHEIGH-1,D3
00001B74  224E                    1427  .LOOP       MOVE.L  A6,A1
00001B76  103C 0035               1428              MOVE.B  #53,D0                  ; READ DATA TASK NUMBER
00001B7A  243C 00000081           1429              MOVE.L  #GRDWIDTH*2+1,D2        ; NUMBER OF BYTES TO READ
00001B80  4E4F                    1430              TRAP    #15                     ; READ THE DATA
00001B82  343C 001F               1431              MOVE.W  #GRDWIDTH/2-1,D2
00001B86  D3FC 00000040           1432              ADD.L   #GRDWIDTH,A1
00001B8C  D0FC 0020               1433              ADD.W   #GRDWIDTH/2,A0
00001B90  1019                    1434  .COPY       MOVE.B  (A1)+,D0                ; PICK ONE LOADED CHARACTER
00001B92  0400 0030               1435              SUB.B   #'0',D0                 ; CONVERT FROM ASCII TO NUMBER
00001B96  B07C 0001               1436              CMP.W   #1,D0
00001B9A  6600 0006               1437              BNE     .STORE
00001B9E  303C 0002               1438              MOVE.W  #2,D0
00001BA2  10C0                    1439  .STORE      MOVE.B  D0,(A0)+                ; STORE DATA
00001BA4  5289                    1440              ADDQ.L  #1,A1                   ; SKIP THE COMMA
00001BA6  51CA FFE8               1441              DBRA.W  D2,.COPY
00001BAA  51CB FFC8               1442              DBRA.W  D3,.LOOP
00001BAE  103C 0038               1443              MOVE.B  #56,D0                  ; CLOSE FILE
00001BB2  4E4F                    1444              TRAP    #15
00001BB4  DFFC 00000200           1445  .END        ADD.L   #512,A7                 ; RESTORE STACK
00001BBA                          1446  
00001BBA                          1447              
00001BBA  4CDF 7FFF               1448              MOVEM.L (A7)+,D0-D7/A0-A6       ; RESTORES CONTENT REGISTERS
00001BBE  4E75                    1449              RTS
00001BC0                          1450  
00001BC0= 53 45 4C 45 43 54 ...   1451  .MSG        DC.B    'SELECT A CSV FILE TO LOAD',0
00001BDA= 2A 2E 43 53 56 00       1452  .FILTER     DC.B    '*.CSV',0
00001BE0                          1453              DS.W    0
00001BE0                          1454  
00001BE0                          1455  ; -----------------------------------------------------------------------------
00001BE0                          1456  GRDPLOT
00001BE0                          1457  ; PLOTS THE GRID
00001BE0                          1458  ; INPUT    : NONE
00001BE0                          1459  ; OUTPUT   : NONE
00001BE0                          1460  ; MODIFIES : NONE
00001BE0                          1461  ; -----------------------------------------------------------------------------
00001BE0                          1462              ; MACROS
00001BE0                          1463  SETCURSOR   MACRO 
00001BE0                          1464              MOVE.W  #\1,D1
00001BE0                          1465              LSL.W   #8,D1          
00001BE0                          1466              MOVE.B  #\2,D1
00001BE0                          1467              MOVE.L  #11,D0
00001BE0                          1468              TRAP    #15 
00001BE0                          1469              ENDM
00001BE0                          1470  SETFLLCLR   MACRO
00001BE0                          1471              MOVEM.L D0-D1,-(A7)
00001BE0                          1472              MOVE.L  #\1,D1
00001BE0                          1473              MOVE.B  #81,D0                  
00001BE0                          1474              TRAP    #15                     
00001BE0                          1475              MOVEM.L (A7)+,D0-D1
00001BE0                          1476              ENDM
00001BE0                          1477  DSPLYCONT   MACRO
00001BE0                          1478              CLR.L   D1
00001BE0                          1479              MOVE.W  (\1),D1
00001BE0                          1480              MOVE.L  #3,D0
00001BE0                          1481              TRAP    #15 
00001BE0                          1482              ENDM
00001BE0                          1483  PRNTCHR     MACRO
00001BE0                          1484              CLR.L   (A1)
00001BE0                          1485              MOVE.W  .CHARPRNT,(A1)
00001BE0                          1486              MOVE.W  #\1*8,D1
00001BE0                          1487              MOVE.W  #\2*13,D2
00001BE0                          1488              MOVE.L  #95,D0
00001BE0                          1489              TRAP    #15 
00001BE0                          1490              ENDM
00001BE0                          1491              ; END OF MACROS
00001BE0                          1492              
00001BE0  48E7 FF80               1493              MOVEM.L D0-D7/A0,-(A7)          ; SAVE CONTENT REGISTER
00001BE4                          1494              
00001BE4                          1495              ; SET PEN WIDTH
00001BE4  7201                    1496              MOVE.L  #1,D1
00001BE6  103C 005D               1497              MOVE.B  #93,D0
00001BEA  4E4F                    1498              TRAP    #15 
00001BEC                          1499              
00001BEC  3239 0000304C           1500              MOVE.W  GRDNPLR1,D1
00001BF2  B279 0000304E           1501              CMP.W   GRDNPLR2,D1             ; WHO IS WINNING?
00001BF8  6700 005E               1502              BEQ     .EQUALS                 ; TIE
00001BFC  6D00 002E               1503              BLT     .P2MRSCR                ; P1<P2, P2 WINS
00001C00                          1504m             SETFLLCLR CLRLTBLU              ; SET FILL COLOR                       
00001C14                          1505m             PRNTCHR GRDSCP1X,GRDSCP1Y       ; PRINT '*'
00001C28  6000 007E               1506              BRA     .EXIT     
00001C2C                          1507m .P2MRSCR    SETFLLCLR CLRLTRED              ; SET FILL COLOR
00001C40                          1508m             PRNTCHR GRDSCP2X,GRDSCP2Y       ; PRINT '*'
00001C54  6000 0052               1509              BRA     .EXIT
00001C58                          1510m .EQUALS     SETFLLCLR CLRLTBLU              ; SET FILL COLOR
00001C6C                          1511m             PRNTCHR GRDSCP1X,GRDSCP1Y       ; PRINT '*'
00001C80                          1512m             SETFLLCLR CLRLTRED              ; SET FILL COLOR
00001C94                          1513m             PRNTCHR GRDSCP2X,GRDSCP2Y       ; PRINT '*'
00001CA8                          1514              ;PLOT SCORES
00001CA8                          1515  .EXIT       ; PLAYER 1
00001CA8                          1516m             SETCURSOR GRDSCP1X,GRDSCP1Y     ; SET CURSOR                  
00001CB6                          1517m             SETFLLCLR CLRLTBLU              ; SET FILL COLOR 
00001CCA                          1518m             DSPLYCONT GRDNPLR1              ; PLOT CONT NUMBER
00001CD6                          1519              ; GENERATIONS
00001CD6                          1520m             SETCURSOR GRDSCNGX,GRDSCNGY     ; SET CURSOR                  
00001CE4                          1521m             SETFLLCLR CLRMDGRN              ; SET FILL COLOR 
00001CF8                          1522m             DSPLYCONT GRDNGEN               ; PLOT CONT NUMBER
00001D04                          1523              ; PLAYER 2
00001D04                          1524m             SETCURSOR GRDSCP2X,GRDSCP2Y     ; SET CURSOR        
00001D12                          1525m             SETFLLCLR CLRLTRED              ; SET FILL COLOR 
00001D26                          1526m             DSPLYCONT GRDNPLR2              ; PLOT CONT NUMBER
00001D32                          1527              ; DRAW CELLS
00001D32  2079 00002048           1528              MOVE.L  (GRDDST), A0            ; COPY @ OF GRDDST
00001D38  4283                    1529              CLR.L   D3                      ; COLMN COUNTER
00001D3A  4284                    1530              CLR.L   D4                      ; ROW COUNTER
00001D3C  4285                    1531              CLR.L   D5                      ; CELL COUNTER
00001D3E  343C 009E               1532              MOVE.W  #GRDYOFF,D2             ; TOP Y 
00001D42  323C 0010               1533              MOVE.W  #GRDXOFF,D1             ; LEFT X 
00001D46  3C3C 0040               1534              MOVE.W  #GRDWIDTH,D6            ; NUM. COLS
00001D4A  3E3C 0040               1535              MOVE.W  #GRDWIDTH,D7
00001D4E  CEFC 0020               1536              MULU.W  #GRDHEIGH,D7            ; TOTAL CELLS
00001D52  BA47                    1537  .STRT       CMP.W   D7,D5                   ; ALL CELL PAINTED?
00001D54  6700 008A               1538              BEQ     .DRWGRID                ; IF IT'S, DRAW GRID
00001D58  BA7C 0000               1539              CMP     #0,D5                   ; IF NOT,PAINT CELLS 
00001D5C  6700 0004               1540              BEQ     .CLMN                   
00001D60  5243                    1541              ADDQ.W  #1,D3
00001D62  5245                    1542  .CLMN       ADDQ.W  #1,D5
00001D64  B646                    1543              CMP.W   D6,D3    
00001D66  6C00 000C               1544              BGE     .ROW
00001D6A  0C18 0000               1545              CMP.B   #0,(A0)+                ; EMPTY CELL?
00001D6E  67E2                    1546              BEQ     .STRT                   ; IF IT'S, NEXT CELL
00001D70  6000 0010               1547              BRA     .DWCL                   ; IF NOT, DRAW CELL
00001D74  5244                    1548  .ROW        ADDQ.W  #1,D4                   ; NEW ROW
00001D76  4243                    1549              CLR.W   D3                      ; NEW COLUMN
00001D78  0C18 0000               1550              CMP.B   #0,(A0)+                ; EMPTY CELL?
00001D7C  67D4                    1551              BEQ     .STRT                   ; IF IT'S, NEXT CELL
00001D7E  6000 0002               1552              BRA     .DWCL                   ; IF NOT, DRAW CELL
00001D82  48E7 F880               1553  .DWCL       MOVEM.L  D0-D4/A0,-(A7)
00001D86  0C20 0001               1554              CMP.B   #1,-(A0)                ; WHOSE PLAYER CELL?
00001D8A  6700 001A               1555              BEQ     .P1CEL                  ; IF IT'S 1 = PLYR 1
00001D8E                          1556m             SETFLLCLR  CLRLTRED             ; SET FILL COLOR
00001DA2  6000 0016               1557              BRA     .DRAW                   ; JMP TO PLOT CELL
00001DA6                          1558m .P1CEL      SETFLLCLR  CLRLTBLU             ; SET FILL COLOR
00001DBA                          1559  .DRAW       ; CALC CELL POS. & DRAW IT 
00001DBA  C6FC 000C               1560              MULU.W  #GRDSZCEL,D3
00001DBE  C8FC 000C               1561              MULU.W  #GRDSZCEL,D4
00001DC2  D641                    1562              ADD.W   D1,D3
00001DC4  3203                    1563              MOVE.W  D3,D1                   ; X1
00001DC6  0643 000C               1564              ADD.W   #GRDSZCEL,D3            ; X2
00001DCA  D882                    1565              ADD.L   D2,D4
00001DCC  3404                    1566              MOVE.W  D4,D2                   ; Y1
00001DCE  0644 000C               1567              ADD.W   #GRDSZCEL,D4            ; Y2
00001DD2  303C 0057               1568              MOVE.W  #87,D0
00001DD6  4E4F                    1569              TRAP    #15
00001DD8  4CDF 011F               1570              MOVEM.L (A7)+,D0-D4/A0
00001DDC  6000 FF74               1571              BRA     .STRT
00001DE0                          1572  .DRWGRID    ;DRAW GRID
00001DE0                          1573              ; SET PEN COLOR              
00001DE0  103C 0050               1574              MOVE.B  #80,D0
00001DE4  223C 00005500           1575              MOVE.L  #CLRDKGRN,D1
00001DEA  4E4F                    1576              TRAP    #15
00001DEC                          1577              ; DRAW LINES
00001DEC  103C 0054               1578              MOVE.B  #84,D0
00001DF0                          1579              ; VERTICAL                       
00001DF0  3A3C 0040               1580              MOVE.W  #GRDWIDTH,D5
00001DF4  323C 0010               1581              MOVE.W  #GRDXOFF,D1             ; X1
00001DF8  343C 009E               1582              MOVE.W  #GRDYOFF,D2             ; Y1
00001DFC  363C 0010               1583              MOVE.W  #GRDXOFF,D3             ; X2
00001E00  383C 0180               1584              MOVE.W  #GRDPXHEI,D4
00001E04  D842                    1585              ADD.W   D2,D4                   ; Y2
00001E06  4E4F                    1586  .LNVRTCL    TRAP    #15
00001E08  0641 000C               1587              ADD.W   #GRDSZCEL,D1
00001E0C  3601                    1588              MOVE.W  D1,D3               
00001E0E  51CD FFF6               1589              DBRA.W  D5,.LNVRTCL
00001E12                          1590              ; HORIZONTAL
00001E12  3A3C 0020               1591              MOVE.W  #GRDHEIGH,D5
00001E16  323C 0010               1592              MOVE.W  #GRDXOFF,D1             ; X1 (Y1 SAME AS VERTICAL)
00001E1A  363C 0300               1593              MOVE.W  #GRDPXWID,D3
00001E1E  D641                    1594              ADD.W   D1,D3                   ; X2
00001E20  383C 009E               1595              MOVE.W  #GRDYOFF,D4             ; Y2
00001E24  4E4F                    1596  .LNHRZNTL   TRAP    #15           
00001E26  0642 000C               1597              ADD.W   #GRDSZCEL,D2
00001E2A  3802                    1598              MOVE.W  D2,D4
00001E2C  51CD FFF6               1599              DBRA.W  D5,.LNHRZNTL
00001E30                          1600              
00001E30  4CDF 01FF               1601              MOVEM.L (A7)+,D0-D7/A0
00001E34  4E75                    1602              RTS
00001E36                          1603   
00001E36= 2A 00                   1604  .CHARPRNT   DC.B    '*',0
00001E38                          1605              
00001E38                          1606  
00001E38                          1607  
00001E38                          1608  
00001E38                          1609  -------------------- end include --------------------
00001E38                          1610              INCLUDE "GOL.X68"               ; GAME OF LIFE APPLICATION
00001E38                          1611  ; =============================================================================
00001E38                          1612  ; TITLE    : GAME OF LIFE APPLICATION
00001E38                          1613  ; AUTHOR   : ANTONI BURGUERA
00001E38                          1614  ; HISTORY  : 05-JULY-2021 - CREATION
00001E38                          1615  ; COMMENTS : THIS IS AN APPLICATION. SO, IT IMPLEMENTS INITIALIZATION, UPDATE
00001E38                          1616  ;            AND PLOT, AS WELL AS SOME AUXILIARY SUBROUTINES.
00001E38                          1617  ; =============================================================================
00001E38                          1618  
00001E38                          1619  ; -----------------------------------------------------------------------------
00001E38                          1620  GOLINIT
00001E38                          1621  ; INITIALIZE GAME OF LIFE APPLICATION AS FOLLOWS:
00001E38                          1622  ; * MAKES THE INTERNAL STATE TO BE "PAUSED/STOPPED"
00001E38                          1623  ; * INITIALIZES THE USER INTERFACE (BY INITIALIZING THE BUTTONS LIST AND
00001E38                          1624  ;   ADDING BUTTONS INTO IT)
00001E38                          1625  ; * INITIALIZES THE GRID.
00001E38                          1626  ; * INITIALIZES THE UTILITY CODE.
00001E38                          1627  ; INPUT    : NONE
00001E38                          1628  ; OUTPUT   : NONE
00001E38                          1629  ; MODIFIES : NONE
00001E38                          1630  ; -----------------------------------------------------------------------------
00001E38  48E7 FFFE               1631              MOVEM.L D0-D7/A0-A6,-(A7)
00001E3C  13FC 0000 00003052      1632              MOVE.B  #GOLSPAUS,(GOLSTATE)
00001E44  4EB8 1342               1633              JSR     BTLINIT
00001E48  41F9 00001E6E           1634              LEA     .SDBLIST,A0
00001E4E  2258                    1635  .LOOP       MOVE.L  (A0)+,A1
00001E50  B3FC FFFFFFFF           1636              CMP.L   #-1,A1
00001E56  6700 0008               1637              BEQ     .END
00001E5A  4EB8 1362               1638              JSR     BTLADD
00001E5E  60EE                    1639              BRA     .LOOP
00001E60  4EB8 13DC               1640  .END        JSR     GRDINIT
00001E64  4EB8 10D0               1641              JSR     UTLINIT
00001E68  4CDF 7FFF               1642              MOVEM.L (A7)+,D0-D7/A0-A6
00001E6C  4E75                    1643              RTS
00001E6E= 00001F4A 00001F5C ...   1644  .SDBLIST    DC.L    GOLCLRBT,GOLRUNBT,GOLSTPBT,GOLSTEBT,GOLLLFBT,GOLLRTBT
00001E86= 00001FBE 00001FD4 ...   1645              DC.L    GOLLOABT,GOLSAVBT,-1
00001E92                          1646  
00001E92                          1647  ; -----------------------------------------------------------------------------
00001E92                          1648  GOLUPD
00001E92                          1649  ; UPDATE GAME OF LIFE APPLICATION AS FOLLOWS:
00001E92                          1650  ; * UPDATES THE BUTTON LIST
00001E92                          1651  ; * EXECUTES CODE DEPENDING ON THE CURRENT APPLICATION STATE.
00001E92                          1652  ; INPUT    : NONE
00001E92                          1653  ; OUTPUT   : NONE
00001E92                          1654  ; MODIFIES : NONE
00001E92                          1655  ; -----------------------------------------------------------------------------
00001E92  48E7 C0C0               1656              MOVEM.L A0-A1/D0-D1,-(A7)
00001E96  4EB8 138C               1657              JSR     BTLUPD
00001E9A  41F9 00001EB6           1658              LEA     .JMPTBL,A0
00001EA0  4280                    1659              CLR.L   D0
00001EA2  1039 00003052           1660              MOVE.B  (GOLSTATE),D0
00001EA8  E508                    1661              LSL.B   #2,D0
00001EAA  2070 0000               1662              MOVE.L  (A0,D0),A0
00001EAE  4E90                    1663              JSR     (A0)
00001EB0  4CDF 0303               1664              MOVEM.L (A7)+,A0-A1/D0-D1
00001EB4  4E75                    1665              RTS
00001EB6= 0000141C 00001EC6       1666  .JMPTBL     DC.L    GRDMUPD,GOLDORUN
00001EBE                          1667  
00001EBE                          1668  ; -----------------------------------------------------------------------------
00001EBE                          1669  GOLPLOT
00001EBE                          1670  ; PLOTS THE APPLICATION BY CALLING BTLPLOT AND GRDPLOT
00001EBE                          1671  ; INPUT    : NONE
00001EBE                          1672  ; OUTPUT   : NONE
00001EBE                          1673  ; MODIFIES : NONE
00001EBE                          1674  ; -----------------------------------------------------------------------------
00001EBE  4EB8 13B4               1675              JSR     BTLPLOT
00001EC2  4EF8 1BE0               1676              JMP     GRDPLOT
00001EC6                          1677  
00001EC6                          1678  ; -----------------------------------------------------------------------------
00001EC6                          1679  GOLDORUN
00001EC6                          1680  ; EXECUTES THE RUN STATE. IT ALSO CHECKS IF THE MAXIMUM NUMBER OF GENERATIONS
00001EC6                          1681  ; IS REACHED AND, IF SO, ANNOUNCES THE WINNER.
00001EC6                          1682  ; INPUT    : NONE
00001EC6                          1683  ; OUTPUT   : NONE
00001EC6                          1684  ; MODIFIES : NONE
00001EC6                          1685  ; -----------------------------------------------------------------------------
00001EC6  48E7 8040               1686              MOVEM.L D0/A1,-(A7)
00001ECA  0C79 00FA 00003050      1687              CMP.W   #GOLMAXGN,(GRDNGEN)
00001ED2  6D00 0034               1688              BLT     .DOIT
00001ED6  43F9 00001F28           1689              LEA     .TIE,A1
00001EDC  3039 0000304C           1690              MOVE.W  (GRDNPLR1),D0
00001EE2  B079 0000304E           1691              CMP.W   (GRDNPLR2),D0
00001EE8  6700 0012               1692              BEQ     .PLAYSOUND
00001EEC  43F9 00001F12           1693              LEA     .P1WINS,A1
00001EF2  6E00 0008               1694              BGT     .PLAYSOUND
00001EF6  43F9 00001F1D           1695              LEA     .P2WINS,A1
00001EFC  103C 0046               1696  .PLAYSOUND  MOVE.B  #70,D0
00001F00  4E4F                    1697              TRAP    #15
00001F02  4EB9 00001F40           1698  .NOSOUND    JSR     GOLTOPAU
00001F08  4EB8 151E               1699  .DOIT       JSR     GRDRUPD
00001F0C  4CDF 0201               1700              MOVEM.L (A7)+,D0/A1
00001F10  4E75                    1701              RTS
00001F12= 50 31 57 49 4E 53 ...   1702  .P1WINS     DC.B    'P1WINS.WAV',0
00001F1D= 50 32 57 49 4E 53 ...   1703  .P2WINS     DC.B    'P2WINS.WAV',0
00001F28= 54 49 45 2E 57 41 ...   1704  .TIE        DC.B    'TIE.WAV',0
00001F30                          1705              DS.W    0
00001F30                          1706  
00001F30                          1707  ; -----------------------------------------------------------------------------
00001F30                          1708  GOLTORUN
00001F30                          1709  ; SWITCHES TO RUN STATE
00001F30                          1710  ; INPUT    : NONE
00001F30                          1711  ; OUTPUT   : NONE
00001F30                          1712  ; MODIFIES : NONE
00001F30                          1713  ; -----------------------------------------------------------------------------
00001F30  4279 00003050           1714              CLR.W   (GRDNGEN)               ; CLEAR GENERATIONS COUNT
00001F36  13FC 0001 00003052      1715              MOVE.B  #GOLSEXEC,(GOLSTATE)
00001F3E  4E75                    1716              RTS
00001F40                          1717  
00001F40                          1718  ; -----------------------------------------------------------------------------
00001F40                          1719  GOLTOPAU
00001F40                          1720  ; SWITCHES TO PAUSE STATE
00001F40                          1721  ; INPUT    : NONE
00001F40                          1722  ; OUTPUT   : NONE
00001F40                          1723  ; MODIFIES : NONE
00001F40                          1724  ; -----------------------------------------------------------------------------
00001F40  13FC 0000 00003052      1725              MOVE.B  #GOLSPAUS,(GOLSTATE)
00001F48  4E75                    1726              RTS
00001F4A                          1727  
00001F4A                          1728  ; --- STATIC DATA -------------------------------------------------------------
00001F4A                          1729  
00001F4A                          1730  ; CLEAR BUTTON SDB
00001F4A                          1731  
00001F4A= 000A                    1732  GOLCLRBT    DC.W    BTLVEMRG                ; YTOP
00001F4C= 000A                    1733              DC.W    0*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001F4E= 0028                    1734              DC.W    BTLVERSZ                ; HEIGHT
00001F50= 00B4                    1735              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001F52                          1736  ; TODO: PLACE THE CALLBACK HERE
00001F52= 000013DC                1737              DC.L    GRDINIT                 ; CALLBACK(GRID.X68)
00001F56= 43 4C 45 41 52 00       1738              DC.B    'CLEAR',0               ; TEXT
00001F5C                          1739              DS.W    0
00001F5C                          1740  
00001F5C                          1741  ; RUN BUTTON SDB
00001F5C                          1742  
00001F5C= 000A                    1743  GOLRUNBT    DC.W    BTLVEMRG                ; YTOP
00001F5E= 00D2                    1744              DC.W    1*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001F60= 0028                    1745              DC.W    BTLVERSZ                ; HEIGHT
00001F62= 00B4                    1746              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001F64                          1747  ; TODO: PLACE THE CALLBACK HERE
00001F64= 00001F30                1748              DC.L    GOLTORUN                ; CALLBACK(GOL.X68)
00001F68= 52 55 4E 00             1749              DC.B    'RUN',0                 ; TEXT
00001F6C                          1750              DS.W    0
00001F6C                          1751  
00001F6C                          1752  ; STOP BUTTON SDB
00001F6C                          1753  
00001F6C= 000A                    1754  GOLSTPBT    DC.W    BTLVEMRG                ; YTOP
00001F6E= 019A                    1755              DC.W    2*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001F70= 0028                    1756              DC.W    BTLVERSZ                ; HEIGHT
00001F72= 00B4                    1757              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001F74                          1758  ; TODO: PLACE THE CALLBACK HERE
00001F74= 00001F40                1759              DC.L    GOLTOPAU                ; CALLBACK(GOL.X68)
00001F78= 53 54 4F 50 00          1760              DC.B    'STOP',0                ; TEXT
00001F7E                          1761              DS.W    0
00001F7E                          1762  
00001F7E                          1763  ; STEP BUTTON SDB
00001F7E                          1764  
00001F7E= 000A                    1765  GOLSTEBT    DC.W    BTLVEMRG                ; YTOP
00001F80= 0262                    1766              DC.W    3*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001F82= 0028                    1767              DC.W    BTLVERSZ                ; HEIGHT
00001F84= 00B4                    1768              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001F86                          1769  ; TODO: PLACE THE CALLBACK HERE
00001F86= 0000151E                1770              DC.L    GRDRUPD                 ; CALLBACK(GRID.X68)
00001F8A= 53 54 45 50 00          1771              DC.B    'STEP',0                ; TEXT
00001F90                          1772              DS.W    0
00001F90                          1773  
00001F90                          1774  ; LOAD LEFT BUTTON SDB
00001F90                          1775  
00001F90= 003C                    1776  GOLLLFBT    DC.W    2*BTLVEMRG+BTLVERSZ     ; YTOP
00001F92= 000A                    1777              DC.W    0*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001F94= 0028                    1778              DC.W    BTLVERSZ                ; HEIGHT
00001F96= 00B4                    1779              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001F98                          1780  ; TODO: PLACE THE CALLBACK HERE
00001F98= 00001A7A                1781              DC.L    GRDLLEFT                ; CALLBACK(GRID.X68)
00001F9C= 4C 4F 41 44 20 4C ...   1782              DC.B    'LOAD LEFT',0           ; TEXT
00001FA6                          1783              DS.W    0
00001FA6                          1784  
00001FA6                          1785  ; LOAD RIGHT BUTTON SDB
00001FA6                          1786  
00001FA6= 003C                    1787  GOLLRTBT    DC.W    2*BTLVEMRG+BTLVERSZ     ; YTOP
00001FA8= 00D2                    1788              DC.W    1*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001FAA= 0028                    1789              DC.W    BTLVERSZ                ; HEIGHT
00001FAC= 00B4                    1790              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001FAE                          1791  ; TODO: PLACE THE CALLBACK HERE
00001FAE= 00001B2A                1792              DC.L    GRDLRGT                 ; CALLBACK(GRID.X68)
00001FB2= 4C 4F 41 44 20 52 ...   1793              DC.B    'LOAD RIGHT',0          ; TEXT
00001FBE                          1794              DS.W    0
00001FBE                          1795  
00001FBE                          1796  ; LOAD ALL BUTTON SDB
00001FBE                          1797  
00001FBE= 003C                    1798  GOLLOABT    DC.W    2*BTLVEMRG+BTLVERSZ     ; YTOP
00001FC0= 019A                    1799              DC.W    2*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001FC2= 0028                    1800              DC.W    BTLVERSZ                ; HEIGHT
00001FC4= 00B4                    1801              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001FC6                          1802  ; TODO: PLACE THE CALLBACK HERE
00001FC6= 000019DA                1803              DC.L    GRDLOAD                 ; CALLBACK(GRID.X68)
00001FCA= 4C 4F 41 44 20 41 ...   1804              DC.B    'LOAD ALL',0            ; TEXT
00001FD4                          1805              DS.W    0
00001FD4                          1806  
00001FD4                          1807  ; SAVE BUTTON SDB
00001FD4                          1808  
00001FD4= 003C                    1809  GOLSAVBT    DC.W    2*BTLVEMRG+BTLVERSZ     ; YTOP
00001FD6= 0262                    1810              DC.W    3*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001FD8= 0028                    1811              DC.W    BTLVERSZ                ; HEIGHT
00001FDA= 00B4                    1812              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001FDC                          1813  ; TODO: PLACE THE CALLBACK HERE
00001FDC= 0000192E                1814              DC.L    GRDSAVE                 ; CALLBACK (GRID.X68)
00001FE0= 53 41 56 45 00          1815              DC.B    'SAVE',0                ; TEXT
00001FE6                          1816              DS.W    0
00001FE6                          1817  
00001FE6                          1818  -------------------- end include --------------------
00001FE6                          1819  
00001FE6                          1820  ; --- INITIALIZE --------------------------------------------------------------
00001FE6                          1821  
00001FE6  4EB8 1000               1822  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM CODE
00001FEA  4EB8 1E38               1823              JSR     GOLINIT                 ; INITIALIZE GAME OF LIFE
00001FEE                          1824  
00001FEE                          1825  ; --- UPDATE ------------------------------------------------------------------
00001FEE                          1826  
00001FEE  4E41                    1827  .LOOP       TRAP    #MOUTRAP                ; READ MOUSE
00001FF0  4EB8 1E92               1828              JSR     GOLUPD                  ; UPDATE APPLICATION
00001FF4                          1829  
00001FF4                          1830  ; --- PLOT --------------------------------------------------------------------
00001FF4                          1831  
00001FF4  4EB8 1EBE               1832              JSR     GOLPLOT                 ; PLOT APPLICATION
00001FF8  4E40                    1833              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001FFA  60F2                    1834              BRA     .LOOP
00001FFC  FFFF FFFF               1835              SIMHALT
00002000                          1836  
00002000                          1837  ; --- VARIABLES ---------------------------------------------------------------
00002000                          1838  
00002000                          1839              INCLUDE "SYSVAR.X68"            ; SYSTEM VARIABLES
00002000                          1840  ; =============================================================================
00002000                          1841  ; TITLE    : SYSTEM VARS
00002000                          1842  ; AUTHOR   : ANTONI BURGUERA
00002000                          1843  ; HISTORY  : 05-JULY-2021 - CREATION
00002000                          1844  ; COMMENTS : * ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00002000                          1845  ;              THEY MUST NOT BE IN PROTECTED MEMORY.
00002000                          1846  ;
00002000                          1847  ;            * SINCE SOME SUBROUTINES TAKE ADVANTAGE OF THE ORDER IN WHICH
00002000                          1848  ;              THE VARIABLES ARE IN MEMORY, THEIR ORDER SHOULD NOT BE ALTERED.
00002000                          1849  ; =============================================================================
00002000                          1850  
00002000                          1851  ; --- MOUSE RELATED VARIABLES -------------------------------------------------
00002000                          1852  
00002000                          1853  MOUY        DS.W    1                       ; MOUSE Y COORDINATE
00002002                          1854  MOUX        DS.W    1                       ; MOUSE X COORDINATE
00002004                          1855  MOUVAL      DS.B    1                       ; CURRENT MOUSE BUTTON STATUS
00002005                          1856  MOUEDGE     DS.B    1                       ; RISING EDGES IN MOUVAL
00002006                          1857              DS.W    0
00002006                          1858  -------------------- end include --------------------
00002006                          1859              INCLUDE "VAR.X68"               ; USER VARIABLES
00002006                          1860  ; =============================================================================
00002006                          1861  ; TITLE    : USER VARS
00002006                          1862  ; AUTHOR   : ANTONI BURGUERA
00002006                          1863  ; HISTORY  : 05-JULY-2021 - CREATION
00002006                          1864  ; COMMENTS : SEE THE CORRESPONDING FILES (UTIL.X68, BTNLIST.X68, GRID.X68 OR
00002006                          1865  ;            GOL.X68) TO LEARN ABOUT THE MEANING OF THESE VARIABLES.
00002006                          1866  ; =============================================================================
00002006                          1867  
00002006                          1868  ; --- UTILITY VARS ------------------------------------------------------------
00002006                          1869  
00002006                          1870  UTLRNDIX    DS.B    1                       ; RANDOM GENERATOR INDEX
00002008                          1871              DS.W    0
00002008                          1872  
00002008                          1873  ; --- BUTTON LIST -------------------------------------------------------------
00002008                          1874  
00002008                          1875  BTLDATA     DS.B    BTLMXVDB*BTNSZVDB       ; BUTTONS VDB STORAGE
00002044                          1876              DS.W    0
00002044                          1877  
00002044                          1878  ; --- GRID --------------------------------------------------------------------
00002044                          1879  
00002044                          1880  GRDSRC      DS.L    1                       ; SOURCE MATRIX POINTER
00002048                          1881  GRDDST      DS.L    1                       ; DESTINATION MATRIX POINTER
0000204C                          1882  GRDMATR0    DS.B    GRDWIDTH*GRDHEIGH       ; ONE OF THE GRIDS...
0000284C                          1883  GRDMATR1    DS.B    GRDWIDTH*GRDHEIGH       ; THE OTHER GRID
0000304C                          1884  GRDNPLR1    DS.W    1                       ; NUMBER OF PLAYER 1 CELLS
0000304E                          1885  GRDNPLR2    DS.W    1                       ; NUMBER OF PLAYER 2 CELLS
00003050                          1886  GRDNGEN     DS.W    1                       ; NUMOER OF GENERATIONS
00003052                          1887  
00003052                          1888  ; --- APPLICATION -------------------------------------------------------------
00003052                          1889  
00003052                          1890  GOLSTATE    DS.B    1                       ; APPLICATION STATE
00003054                          1891              DS.W    0
00003054                          1892  -------------------- end include --------------------
00003054                          1893  
00003054                          1894              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BTLADD              1362
BTLADD:END          1380
BTLADD:FOUND        1386
BTLADD:LOOP         1370
BTLCLEAR            1342
BTLDATA             2008
BTLHOMRG            A
BTLINIT             1342
BTLINIT:LOOP        1350
BTLMXVDB            A
BTLPLOT             13B4
BTLPLOT:DONE        13D6
BTLPLOT:LOOP        13C2
BTLUPD              138C
BTLUPD:DONE         13AE
BTLUPD:LOOP         139A
BTLVEMRG            A
BTLVERSZ            28
BTNINIT             1208
BTNPENCL            5500
BTNPENWD            4
BTNPLOT             1290
BTNPLOT:DONE        131E
BTNPLOT:EXIT        12CE
BTNPLOT:LOOP        1310
BTNPLOT:MOUIN       12C8
BTNPRSCL            6600
BTNSELCL            AA00
BTNSZVDB            6
BTNUPD              1218
BTNUPD:END          128A
BTNUPD:MOUSEOUT     1286
CHRHEIGH            10
CHRSHHEI            4
CHRSHWID            3
CHRWIDTH            8
CLRBLACK            0
CLRDKGRN            5500
CLRLTBLU            FF0000
CLRLTGRN            AA00
CLRLTRED            FF
CLRMDGRN            6600
CLRWHITE            FFFFFF
DSPLYCONT           171
GOLCLRBT            1F4A
GOLDORUN            1EC6
GOLDORUN:DOIT       1F08
GOLDORUN:NOSOUND    1F02
GOLDORUN:P1WINS     1F12
GOLDORUN:P2WINS     1F1D
GOLDORUN:PLAYSOUND  1EFC
GOLDORUN:TIE        1F28
GOLINIT             1E38
GOLINIT:END         1E60
GOLINIT:LOOP        1E4E
GOLINIT:SDBLIST     1E6E
GOLLLFBT            1F90
GOLLOABT            1FBE
GOLLRTBT            1FA6
GOLMAXGN            FA
GOLPLOT             1EBE
GOLRUNBT            1F5C
GOLSAVBT            1FD4
GOLSEXEC            1
GOLSPAUS            0
GOLSTATE            3052
GOLSTEBT            1F7E
GOLSTPBT            1F6C
GOLTOPAU            1F40
GOLTORUN            1F30
GOLUPD              1E92
GOLUPD:JMPTBL       1EB6
GRDCOLP1            FF0000
GRDCOLP2            FF
GRDDST              2048
GRDHEIGH            20
GRDINIT             13DC
GRDINIT:LOOP        1410
GRDLLEFT            1A7A
GRDLLEFT:COPY       1AD6
GRDLLEFT:END        1AFE
GRDLLEFT:FILTER     1B24
GRDLLEFT:LOOP       1AC4
GRDLLEFT:MSG        1B0A
GRDLLEFT:STORE      1AE8
GRDLOAD             19DA
GRDLOAD:COPY        1A36
GRDLOAD:END         1A4E
GRDLOAD:FILTER      1A74
GRDLOAD:LOOP        1A24
GRDLOAD:MSG         1A5A
GRDLRGT             1B2A
GRDLRGT:COPY        1B90
GRDLRGT:END         1BB4
GRDLRGT:FILTER      1BDA
GRDLRGT:LOOP        1B74
GRDLRGT:MSG         1BC0
GRDLRGT:STORE       1BA2
GRDMATR0            204C
GRDMATR1            284C
GRDMSHEI            1F
GRDMSWID            3F
GRDMUPD             141C
GRDMUPD:CLRCELL     14E8
GRDMUPD:CLRPLR2     1502
GRDMUPD:END         1518
GRDMUPD:PLAYER1     14B4
GRDMUPD:PLAYER2     14CE
GRDMUPD:PLYR1R2     14AA
GRDMUPD:RGHTCLK     149A
GRDMUPD:SETZERO     1512
GRDNGEN             3050
GRDNPLR1            304C
GRDNPLR2            304E
GRDPLOT             1BE0
GRDPXHEI            180
GRDPXWID            300
GRDRUPD             151E
GRDRUPD:ADDNP1      183C
GRDRUPD:ADDNP2      1840
GRDRUPD:BP1C        18CC
GRDRUPD:BP2C        18D4
GRDRUPD:BRULES      18B8
GRDRUPD:CALCN       182A
GRDRUPD:CLRC        1922
GRDRUPD:CTODEAD     18B4
GRDRUPD:CTOP1       187C
GRDRUPD:CTOP2       18AC
GRDRUPD:END         1904
GRDRUPD:ENDLOOP     18EA
GRDRUPD:LC          17A2
GRDRUPD:LLC         164E
GRDRUPD:LOOP        156A
GRDRUPD:LRC         175E
GRDRUPD:MC          17E6
GRDRUPD:MLC         160A
GRDRUPD:MRC         171A
GRDRUPD:P2COUNTER   1914
GRDRUPD:P2R         1884
GRDRUPD:RANDC       18E4
GRDRUPD:SRULES      1844
GRDRUPD:TC          1692
GRDRUPD:TLC         15C6
GRDRUPD:TRC         16D6
GRDSAVE             192E
GRDSAVE:END         19AE
GRDSAVE:FILTER      19D4
GRDSAVE:LOOP        197C
GRDSAVE:LOOPY       1978
GRDSAVE:MSG         19BA
GRDSCNGX            30
GRDSCNGY            9
GRDSCP1X            2
GRDSCP1Y            9
GRDSCP2X            5E
GRDSCP2Y            9
GRDSHHEI            5
GRDSHWID            6
GRDSRC              2044
GRDSZCEL            C
GRDVEMRG            6E
GRDWIDTH            40
GRDXOFF             10
GRDYOFF             9E
MOUBITLF            0
MOUBITMD            2
MOUBITRT            1
MOUEDGE             2005
MOUINIT             1020
MOUMSKLF            1
MOUMSKMD            4
MOUMSKRT            2
MOUREAD             1054
MOUTRAP             1
MOUVAL              2004
MOUX                2002
MOUY                2000
PRNTCHR             1ED
PRNTCHR:CHARPRNT    1E36
PRNTCHR:CLMN        1D62
PRNTCHR:DRAW        1DBA
PRNTCHR:DRWGRID     1DE0
PRNTCHR:DWCL        1D82
PRNTCHR:EQUALS      1C58
PRNTCHR:EXIT        1CA8
PRNTCHR:LNHRZNTL    1E24
PRNTCHR:LNVRTCL     1E06
PRNTCHR:P1CEL       1DA6
PRNTCHR:P2MRSCR     1C2C
PRNTCHR:ROW         1D74
PRNTCHR:STRT        1D52
SCRHEIGH            258
SCRINIT             107E
SCRTRAP             0
SCRUPD              10B6
SCRWIDTH            320
SETCURSOR           0
SETFLLCLR           A5
START               1FE6
START:LOOP          1FEE
SYSINIT             1000
UTLINIT             10D0
UTLRAND             10EA
UTLRAND:RANDVEC     1108
UTLRNDIX            2006
UTLSTRLN            10D8
UTLSTRLN:END        10E6
UTLSTRLN:LOOP       10DC
