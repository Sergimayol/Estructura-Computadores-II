00001406 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 09/01/2022 23:02:00

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : GAME OF LIFE APPLICATION
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; CREATION : 05-JULY-2021
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; TITLE    : SYSTEM CONSTANTS
00001000                            14  ; AUTHOR   : ANTONI BURGUERA
00001000                            15  ; HISTORY  : 05-JULY-2021 - CREATION
00001000                            16  ; COMMENTS : * MOUVAL AND MOUEDGE FORMAT IS AS FOLLOWS:
00001000                            17  ;              +---+---+---+---+---+---+---+---+
00001000                            18  ;              | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            19  ;              +---+---+---+---+---+---+---+---+
00001000                            20  ;              \-------------------/ |   |   |
00001000                            21  ;                        |           |   |   +-- LEFT MOUSE BUTTON
00001000                            22  ;                        |           |   +------ RIGHT MOUSE BUTTON
00001000                            23  ;                        |           +---------- CENTRAL MOUSE BUTTON
00001000                            24  ;                        +---------------------- 0
00001000                            25  ;              A "1" IN ONE OF THESE BITS IN MOUVAL MEANS "BUTTON PRESSED".
00001000                            26  ;              A "0" IN ONE OF THESE BITS IN MOUVAL MEANS "BUTTON NOT PRESSED".
00001000                            27  ;              A "1" IN ONE OF THESE BITS IN MOUEDGE MEANS "BUTTON CLICKED".
00001000                            28  ;              A "0" IN ONE OF THESE BITS IN MOUEDGE MEANS "BUTTON NOT CLICKED".
00001000                            29  ;              A "CLICK" IS A CHANGE FROM 0 TO 1 IN SUBSEQUENT UPDATES.
00001000                            30  ;              BOTH MOUVEL AND MOUEDGE ARE UPDATED BY TRAP #MOUTRAP
00001000                            31  ;
00001000                            32  ;            * MASKS AND BIT POSITIONS ARE DEFINED TO EASE MOUSE ACCESS. FOR
00001000                            33  ;              EXAMPLE, ONE CAN DO THE FOLLOWING TO CHECK IF THE LEFT BUTTON
00001000                            34  ;              IS PRESSED:
00001000                            35  ;
00001000                            36  ;              BTST.L #MOUBITLF,(MOUVAL)
00001000                            37  ;              BNE ...
00001000                            38  ;
00001000                            39  ;              ALTERNATIVELY, ONE CAN ALSO DO THE FOLLOWING DEPENDING ON THE
00001000                            40  ;              CONTEXT:
00001000                            41  ;
00001000                            42  ;              MOVE.B  (MOUVAL),D0
00001000                            43  ;              AND.B   #MOUMSKLF,D0
00001000                            44  ;              BNE ...
00001000                            45  ; =============================================================================
00001000                            46  
00001000                            47  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            48  
00001000  =00000000                 49  SCRTRAP     EQU     0                       ; SCREEN REFRESH TRAP NUMBER
00001000  =00000320                 50  SCRWIDTH    EQU     800                     ; SCREEN WIDTH (PIXELS)
00001000  =00000258                 51  SCRHEIGH    EQU     600                     ; SCREEN HEIGHT (PIXELS)
00001000                            52  
00001000                            53  ; --- MOUSE RELATED CONSTANTS -------------------------------------------------
00001000                            54  
00001000  =00000001                 55  MOUTRAP     EQU     1                       ; MOUSE QUERY TRAP NUMBER
00001000  =00000001                 56  MOUMSKLF    EQU     %00000001               ; LEFT MOUSE BUTTON MASK
00001000  =00000002                 57  MOUMSKRT    EQU     %00000010               ; RIGHT MOUSE BUTTON MASK
00001000  =00000004                 58  MOUMSKMD    EQU     %00000100               ; MIDDLE MOUSE BUTTON MASL
00001000  =00000000                 59  MOUBITLF    EQU     0                       ; LEFT MOUSE BUTTON BIT POSITION
00001000  =00000001                 60  MOUBITRT    EQU     1                       ; RIGHT MOUSE BUTTON BIT POSITION
00001000  =00000002                 61  MOUBITMD    EQU     2                       ; MIDDLE MOUSE BUTTON BIT POSITION
00001000  =00000002                 62  -------------------- end include --------------------
00001000                            63              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            64  ; =============================================================================
00001000                            65  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            66  ; AUTHOR   : ANTONI BURGUERA
00001000                            67  ; HISTORY  : 05-JULY-2021 - CREATION
00001000                            68  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                            69  ;            - SYS : GENERIC.
00001000                            70  ;            - SCR : SCREEN MANAGEMENT.
00001000                            71  ;            - MOU : MOUSE MANAGEMENT
00001000                            72  ;            THE FORMAT OF MOUVAL AND MOUEDGE IS DESCRIBED IN SYSCONST.
00001000                            73  ; =============================================================================
00001000                            74  
00001000                            75  ; -----------------------------------------------------------------------------
00001000                            76  SYSINIT
00001000                            77  ; INITIALIZES THE SYSTEM AS FOLLOWS:
00001000                            78  ; * DISABLES INTERRUPTS
00001000                            79  ; * CALLS SCRINIT
00001000                            80  ; * CALLS MOUINIT
00001000                            81  ; * ENABLES SIMULATOR EXCEPTION PROCESSING
00001000                            82  ; * SWITCHES TO USER
00001000                            83  ; INPUT    - NONE
00001000                            84  ; OUTPUT   - NONE
00001000                            85  ; MODIFIES - NONE
00001000                            86  ; NOTE     - NOTE THAT INTERRUPTS REMAIN DISABLED AFTER THIS SUBROUTINE
00001000                            87  ; -----------------------------------------------------------------------------
00001000                            88              
00001000                            89              
00001000  007C 0700                 90              OR.W    #$0700,SR               ; Disables interrupts
00001004  4EB9 0000107E             91              JSR     SCRINIT                 ; Calls to SCRINIT
0000100A  4EB9 00001020             92              JSR     MOUINIT                 ; Calls to MOUINIT
00001010  103C 0020                 93              MOVE.B  #32,D0                  ; Enable exception processing
00001014  123C 0005                 94              MOVE.B  #5,D1                   
00001018  4E4F                      95              TRAP    #15                      
0000101A  46FC 2000                 96              MOVE    #$2000,SR               ; Switches to user 
0000101E                            97              
0000101E  4E75                      98              RTS
00001020                            99  
00001020                           100  ; =============================================================================
00001020                           101  ; MOUSE MANAGEMENT (SYSTEM CODE)
00001020                           102  ; =============================================================================
00001020                           103  
00001020                           104  ; -----------------------------------------------------------------------------
00001020                           105  MOUINIT
00001020                           106  ; INITIALIZES MOUSE AS FOLLOWS:
00001020                           107  ; * STORES CURRENT MOUSE POSITION AND BUTTON STATUS INTO MOUY, MOUX AND MOUVAL
00001020                           108  ; * CLEARS MOUEDGE
00001020                           109  ; * INSTALLS MOUREAD INTO TRAP #MOUTRAP
00001020                           110  ; INPUT    - NONE
00001020                           111  ; OUTPUT   - NONE
00001020                           112  ; MODIFIES - ALL REGISTERS CAN BE MODIFIED
00001020                           113  ; -----------------------------------------------------------------------------
00001020                           114  
00001020  103C 003D                115              MOVE.B  #61, D0
00001024  123C 0000                116              MOVE.B  #0, D1
00001028  4E4F                     117              TRAP    #15
0000102A  C0BC 00000007            118              AND.L   #7, D0
00001030  13C0 00001506            119              MOVE.B  D0, MOUVAL
00001036  33C1 00001504            120              MOVE.W  D1, MOUX
0000103C  4841                     121              SWAP    D1
0000103E  33C1 00001502            122              MOVE.W  D1, MOUY            
00001044  4239 00001507            123              CLR.B   MOUEDGE                 ; clears MOUEDGE
0000104A  21FC 00001054 0084       124              MOVE.L  #MOUREAD,($80+MOUTRAP*4) ;Installs mouread into moutrap
00001052                           125              
00001052  4E75                     126              RTS
00001054                           127  
00001054                           128  ; -----------------------------------------------------------------------------
00001054                           129  MOUREAD
00001054                           130  ; MOUSE READING TRAP SERVICE ROUTINE. IT DOES THE FOLLOWING:
00001054                           131  ; * STORES CURRENT MOUSE POSITION INTO MOUY AND MOUX.
00001054                           132  ; * STORES CURRENT BUTTON STATUS INTO MOUVAL
00001054                           133  ; * COMPUTES AND STORES MOUEDGE
00001054                           134  ; INPUT    - NONE
00001054                           135  ; OUTPUT   - NONE
00001054                           136  ; MODIFIES - NONE
00001054                           137  ; -----------------------------------------------------------------------------
00001054                           138                         
00001054  303C 003D                139              MOVE.W  #61,D0
00001058  4281                     140              CLR.L   D1
0000105A  4E4F                     141              TRAP    #15
0000105C  23C1 00001502            142              MOVE.L  D1,(MOUY)               ; STORES CURRENT POS TO MOUX/Y
00001062  C03C 0007                143              AND.B   #7,D0                   ; AND TO GET ONLY THE LAST 3 BITS
00001066  1439 00001506            144              MOVE.B  (MOUVAL),D2             ; COMPUTE EDGE
0000106C  4602                     145              NOT.B   D2                      ; EDGE=NOT(PREVIOUS) AND CURRENT
0000106E  C400                     146              AND.B   D0,D2
00001070  13C0 00001506            147              MOVE.B  D0,(MOUVAL)             ; STORES MOUSE STATUS TO MOUVAL 
00001076  13C2 00001507            148              MOVE.B  D2,(MOUEDGE)            ; STORES MOUEDGE
0000107C                           149                  
0000107C  4E73                     150              RTE
0000107E                           151  
0000107E                           152  ; =============================================================================
0000107E                           153  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000107E                           154  ; =============================================================================
0000107E                           155  
0000107E                           156  ; -----------------------------------------------------------------------------
0000107E                           157  SCRINIT
0000107E                           158  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS AS FOLLOWS:
0000107E                           159  ; * INSTALLS SCRUPD INTO TRAP #SCRTRAP
0000107E                           160  ; * SETS OUTPUT RESOLUTION TO SCRWIDTH*SCRHEIGH
0000107E                           161  ; * SETS OUTPUT TO WINDOWED MODE
0000107E                           162  ; * ENABLES DOUBLE BUFFER AND CLEARS BOTH SCREEN BUFFERS
0000107E                           163  ; INPUT    - NONE
0000107E                           164  ; OUTPUT   - NONE
0000107E                           165  ; MODIFIES - ALL REGISTERS CAN BE MODIFIED
0000107E                           166  ; -----------------------------------------------------------------------------
0000107E  21FC 000010B6 0080       167              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001086  223C 03200258            168              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000108C  103C 0021                169              MOVE.B  #33,D0
00001090  4E4F                     170              TRAP    #15
00001092  7201                     171              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001094  4E4F                     172              TRAP    #15
00001096  323C FF00                173              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000109A  103C 000B                174              MOVE.B  #11,D0
0000109E  4E4F                     175              TRAP    #15
000010A0  123C 0011                176              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
000010A4  103C 005C                177              MOVE.B  #92,D0
000010A8  4E4F                     178              TRAP    #15
000010AA  323C FF00                179              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010AE  103C 000B                180              MOVE.B  #11,D0
000010B2  4E4F                     181              TRAP    #15
000010B4  4E75                     182              RTS
000010B6                           183  
000010B6                           184  ; -----------------------------------------------------------------------------
000010B6                           185  SCRUPD
000010B6                           186  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
000010B6                           187  ; BUFFER FOR THE NEXT ONE. PERFORMS TWO TASKS:
000010B6                           188  ; * CLEARS ACTIVE (HIDDEN) GRAPHICS BUFFER
000010B6                           189  ; * SWITCHES ACTIVE AND VISIBLE GRAPHICS BUFFER
000010B6                           190  ; INPUT    - NONE
000010B6                           191  ; OUTPUT   - NONE
000010B6                           192  ; MODIFIES - NONE
000010B6                           193  ; -----------------------------------------------------------------------------
000010B6  48A7 C000                194              MOVEM.W D0-D1,-(A7)
000010BA  103C 005E                195              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010BE  4E4F                     196              TRAP    #15
000010C0  323C FF00                197              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010C4  103C 000B                198              MOVE.B  #11,D0
000010C8  4E4F                     199              TRAP    #15
000010CA  4C9F 0003                200              MOVEM.W (A7)+,D0-D1
000010CE  4E73                     201              RTE
000010D0                           202  
000010D0                           203  
000010D0                           204  
000010D0                           205  
000010D0                           206  
000010D0                           207  
000010D0                           208  -------------------- end include --------------------
000010D0                           209              INCLUDE "CONST.X68"             ; USER CONSTANTS
000010D0                           210  ; =============================================================================
000010D0                           211  ; TITLE    : USER CONSTANTS
000010D0                           212  ; AUTHOR   : ANTONI BURGUERA
000010D0                           213  ; HISTORY  : 05-JULY-2021 - CREATION
000010D0                           214  ; COMMENTS : * MOST OF THE CONSTANTS HELP IN PRODUCING A CLEAN CODE
000010D0                           215  ;              IN ACCORDANCE TO THE ASSIGNMENT SPECS, THOUGH THEIR USE IS
000010D0                           216  ;              NOT MANDATORY AS LONG AS THE ASSIGNMENT SPECS ARE FOLLOWED.
000010D0                           217  ;
000010D0                           218  ;            * THE UICOLORS ARE THE BASIC USER INTERFACE COLORS. USING THEM
000010D0                           219  ;              WILL LEAD TO A VISUALLY CONSISTENT USER INTERFACE.
000010D0                           220  ;
000010D0                           221  ;            * THE CHARACTER SIZES SPECIFY WIDTH AND HEIGHT IN PIXELS OF THE
000010D0                           222  ;              TEXT CHARACTERS. THIS SIZE DEPENDS ON THE SYSTEM (WINDOWS) FONTS
000010D0                           223  ;              AND CAN CHANGE FROM ONE COMPUTER TO ANOTHER. FEEL FREE TO ADAPT
000010D0                           224  ;              THEM TO YOUR OWN COMPUTER.
000010D0                           225  ;
000010D0                           226  ;            * CHARACTER SIZES ARE SPECIFIED AS AN EXPONENT AND THE SIZE ITSELF
000010D0                           227  ;              THE EXPONENT IS USEFUL TO MULTIPLY/DIVIDE, WHEN NECESSARY,
000010D0                           228  ;              USING SHIFTS. DEPENDING ON YOUR SYSTEM (WINDOWS) FONTS, CHAR
000010D0                           229  ;              SIZES MAY NOT BE POWER OF TWO. IF THIS IS THE CASE, DO YOUR BEST
000010D0                           230  ;              TO AVOID MULU AND DIVU.
000010D0                           231  ;
000010D0                           232  ;            * MOST OF THE GRD CONSTANTS ARE EXPRESSIONS TO EASE TESTING
000010D0                           233  ;              DIFFERENT RESOLUTIONS. IF TESTS WITH OTHER RESOLUTIONS ARE
000010D0                           234  ;              PERFORMED, TAKE INTO ACCOUNT THAT ALL EXPRESSIONS MUST EVALUATE
000010D0                           235  ;              TO INTEGER. IF THEY DON'T, UNEXPECTED RESULTS CAN HAPPEN.
000010D0                           236  ; =============================================================================
000010D0                           237  
000010D0                           238  ; --- UI COLORS ---------------------------------------------------------------
000010D0                           239  
000010D0  =00000000                240  CLRBLACK    EQU     $00000000               ; BLACK
000010D0  =00FFFFFF                241  CLRWHITE    EQU     $00FFFFFF               ; WHITE
000010D0  =00005500                242  CLRDKGRN    EQU     $00005500               ; DARK GREEN
000010D0  =00006600                243  CLRMDGRN    EQU     $00006600               ; MEDIUN GREEN
000010D0  =0000AA00                244  CLRLTGRN    EQU     $0000AA00               ; LIGHT GREEN
000010D0  =00FF0000                245  CLRLTBLU    EQU     $00FF0000               ; LIGHT BLUE
000010D0  =000000FF                246  CLRLTRED    EQU     $000000FF               ; LIGHT RED
000010D0                           247  
000010D0                           248  ; --- CHARACTER SIZES ---------------------------------------------------------
000010D0                           249  
000010D0  =00000004                250  CHRSHHEI    EQU     4                       ; CHARACTER HEIGHT AS EXPONENT OF 2
000010D0  =00000003                251  CHRSHWID    EQU     3                       ; CHARACTER WIDTH AS EXPONENT OF 2
000010D0  =00000010                252  CHRHEIGH    EQU     1<<CHRSHHEI             ; CHARACTER HEIGHT
000010D0  =00000008                253  CHRWIDTH    EQU     1<<CHRSHWID             ; CHARACTER WIDTH
000010D0                           254  
000010D0                           255  ; --- BUTTON ------------------------------------------------------------------
000010D0                           256  
000010D0  =00000004                257  BTNPENWD    EQU     4                       ; BUTTON LINE WIDTH
000010D0  =00005500                258  BTNPENCL    EQU     CLRDKGRN                ; BUTTON LINE COLOR
000010D0  =0000AA00                259  BTNSELCL    EQU     CLRLTGRN                ; BUTTON SELECTED FILL COLOR
000010D0  =00006600                260  BTNPRSCL    EQU     CLRMDGRN                ; BUTTON PRESSED FILL COLOR
000010D0  =00000006                261  BTNSZVDB    EQU     6                       ; SIZE (BYTES) OF VDB
000010D0                           262  
000010D0                           263  ; --- BUTTON LIST -------------------------------------------------------------
000010D0                           264  
000010D0  =0000000A                265  BTLMXVDB    EQU     10                      ; SIZE OF THE BUTTON LIST (ITEMS)
000010D0  =00000028                266  BTLVERSZ    EQU     40                      ; HEIGHT OF BUTTONS
000010D0  =0000000A                267  BTLVEMRG    EQU     10                      ; VERTICAL VISUAL MARGIN (TOP&BOT)
000010D0  =0000000A                268  BTLHOMRG    EQU     10                      ; HORIZONTAL VISUAL MARGIN (L & R)
000010D0                           269  
000010D0                           270  ; --- APPLICATION -------------------------------------------------------------
000010D0                           271  
000010D0  =00000000                272  GOLSPAUS    EQU     0                       ; PAUSED STATE
000010D0  =00000001                273  GOLSEXEC    EQU     1                       ; EXECUTION STATE
000010D0  =000000FA                274  GOLMAXGN    EQU     250                     ; MAXIMUM NUMBER OF GENERATIONS
000010D0                           275  
000010D0                           276  ; --- GRID --------------------------------------------------------------------
000010D0                           277  
000010D0  =00FF0000                278  GRDCOLP1    EQU     CLRLTBLU                ; PLAYER 1 COLOR
000010D0  =000000FF                279  GRDCOLP2    EQU     CLRLTRED                ; PLAYER 2 COLOR
000010D0  =00000006                280  GRDSHWID    EQU     6                       ; SHIFT TO ACHIEVE GRDWIDTH
000010D0  =00000005                281  GRDSHHEI    EQU     5                       ; SHIFT TO ACHIEVE GRDHEIGH
000010D0  =00000040                282  GRDWIDTH    EQU     1<<GRDSHWID             ; NUMBER OF GRID COLUMNS
000010D0  =00000020                283  GRDHEIGH    EQU     1<<GRDSHHEI             ; NUMBER OF ROWS
000010D0  =0000003F                284  GRDMSWID    EQU     GRDWIDTH-1              ; MASK TO GET X FROM GRID OFFSET
000010D0  =0000001F                285  GRDMSHEI    EQU     GRDHEIGH-1              ; MASK TO GET Y FROM GRID OFFSET
000010D0  =00000300                286  GRDPXWID    EQU     768                     ; GRID DISPLAY WIDTH (PIXELS)
000010D0  =00000180                287  GRDPXHEI    EQU     GRDHEIGH*GRDPXWID/GRDWIDTH ; GRID DISPLAY HEIGHT (PIXELS)
000010D0  =0000000C                288  GRDSZCEL    EQU     GRDPXWID/GRDWIDTH       ; GRID CELL SIZE (PIXELS)
000010D0  =0000006E                289  GRDVEMRG    EQU     3*BTLVEMRG+2*BTLVERSZ   ; TOP MARGIN (2 BUTTON ROWS)
000010D0  =00000010                290  GRDXOFF     EQU     (SCRWIDTH-GRDPXWID)/2   ; X OFFSETS TO DISPLAY CENTERED GRID
000010D0  =0000009E                291  GRDYOFF     EQU     (SCRHEIGH-GRDPXHEI+GRDVEMRG-BTLVEMRG)/2 ; Y OFFSET CENT. GRD
000010D0  =00000002                292  GRDSCP1X    EQU     GRDXOFF/CHRWIDTH        ; PLAYER 1 SCORE X (CHAR RESOL.)
000010D0  =00000009                293  GRDSCP1Y    EQU     GRDYOFF/CHRHEIGH        ; PLAYER 1 SCORE Y (CHAR RESOL.)
000010D0  =0000005E                294  GRDSCP2X    EQU     (GRDXOFF+GRDPXWID)/CHRWIDTH-4 ; PLAYER 2 SCORE X (CHAR RES.)
000010D0  =00000009                295  GRDSCP2Y    EQU     GRDYOFF/CHRHEIGH        ; PLAYER 2 SCORE Y (CHAR RESOL.)
000010D0  =00000030                296  GRDSCNGX    EQU     (SCRWIDTH/(CHRWIDTH*2))-2 ; NUM. GENER. X (CHAR RESOL.)
000010D0  =00000009                297  GRDSCNGY    EQU     GRDYOFF/CHRHEIGH        ; NUM. GENER. Y (CHAR RESOL.)
000010D0  =00000009                298  -------------------- end include --------------------
000010D0                           299              INCLUDE "UTIL.X68"              ; UTILITY CODE
000010D0                           300  ; =============================================================================
000010D0                           301  ; TITLE    : UTILITY SUBROUTINES
000010D0                           302  ; AUTHOR   : ANTONI BURGUERA
000010D0                           303  ; HISTORY  : 05-JULY-2021 - CREATION
000010D0                           304  ; COMMENTS : GENERAL PURPOSE SUBROUTINES.
000010D0                           305  ; =============================================================================
000010D0                           306  
000010D0                           307  ; -----------------------------------------------------------------------------
000010D0                           308  UTLINIT
000010D0                           309  ; INITIALIZES UTILITIES.
000010D0                           310  ; INPUT    : NONE
000010D0                           311  ; OUTPUT   : NONE
000010D0                           312  ; MODIFIES : NONE
000010D0                           313  ; -----------------------------------------------------------------------------
000010D0  4239 00001508            314              CLR.B   (UTLRNDIX)
000010D6  4E75                     315              RTS
000010D8                           316  
000010D8                           317  ; -----------------------------------------------------------------------------
000010D8                           318  UTLSTRLN
000010D8                           319  ; COMPUTES THE LENGTH OF A ZERO-TERMINATED STRING
000010D8                           320  ; INPUT    - A1 POINTER TO THE STRING
000010D8                           321  ; OUTPUT   - D0.W STRING LENGTH
000010D8                           322  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010D8                           323  ; -----------------------------------------------------------------------------
000010D8  2F09                     324              MOVE.L  A1,-(A7)
000010DA  4240                     325              CLR.W   D0
000010DC  4A19                     326  .LOOP       TST.B   (A1)+
000010DE  6700 0006                327              BEQ     .END
000010E2  5240                     328              ADDQ.W  #1,D0
000010E4  60F6                     329              BRA     .LOOP
000010E6  225F                     330  .END        MOVE.L  (A7)+,A1
000010E8  4E75                     331              RTS
000010EA                           332  
000010EA                           333  ; -----------------------------------------------------------------------------
000010EA                           334  UTLRAND
000010EA                           335  ; PROVIDES A PSEUDO-RANDOM COIN FLIP (RETURNS 1 OR 2)
000010EA                           336  ; INPUT    - NONE
000010EA                           337  ; OUTPUT   - D1.L RANDOM VALUE (ONLY BYTE)
000010EA                           338  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010EA                           339  ; -----------------------------------------------------------------------------
000010EA  2F08                     340              MOVE.L  A0,-(A7)
000010EC  41F9 00001108            341              LEA     .RANDVEC,A0
000010F2  4281                     342              CLR.L   D1
000010F4  1239 00001508            343              MOVE.B  (UTLRNDIX),D1
000010FA  1230 1800                344              MOVE.B  (A0,D1.L),D1
000010FE  5239 00001508            345              ADDQ.B  #1,(UTLRNDIX)
00001104  205F                     346              MOVE.L  (A7)+,A0
00001106  4E75                     347              RTS
00001108                           348  
00001108= 02 02 02 02 01 02 ...    349  .RANDVEC    DC.B    2, 2, 2, 2, 1, 2, 1, 2
00001110= 01 01 01 02 01 01 ...    350              DC.B    1, 1, 1, 2, 1, 1, 1, 2
00001118= 02 01 02 01 01 02 ...    351              DC.B    2, 1, 2, 1, 1, 2, 2, 1
00001120= 02 01 02 01 01 01 ...    352              DC.B    2, 1, 2, 1, 1, 1, 1, 2
00001128= 02 02 01 01 02 02 ...    353              DC.B    2, 2, 1, 1, 2, 2, 1, 1
00001130= 02 01 02 02 02 01 ...    354              DC.B    2, 1, 2, 2, 2, 1, 1, 1
00001138= 02 02 01 01 01 01 ...    355              DC.B    2, 2, 1, 1, 1, 1, 1, 2
00001140= 01 01 01 02 01 02 ...    356              DC.B    1, 1, 1, 2, 1, 2, 1, 2
00001148= 02 02 02 02 01 02 ...    357              DC.B    2, 2, 2, 2, 1, 2, 1, 2
00001150= 01 01 02 02 02 01 ...    358              DC.B    1, 1, 2, 2, 2, 1, 2, 1
00001158= 02 02 02 01 01 02 ...    359              DC.B    2, 2, 2, 1, 1, 2, 1, 1
00001160= 01 02 01 01 01 02 ...    360              DC.B    1, 2, 1, 1, 1, 2, 1, 2
00001168= 01 02 02 01 02 01 ...    361              DC.B    1, 2, 2, 1, 2, 1, 2, 2
00001170= 01 02 01 02 01 01 ...    362              DC.B    1, 2, 1, 2, 1, 1, 2, 1
00001178= 01 02 01 01 01 01 ...    363              DC.B    1, 2, 1, 1, 1, 1, 1, 1
00001180= 02 01 01 02 01 01 ...    364              DC.B    2, 1, 1, 2, 1, 1, 1, 2
00001188= 02 01 01 01 01 02 ...    365              DC.B    2, 1, 1, 1, 1, 2, 1, 1
00001190= 01 01 02 01 01 02 ...    366              DC.B    1, 1, 2, 1, 1, 2, 1, 2
00001198= 02 02 01 01 02 02 ...    367              DC.B    2, 2, 1, 1, 2, 2, 2, 2
000011A0= 01 01 02 01 02 02 ...    368              DC.B    1, 1, 2, 1, 2, 2, 1, 2
000011A8= 01 02 01 02 02 02 ...    369              DC.B    1, 2, 1, 2, 2, 2, 2, 1
000011B0= 01 01 02 02 01 01 ...    370              DC.B    1, 1, 2, 2, 1, 1, 2, 1
000011B8= 02 02 01 02 01 02 ...    371              DC.B    2, 2, 1, 2, 1, 2, 1, 1
000011C0= 02 01 02 01 01 02 ...    372              DC.B    2, 1, 2, 1, 1, 2, 1, 2
000011C8= 01 01 02 02 02 01 ...    373              DC.B    1, 1, 2, 2, 2, 1, 1, 1
000011D0= 01 01 02 02 01 02 ...    374              DC.B    1, 1, 2, 2, 1, 2, 1, 2
000011D8= 01 02 01 01 01 02 ...    375              DC.B    1, 2, 1, 1, 1, 2, 1, 1
000011E0= 02 01 01 02 01 02 ...    376              DC.B    2, 1, 1, 2, 1, 2, 2, 2
000011E8= 02 01 01 01 02 02 ...    377              DC.B    2, 1, 1, 1, 2, 2, 1, 1
000011F0= 02 02 02 01 02 02 ...    378              DC.B    2, 2, 2, 1, 2, 2, 1, 2
000011F8= 01 02 01 01 02 01 ...    379              DC.B    1, 2, 1, 1, 2, 1, 2, 2
00001200= 02 02 02 01 01 01 ...    380              DC.B    2, 2, 2, 1, 1, 1, 1, 2
00001200= 02 02 02 01 01 01 ...    381  -------------------- end include --------------------
00001208                           382              INCLUDE "BUTTON.X68"            ; BUTTON MANAGEMENT
00001208                           383  ; =============================================================================
00001208                           384  ; TITLE    : BUTTON MANAGEMENT
00001208                           385  ; AUTHOR   : ANTONI BURGUERA
00001208                           386  ; HISTORY  : 05-JULY-2021 - CREATION
00001208                           387  ; COMMENTS : * A BUTTON IS DEFINED BY A STATIC DATA BLOCK (SDB), WHICH DOES NOT
00001208                           388  ;              CHANGE OVER TIME, AND A VARIABLE DATA BLOCK (VDB), THAT CAN
00001208                           389  ;              CHANGE OVER TIME. CHANGES IN THE VDB ARE PRODUCED WHEN CALLING
00001208                           390  ;              SUBROUTINE BTNUPD.
00001208                           391  ;
00001208                           392  ;            * THE BUTTON SDB (CAN BE IN ROM) HAS THE FOLLOWING FIELDS. THE
00001208                           393  ;              NUMBER DENOTES THE OFFSET WITH RESPECT TO THE SDB START:
00001208                           394  ;
00001208                           395  ;                +0  - WORD - YTOP COORDINATE (PIXELS)
00001208                           396  ;                +2  - WORD - XLEFT COORDINATE (PIXELS)
00001208                           397  ;                +4  - WORD - HEIGHT (PIXELS)
00001208                           398  ;                +6  - WORD - WIDTH (PIXELS)
00001208                           399  ;                +8  - LONG - CALLBACK POINTER
00001208                           400  ;                +12 - BYTE STRING - ZERO TERMINATED STRING. TEXT TO SHOW.
00001208                           401  ;
00001208                           402  ;            * THE BUTTON VDB (MUST BE IN RAM) IS:
00001208                           403  ;
00001208                           404  ;                +0 - LONG - POINTER TO THE STATIC DATABLOCK
00001208                           405  ;                +4 - BYTE - STATUS WITH FORMAT XXXXXCPI WHERE:
00001208                           406  ;                            - I (BIT 0) - 1=MOUSE INSIDE, 0=MOUSE OUTSIDE
00001208                           407  ;                            - P (BIT 1) - 1=MOUSE PRESSED INSIDE
00001208                           408  ;                                          0=MOUSE NOT PRESSED INSIDE
00001208                           409  ;                            - C (BIT 2) - 1=MOUSE CLICKED INSIDE
00001208                           410  ;                                          0=MOUSE NOT CLICKED INSIDE
00001208                           411  ;                            NOTE THAT IF I=0 THEN P=C=0, IF I=1 AND P=0
00001208                           412  ;                            THEN C=0.
00001208                           413  ; =============================================================================
00001208                           414  
00001208                           415  ; -----------------------------------------------------------------------------
00001208                           416  BTNINIT
00001208                           417  ; INITIALIZES THE BUTTON BY:
00001208                           418  ;  * COPYING THE SDB POINTER INTO THE VDB.
00001208                           419  ;  * CLEARING THE STATUS BYTE.
00001208                           420  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001208                           421  ;            A1 - POINTER TO THE STATIC DATABLOCK
00001208                           422  ; OUTPUT   : NONE
00001208                           423  ; MODIFIES : NONE
00001208                           424  ; -----------------------------------------------------------------------------
00001208                           425  
00001208  48E7 FFC0                426              MOVEM.L D0-D7/A0-A1,-(A7)       ; Save content registers
0000120C                           427              
0000120C  2089                     428              MOVE.L  A1,(A0)                 ; Copy SDB pointer into VDB
0000120E  4228 0004                429              CLR.B   4(A0)                   ; CLEAR STATUS BYTE(VDB)                
00001212                           430  
00001212  4CDF 03FF                431              MOVEM.L (A7)+,D0-D7/A0-A1       ; Restore content resgiters
00001216                           432              
00001216  4E75                     433              RTS
00001218                           434  
00001218                           435  ; -----------------------------------------------------------------------------
00001218                           436  BTNUPD
00001218                           437  ; UPDATES THE BUTTON VDB AND EXECUTES THE CALLBACK IF REQUIRED
00001218                           438  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001218                           439  ; OUTPUT   : NONE
00001218                           440  ; MODIFIES : NONE
00001218                           441  ; -----------------------------------------------------------------------------
00001218                           442  
00001218  48E7 FFFE                443              MOVEM.L D0-D7/A0-A6,-(A7)       ; Save content registers
0000121C                           444              
0000121C  117C 0000 0004           445              MOVE.B   #0,4(A0)                ; CLEAR STATUS BYTE
00001222  2250                     446              MOVE.L  (A0),A1                 ; COPY @ SDB OF BUTTON
00001224                           447              
00001224                           448              ; COPY MOUSE POSITION
00001224  3039 00001502            449              MOVE.W  MOUY,D0
0000122A  3239 00001504            450              MOVE.W  MOUX,D1
00001230                           451                   
00001230                           452              ; GET BUTTON POSITION
00001230  3419                     453              MOVE.W  (A1)+,D2                ; TOP Y
00001232  3619                     454              MOVE.W  (A1)+,D3                ; LEFT X
00001234  3819                     455              MOVE.W  (A1)+,D4                ; HEIGHT
00001236  3A19                     456              MOVE.W  (A1)+,D5                ; WIDTH
00001238                           457              
00001238  B042                     458              CMP.W   D2,D0
0000123A  6E00 0006                459              BGT     .CHECKLEFTX
0000123E  6000 0066                460              BRA     .RT
00001242                           461              
00001242  B243                     462  .CHECKLEFTX CMP.W   D3,D1
00001244  6E00 0006                463              BGT     .CHECKLWY
00001248  6000 005C                464              BRA     .RT
0000124C                           465            
0000124C  3444                     466  .CHECKLWY   MOVE.W  D4,A2
0000124E  D4C2                     467              ADD.W   D2,A2
00001250  B04A                     468              CMP.W   A2,D0
00001252  6D00 0006                469              BLT     .CHECKRTX
00001256  6000 004E                470              BRA     .RT
0000125A                           471              
0000125A  3443                     472  .CHECKRTX   MOVE.W  D3,A2
0000125C  D4C5                     473              ADD.W   D5,A2
0000125E  B04A                     474              CMP.W   A2,D0
00001260  6D00 0006                475              BLT     .UPTI
00001264  6000 0030                476              BRA     .CLEARSTUS
00001268                           477  
00001268  117C 0001 0004           478  .UPTI       MOVE.B  #1,4(A0)
0000126E  0839 0000 00001506       479              BTST    #0,MOUVAL
00001276  6700 002E                480              BEQ     .RT
0000127A  117C 0003 0004           481              MOVE.B  #3,4(A0)
00001280  0839 0000 00001507       482              BTST    #0,MOUEDGE 
00001288  6700 001C                483              BEQ     .RT
0000128C  117C 0007 0004           484              MOVE.B  #7,4(A0)
00001292  6000 000A                485              BRA     .CALLBACK
00001296                           486  
00001296  4228 0004                487  .CLEARSTUS  CLR.B   4(A0)
0000129A  6000 000A                488              BRA     .RT
0000129E                           489  
0000129E  2451                     490  .CALLBACK   MOVE.L  (A1),A2
000012A0  4E92                     491              JSR     (A2)
000012A2  6000 0002                492              BRA     .RT           
000012A6                           493              
000012A6  4CDF 7FFF                494  .RT         MOVEM.L (A7)+,D0-D7/A0-A6       ; Restore content resgiters
000012AA                           495  
000012AA  4E75                     496              RTS
000012AC                           497  
000012AC                           498  ; -----------------------------------------------------------------------------
000012AC                           499  BTNPLOT
000012AC                           500  ; PLOTS THE BUTTON. A RECTANGLE IS DRAWN WITH THICKNESS BTNPENWD. THE CONTOUR
000012AC                           501  ; COLOR IS BTNPENCL. THE FILL COLOR IS BLACK IF THE MOUSE IS NOT INSIDE,
000012AC                           502  ; BTNSELCL IF THE MOUSE IS INSIDE BUT THE MOUSE BUTTON IS NOT PRESSED AND
000012AC                           503  ; BTNPRSCL IF THE MOUSE BUTTON IS PRESSED INSIDE.
000012AC                           504  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
000012AC                           505  ; OUTPUT   : NONE
000012AC                           506  ; MODIFIES : NONE
000012AC                           507  ; -----------------------------------------------------------------------------
000012AC                           508  
000012AC  48E7 FFE0                509              MOVEM.L D0-D7/A0-A2,-(A7)       ; Save content registers
000012B0                           510              
000012B0                           511              ; SET PEN COLOR
000012B0  103C 0050                512              MOVE.B  #80,D0
000012B4  223C 00005500            513              MOVE.L  #BTNPENCL,D1
000012BA  4E4F                     514              TRAP    #15
000012BC                           515              
000012BC                           516              ; SET PEN WIDTH/THICKNESS
000012BC  103C 005D                517              MOVE.B  #93,D0
000012C0  7204                     518              MOVE.L  #BTNPENWD,D1
000012C2  4E4F                     519              TRAP    #15
000012C4                           520              
000012C4                           521              ; Cambio de colores de los rectangulos
000012C4  0C28 0000 0004           522              CMP.B   #0,4(A0)
000012CA  6700 002A                523              BEQ     .MOUFUERA
000012CE  0810 0001                524              BTST.B  #1,(A0)
000012D2  6700 0012                525              BEQ     .MOUPRESIONADO 
000012D6                           526      
000012D6                           527              ;Mouse encima del rectangulo   
000012D6  223C 0000AA00            528              MOVE.L  #BTNSELCL,D1
000012DC  103C 0051                529              MOVE.B  #81,D0
000012E0  4E4F                     530              TRAP    #15
000012E2  6000 001A                531              BRA     .SALIR
000012E6                           532                
000012E6                           533  .MOUPRESIONADO            
000012E6                           534              ;Mouse presionando rectangulo
000012E6  223C 00006600            535              MOVE.L  #BTNPRSCL,D1
000012EC  103C 0051                536              MOVE.B  #81,D0
000012F0  4E4F                     537              TRAP    #15
000012F2  6000 000A                538              BRA     .SALIR
000012F6                           539              
000012F6                           540  .MOUFUERA
000012F6                           541              ;Mouse fuera del rectangulo            
000012F6  7200                     542              MOVE.L  #CLRBLACK,D1
000012F8  103C 0051                543              MOVE.B  #81,D0
000012FC  4E4F                     544              TRAP    #15
000012FE                           545              
000012FE                           546  .SALIR      
000012FE  2250                     547              MOVE.L  (A0),A1                 ; COPY @ SDB OF BUTTON
00001300  4281                     548              CLR.L   D1
00001302                           549              
00001302                           550              ; GET COORDINATES(UP)
00001302  3419                     551              MOVE.W  (A1)+,D2                ; UPPER Y
00001304  3219                     552              MOVE.W  (A1)+,D1                ; LEFT X
00001306                           553              
00001306                           554              ; GET HEIGHT
00001306  3819                     555              MOVE.W  (A1)+,D4
00001308  3F04                     556              MOVE.W  D4,-(A7)
0000130A                           557              
0000130A                           558              ; GET WIDTH 
0000130A  3619                     559              MOVE.W  (A1)+,D3
0000130C  3E03                     560              MOVE.W  D3,D7
0000130E                           561  
0000130E                           562              ; GET COORDINATES(LOW)
0000130E  D641                     563              ADD.W   D1,D3                   ; RIGHT X
00001310  3A02                     564              MOVE.W  D2,D5                   
00001312  DA44                     565              ADD.W   D4,D5                   ; LOWER Y
00001314  3805                     566              MOVE.W  D5,D4 
00001316                           567              
00001316                           568              ; DRAW BUTTON
00001316  103C 0057                569              MOVE.B  #87,D0
0000131A  4E4F                     570              TRAP    #15
0000131C                           571              
0000131C                           572              ; SET PEN COLOR
0000131C  3A01                     573              MOVE.W  D1,D5                   ; SAVE D1 CONTENT
0000131E  103C 0050                574              MOVE.B  #80,D0
00001322  223C 00FFFFFF            575              MOVE.L  #CLRWHITE,D1
00001328  4E4F                     576              TRAP    #15
0000132A  4281                     577              CLR.L   D1
0000132C  3205                     578              MOVE.W  D5,D1                   ; RESTORE D1
0000132E                           579              
0000132E                           580              ; GET & DRAW TEXT
0000132E  5849                     581              ADD.W   #4,A1
00001330                           582              ; TEXTWIDTH  = NUMCAR*CHRWIDTH ; CHARACTER WIDTH
00001330                           583              ; TEXTHEIGHT = CHRHEIGH        ; CHARACTER HEIGHT
00001330  4285                     584              CLR.L   D5
00001332  2450                     585              MOVE.L  (A0),A2
00001334  D4FC 000C                586              ADD.W   #12,A2
00001338  1C1A                     587              MOVE.B  (A2)+,D6
0000133A  BC7C 0000                588  .LOOP       CMP     #0,D6                   ; GET TEXT LENGTH            
0000133E  6700 0008                589              BEQ     .DONE
00001342  5245                     590              ADD.W   #1,D5
00001344  1C1A                     591              MOVE.B  (A2)+,D6                
00001346  60F2                     592              BRA     .LOOP
00001348  CAFC 0008                593  .DONE       MULU.W  #CHRWIDTH,D5
0000134C  9E45                     594              SUB.W   D5,D7                   ; WIDTH-TEXTWIDTH
0000134E  8EFC 0002                595              DIVU.W  #2,D7                   ; (WIDTH-TEXTWIDTH)/2
00001352  D247                     596              ADD.W   D7,D1                   ; LEFTX +(WIDTH-TEXTWIDTH)/2
00001354                           597  
00001354  381F                     598              MOVE.W  (A7)+,D4
00001356  0444 0010                599              SUB.W   #CHRHEIGH,D4            ; HEIGHT-TEXTHEIGHT
0000135A  88FC 0002                600              DIVU.W  #2,D4                   ; (HEIGHT-TEXTHEIGHT)/2
0000135E  D444                     601              ADD.W   D4,D2                   ; UPPERY+(HEIGHT-TEXTHEIGHT)/2
00001360                           602              
00001360  103C 005F                603              MOVE.B  #95,D0
00001364  4E4F                     604              TRAP    #15
00001366                           605              
00001366  4CDF 07FF                606              MOVEM.L (A7)+,D0-D7/A0-A2       ; Restore content resgiters
0000136A                           607              
0000136A  4E75                     608              RTS
0000136C                           609                      
0000136C                           610  
0000136C                           611  
0000136C                           612  
0000136C                           613  
0000136C                           614  
0000136C                           615  
0000136C                           616  
0000136C                           617  
0000136C                           618  
0000136C                           619  
0000136C                           620  
0000136C                           621  
0000136C                           622  
0000136C                           623  
0000136C                           624  -------------------- end include --------------------
0000136C                           625              INCLUDE "BTNLIST.X68"           ; BUTTON LIST MANAGEMENT
0000136C                           626  ; =============================================================================
0000136C                           627  ; TITLE    : BUTTON LIST MANAGEMENT
0000136C                           628  ; AUTHOR   : ANTONI BURGUERA
0000136C                           629  ; HISTORY  : 05-JULY-2021 - CREATION
0000136C                           630  ; COMMENTS : * ALLOWS ADDING, UPDATING AND PLOTTING A LIST OF BUTTONS. ALLOWS
0000136C                           631  ;              REMOVING THEM ALL, BUT NOT INDIVIDUALLY.
0000136C                           632  ;
0000136C                           633  ;            * THE LIST OF BUTTONS IS STORED AS A LIST OF BUTTON'S VDB. THIS
0000136C                           634  ;              LIST IS STORED AT BTLDATA.
0000136C                           635  ;
0000136C                           636  ;            * THE LIST OF VBD IS BUILT ASSUMING A MAXIMUM OF BTLMXVDB BUTTONS
0000136C                           637  ;              AND A SIZE OF BTNSZVDB BYTES FOR EACH VDB.
0000136C                           638  ; =============================================================================
0000136C                           639  
0000136C                           640  ; -----------------------------------------------------------------------------
0000136C                           641  BTLINIT
0000136C                           642  ; INITIALIZES BUTTON LIST BY SETTING ALL THE POINTERS TO STATIC DATA BLOCKS
0000136C                           643  ; TO $FFFFFFFF.
0000136C                           644  ; INPUT    : NONE
0000136C                           645  ; OUTPUT   : NONE
0000136C                           646  ; MODIFIES : NONE
0000136C                           647  ; -----------------------------------------------------------------------------
0000136C  48E7 8080                648              MOVEM.L D0/A0,-(A7)
00001370  41F9 0000150A            649              LEA     BTLDATA,A0
00001376  303C 0009                650              MOVE.W  #BTLMXVDB-1,D0          ; NUM ITERATIONS
0000137A  20BC FFFFFFFF            651  .LOOP       MOVE.L  #$FFFFFFFF,(A0)         ; MARK SLOT AS EMPTY
00001380  5C88                     652              ADD.L   #BTNSZVDB,A0            ; GO TO NEXT SLOT
00001382  51C8 FFF6                653              DBRA.W  D0,.LOOP                ; LOOP FOR ALL SLOTS
00001386  4CDF 0101                654              MOVEM.L (A7)+,D0/A0
0000138A  4E75                     655              RTS
0000138C                           656  
0000138C                           657  ; -----------------------------------------------------------------------------
0000138C  =0000136C                658  BTLCLEAR    EQU     BTLINIT
0000138C                           659  ; CLEARS THE BUTTON LIST. SAME AS BTLINIT.
0000138C                           660  ; INPUT    : NONE
0000138C                           661  ; OUTPUT   : NONE
0000138C                           662  ; MODIFIES : NONE
0000138C                           663  ; -----------------------------------------------------------------------------
0000138C                           664  
0000138C                           665  ; -----------------------------------------------------------------------------
0000138C                           666  BTLADD
0000138C                           667  ; ADDS A NEW BUTTON INTO THE BUTTON LIST AND INITS IT.
0000138C                           668  ; INPUT    : A1 - POINTER TO THE BUTTON SDB
0000138C                           669  ; OUTPUT   : NONE
0000138C                           670  ; MODIFIES : NONE
0000138C                           671  ; -----------------------------------------------------------------------------
0000138C  48E7 8080                672              MOVEM.L A0/D0,-(A7)
00001390                           673  
00001390                           674              ; SEARCH FOR AN EMPTY SLOT
00001390                           675  
00001390  41F9 0000150A            676              LEA     BTLDATA,A0
00001396  303C 0009                677              MOVE.W  #BTLMXVDB-1,D0
0000139A  0C90 FFFFFFFF            678  .LOOP       CMP.L   #$FFFFFFFF,(A0)
000013A0  6700 000E                679              BEQ     .FOUND
000013A4  5C88                     680              ADD.L   #BTNSZVDB,A0
000013A6  51C8 FFF2                681              DBRA.W  D0,.LOOP
000013AA                           682  
000013AA                           683              ; NO SLOT? DO NOTHING
000013AA                           684  
000013AA  4CDF 0101                685  .END        MOVEM.L (A7)+,A0/D0
000013AE  4E75                     686              RTS
000013B0                           687  
000013B0                           688              ; SLOT FOUND? PLACE THE BUTTON THERE BY CALLING BTNINIT
000013B0                           689  
000013B0  4EB8 1208                690  .FOUND      JSR     BTNINIT
000013B4  60F4                     691              BRA     .END
000013B6                           692  
000013B6                           693  ; -----------------------------------------------------------------------------
000013B6                           694  BTLUPD
000013B6                           695  ; CALLS BTNUPD FOR ALL THE BUTTONS IN THE BUTTON LIST.
000013B6                           696  ; INPUT    : NONE
000013B6                           697  ; OUTPUT   : NONE
000013B6                           698  ; MODIFIES : NONE
000013B6                           699  ; -----------------------------------------------------------------------------
000013B6                           700  
000013B6  48E7 8080                701              MOVEM.L A0/D0,-(A7)
000013BA                           702  
000013BA                           703              ; TRAVERSE THE LIST
000013BA                           704  
000013BA  41F9 0000150A            705              LEA     BTLDATA,A0
000013C0  303C 0009                706              MOVE.W  #BTLMXVDB-1,D0
000013C4  0C90 FFFFFFFF            707  .LOOP       CMP.L   #$FFFFFFFF,(A0)
000013CA  6700 000C                708              BEQ     .DONE
000013CE                           709  
000013CE                           710              ; UPDATE EACH BUTTON
000013CE                           711  
000013CE  4EB8 1218                712              JSR     BTNUPD
000013D2                           713  
000013D2                           714              ; GO TO THE NEXT BUTTON
000013D2                           715  
000013D2  5C88                     716              ADD.L   #BTNSZVDB,A0
000013D4  51C8 FFEE                717              DBRA.W  D0,.LOOP
000013D8                           718  
000013D8  4CDF 0101                719  .DONE       MOVEM.L (A7)+,A0/D0
000013DC  4E75                     720              RTS
000013DE                           721  
000013DE                           722  
000013DE                           723  ; -----------------------------------------------------------------------------
000013DE                           724  BTLPLOT
000013DE                           725  ; CALLS BTNPLOT FOR ALL THE BUTTONS IN THE BUTTON LIST.
000013DE                           726  ; INPUT    : NONE
000013DE                           727  ; OUTPUT   : NONE
000013DE                           728  ; MODIFIES : NONE
000013DE                           729  ; -----------------------------------------------------------------------------
000013DE                           730  
000013DE                           731  ; TODO : PLACE YOUR CODE HERE
000013DE                           732              ; JSR BTLUPD
000013DE                           733              ; RTS
000013DE  48E7 8080                734              MOVEM.L A0/D0,-(A7)             ; Save content registers
000013E2                           735              
000013E2  41F9 0000150A            736              LEA     BTLDATA,A0              ; @ OF THE BUTTONS
000013E8  303C 0009                737              MOVE.W  #BTLMXVDB-1,D0
000013EC  0C90 FFFFFFFF            738  .LOOP       CMP.L   #$FFFFFFFF,(A0)         ; Until end of list
000013F2  6700 000C                739              BEQ     .DONE
000013F6                           740  
000013F6  4EB8 12AC                741              JSR     BTNPLOT                 ; Calls BTNUPD
000013FA                           742  
000013FA  5C88                     743              ADD.L   #BTNSZVDB,A0            ; Next button
000013FC  51C8 FFEE                744              DBRA.W  D0,.LOOP
00001400                           745              
00001400  4CDF 0101                746  .DONE       MOVEM.L (A7)+,A0/D0             ; Restore content resgiters
00001404                           747              
00001404  4E75                     748              RTS
00001406                           749  
00001406                           750              
00001406                           751  
00001406                           752  
00001406                           753  
00001406                           754  
00001406                           755  
00001406                           756  
00001406                           757  
00001406                           758  
00001406                           759  
00001406                           760  -------------------- end include --------------------
00001406                           761  
00001406                           762  ; --- INITIALIZE --------------------------------------------------------------
00001406                           763  
00001406  4EB8 1000                764  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM CODE
0000140A  4EB9 00001484            765              JSR     UIINIT                  ; INITIALIZE THE USER INTERFACE
00001410                           766  
00001410                           767  ; --- UPDATE ------------------------------------------------------------------
00001410                           768  
00001410  4E41                     769  .LOOP       TRAP    #MOUTRAP                ; READ MOUSE
00001412  4EB8 13B6                770              JSR     BTLUPD                  ; UPDATE THE USER INTERFACE
00001416                           771  
00001416                           772  ; --- PLOT --------------------------------------------------------------------
00001416                           773  
00001416  4EB8 13DE                774              JSR     BTLPLOT                 ; PLOT THE USER INTERFACE
0000141A  4E40                     775              TRAP    #SCRTRAP                ; SHOW GRAPHICS
0000141C  60F2                     776              BRA     .LOOP
0000141E  FFFF FFFF                777              SIMHALT
00001422                           778  
00001422                           779  ; --- CALLBACKS ---------------------------------------------------------------
00001422                           780  
00001422                           781  ; -----------------------------------------------------------------------------
00001422                           782  CALP1WIN
00001422                           783  ; SUBROUTINE (USED AS CALLBACK) THAT PLAYS THE SOUND "PLAYER 1 WINS"
00001422                           784  ; INPUT    : NONE
00001422                           785  ; OUTPUT   : NONE
00001422                           786  ; MODIFIES : NONE
00001422                           787  ; -----------------------------------------------------------------------------
00001422  48E7 8040                788              MOVEM.L D0/A1,-(A7)
00001426  43F9 00001438            789              LEA     .FNAME,A1
0000142C  103C 0046                790              MOVE.B  #70,D0
00001430  4E4F                     791              TRAP    #15
00001432  4CDF 0201                792              MOVEM.L (A7)+,D0/A1
00001436  4E75                     793              RTS
00001438= 50 31 57 49 4E 53 ...    794  .FNAME      DC.B    'P1WINS.WAV',0
00001444                           795              DS.W    0
00001444                           796  
00001444                           797  ; -----------------------------------------------------------------------------
00001444                           798  CALP2WIN
00001444                           799  ; SUBROUTINE (USED AS CALLBACK) THAT PLAYS THE SOUND "PLAYER 2 WINS"
00001444                           800  ; INPUT    : NONE
00001444                           801  ; OUTPUT   : NONE
00001444                           802  ; MODIFIES : NONE
00001444                           803  ; -----------------------------------------------------------------------------
00001444  48E7 8040                804              MOVEM.L D0/A1,-(A7)
00001448  43F9 0000145A            805              LEA     .FNAME,A1
0000144E  103C 0046                806              MOVE.B  #70,D0
00001452  4E4F                     807              TRAP    #15
00001454  4CDF 0201                808              MOVEM.L (A7)+,D0/A1
00001458  4E75                     809              RTS
0000145A= 50 32 57 49 4E 53 ...    810  .FNAME      DC.B    'P2WINS.WAV',0
00001466                           811              DS.W    0
00001466                           812  
00001466                           813  ; -----------------------------------------------------------------------------
00001466                           814  CALTIE
00001466                           815  ; SUBROUTINE (USED AS CALLBACK) THAT PLAYS A SOUND SIMBOLIZING A TIE (SORT OF)
00001466                           816  ; INPUT    : NONE
00001466                           817  ; OUTPUT   : NONE
00001466                           818  ; MODIFIES : NONE
00001466                           819  ; -----------------------------------------------------------------------------
00001466  48E7 8040                820              MOVEM.L D0/A1,-(A7)
0000146A  43F9 0000147C            821              LEA     .FNAME,A1
00001470  103C 0046                822              MOVE.B  #70,D0
00001474  4E4F                     823              TRAP    #15
00001476  4CDF 0201                824              MOVEM.L (A7)+,D0/A1
0000147A  4E75                     825              RTS
0000147C= 54 49 45 2E 57 41 ...    826  .FNAME      DC.B    'TIE.WAV',0
00001484                           827              DS.W    0
00001484                           828  
00001484                           829  ; --- SUBROUTINES -------------------------------------------------------------
00001484                           830  
00001484                           831  ; -----------------------------------------------------------------------------
00001484                           832  UIINIT
00001484                           833  ; INITS THE USER INTERFACE BY INSERTINT THE THREE BUTTONS INTO THE BUTTON LIST
00001484                           834  ; INPUT    : NONE
00001484                           835  ; OUTPUT   : NONE
00001484                           836  ; MODIFIES : NONE
00001484                           837  ; -----------------------------------------------------------------------------
00001484  48E7 00C0                838              MOVEM.L A0/A1,-(A7)
00001488  4EB8 136C                839              JSR     BTLINIT
0000148C  41F9 000014AA            840              LEA     .SDBLIST,A0
00001492  2258                     841  .LOOP       MOVE.L  (A0)+,A1
00001494  B3FC FFFFFFFF            842              CMP.L   #-1,A1
0000149A  6700 0008                843              BEQ     .END
0000149E  4EB8 138C                844              JSR     BTLADD
000014A2  60EE                     845              BRA     .LOOP
000014A4  4CDF 0300                846  .END        MOVEM.L (A7)+,A0/A1
000014A8  4E75                     847              RTS
000014AA= 000014BA 000014D6 ...    848  .SDBLIST    DC.L    SDBP1W,SDBP2W,SDBTIE,-1
000014BA                           849  
000014BA                           850  ; --- BUTTONS STATIC DATA BLOCKS ----------------------------------------------
000014BA                           851  
000014BA= 00E6                     852  SDBP1W      DC.W    (SCRHEIGH-3*BTLVERSZ-2*BTLVEMRG)/2 ; YTOP COORDINATE
000014BC= 012C                     853              DC.W    (SCRWIDTH-200)/2        ; XLEFT COORDINATE
000014BE= 0028                     854              DC.W    BTLVERSZ                ; HEIGHT
000014C0= 00C8                     855              DC.W    200                     ; WIDTH
000014C2= 00001422                 856              DC.L    CALP1WIN                ; CALLBACK
000014C6= 50 4C 41 59 45 52 ...    857              DC.B    'PLAYER 1 WINS!',0      ; BUTTON TEXT
000014D5                           858  
000014D6= 0118                     859  SDBP2W      DC.W    (SCRHEIGH-BTLVERSZ)/2   ; YTOP COORDINATE
000014D8= 012C                     860              DC.W    (SCRWIDTH-200)/2        ; XLEFT COORDINATE
000014DA= 0028                     861              DC.W    BTLVERSZ                ; HEIGHT
000014DC= 00C8                     862              DC.W    200                     ; WIDTH
000014DE= 00001444                 863              DC.L    CALP2WIN                ; CALLBACK
000014E2= 50 4C 41 59 45 52 ...    864              DC.B    'PLAYER 2 WINS!',0      ; BUTTON TEXT
000014F1                           865  
000014F2= 014A                     866  SDBTIE      DC.W    (SCRHEIGH+BTLVERSZ)/2+BTLVEMRG ; YTOP COORDINATE
000014F4= 012C                     867              DC.W    (SCRWIDTH-200)/2        ; XLEFT COORDINATE
000014F6= 0028                     868              DC.W    BTLVERSZ                ; HEIGHT
000014F8= 00C8                     869              DC.W    200                     ; WIDTH
000014FA= 00001466                 870              DC.L    CALTIE                  ; CALLBACK
000014FE= 54 49 45 00              871              DC.B    'TIE',0                 ; BUTTON TEXT
00001502                           872  
00001502                           873  ; --- VARIABLES ---------------------------------------------------------------
00001502                           874  
00001502                           875              INCLUDE "SYSVAR.X68"            ; SYSTEM VARIABLES
00001502                           876  ; =============================================================================
00001502                           877  ; TITLE    : SYSTEM VARS
00001502                           878  ; AUTHOR   : ANTONI BURGUERA
00001502                           879  ; HISTORY  : 05-JULY-2021 - CREATION
00001502                           880  ; COMMENTS : * ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001502                           881  ;              THEY MUST NOT BE IN PROTECTED MEMORY.
00001502                           882  ;
00001502                           883  ;            * SINCE SOME SUBROUTINES TAKE ADVANTAGE OF THE ORDER IN WHICH
00001502                           884  ;              THE VARIABLES ARE IN MEMORY, THEIR ORDER SHOULD NOT BE ALTERED.
00001502                           885  ; =============================================================================
00001502                           886  
00001502                           887  ; --- MOUSE RELATED VARIABLES -------------------------------------------------
00001502                           888  
00001502                           889  MOUY        DS.W    1                       ; MOUSE Y COORDINATE
00001504                           890  MOUX        DS.W    1                       ; MOUSE X COORDINATE
00001506                           891  MOUVAL      DS.B    1                       ; CURRENT MOUSE BUTTON STATUS
00001507                           892  MOUEDGE     DS.B    1                       ; RISING EDGES IN MOUVAL
00001508                           893              DS.W    0
00001508                           894  -------------------- end include --------------------
00001508                           895              INCLUDE "VAR.X68"               ; USER VARIABLES
00001508                           896  ; =============================================================================
00001508                           897  ; TITLE    : USER VARS
00001508                           898  ; AUTHOR   : ANTONI BURGUERA
00001508                           899  ; HISTORY  : 05-JULY-2021 - CREATION
00001508                           900  ; COMMENTS : SEE THE CORRESPONDING FILES (UTIL.X68, BTNLIST.X68, GRID.X68 OR
00001508                           901  ;            GOL.X68) TO LEARN ABOUT THE MEANING OF THESE VARIABLES.
00001508                           902  ; =============================================================================
00001508                           903  
00001508                           904  ; --- UTILITY VARS ------------------------------------------------------------
00001508                           905  
00001508                           906  UTLRNDIX    DS.B    1                       ; RANDOM GENERATOR INDEX
0000150A                           907              DS.W    0
0000150A                           908  
0000150A                           909  ; --- BUTTON LIST -------------------------------------------------------------
0000150A                           910  
0000150A                           911  BTLDATA     DS.B    BTLMXVDB*BTNSZVDB       ; BUTTONS VDB STORAGE
00001546                           912              DS.W    0
00001546                           913  
00001546                           914  ; --- GRID --------------------------------------------------------------------
00001546                           915  
00001546                           916  GRDSRC      DS.L    1                       ; SOURCE MATRIX POINTER
0000154A                           917  GRDDST      DS.L    1                       ; DESTINATION MATRIX POINTER
0000154E                           918  GRDMATR0    DS.B    GRDWIDTH*GRDHEIGH       ; ONE OF THE GRIDS...
00001D4E                           919  GRDMATR1    DS.B    GRDWIDTH*GRDHEIGH       ; THE OTHER GRID
0000254E                           920  GRDNPLR1    DS.W    1                       ; NUMBER OF PLAYER 1 CELLS
00002550                           921  GRDNPLR2    DS.W    1                       ; NUMBER OF PLAYER 2 CELLS
00002552                           922  GRDNGEN     DS.W    1                       ; NUMOER OF GENERATIONS
00002554                           923  
00002554                           924  ; --- APPLICATION -------------------------------------------------------------
00002554                           925  
00002554                           926  GOLSTATE    DS.B    1                       ; APPLICATION STATE
00002556                           927              DS.W    0
00002556                           928  -------------------- end include --------------------
00002556                           929  
00002556                           930              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BTLADD              138C
BTLADD:END          13AA
BTLADD:FOUND        13B0
BTLADD:LOOP         139A
BTLCLEAR            136C
BTLDATA             150A
BTLHOMRG            A
BTLINIT             136C
BTLINIT:LOOP        137A
BTLMXVDB            A
BTLPLOT             13DE
BTLPLOT:DONE        1400
BTLPLOT:LOOP        13EC
BTLUPD              13B6
BTLUPD:DONE         13D8
BTLUPD:LOOP         13C4
BTLVEMRG            A
BTLVERSZ            28
BTNINIT             1208
BTNPENCL            5500
BTNPENWD            4
BTNPLOT             12AC
BTNPLOT:DONE        1348
BTNPLOT:LOOP        133A
BTNPLOT:MOUFUERA    12F6
BTNPLOT:MOUPRESIONADO  12E6
BTNPLOT:SALIR       12FE
BTNPRSCL            6600
BTNSELCL            AA00
BTNSZVDB            6
BTNUPD              1218
BTNUPD:CALLBACK     129E
BTNUPD:CHECKLEFTX   1242
BTNUPD:CHECKLWY     124C
BTNUPD:CHECKRTX     125A
BTNUPD:CLEARSTUS    1296
BTNUPD:RT           12A6
BTNUPD:UPTI         1268
CALP1WIN            1422
CALP1WIN:FNAME      1438
CALP2WIN            1444
CALP2WIN:FNAME      145A
CALTIE              1466
CALTIE:FNAME        147C
CHRHEIGH            10
CHRSHHEI            4
CHRSHWID            3
CHRWIDTH            8
CLRBLACK            0
CLRDKGRN            5500
CLRLTBLU            FF0000
CLRLTGRN            AA00
CLRLTRED            FF
CLRMDGRN            6600
CLRWHITE            FFFFFF
GOLMAXGN            FA
GOLSEXEC            1
GOLSPAUS            0
GOLSTATE            2554
GRDCOLP1            FF0000
GRDCOLP2            FF
GRDDST              154A
GRDHEIGH            20
GRDMATR0            154E
GRDMATR1            1D4E
GRDMSHEI            1F
GRDMSWID            3F
GRDNGEN             2552
GRDNPLR1            254E
GRDNPLR2            2550
GRDPXHEI            180
GRDPXWID            300
GRDSCNGX            30
GRDSCNGY            9
GRDSCP1X            2
GRDSCP1Y            9
GRDSCP2X            5E
GRDSCP2Y            9
GRDSHHEI            5
GRDSHWID            6
GRDSRC              1546
GRDSZCEL            C
GRDVEMRG            6E
GRDWIDTH            40
GRDXOFF             10
GRDYOFF             9E
MOUBITLF            0
MOUBITMD            2
MOUBITRT            1
MOUEDGE             1507
MOUINIT             1020
MOUMSKLF            1
MOUMSKMD            4
MOUMSKRT            2
MOUREAD             1054
MOUTRAP             1
MOUVAL              1506
MOUX                1504
MOUY                1502
SCRHEIGH            258
SCRINIT             107E
SCRTRAP             0
SCRUPD              10B6
SCRWIDTH            320
SDBP1W              14BA
SDBP2W              14D6
SDBTIE              14F2
START               1406
START:LOOP          1410
SYSINIT             1000
UIINIT              1484
UIINIT:END          14A4
UIINIT:LOOP         1492
UIINIT:SDBLIST      14AA
UTLINIT             10D0
UTLRAND             10EA
UTLRAND:RANDVEC     1108
UTLRNDIX            1508
UTLSTRLN            10D8
UTLSTRLN:END        10E6
UTLSTRLN:LOOP       10DC
