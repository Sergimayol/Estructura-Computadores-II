00001854 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 09/01/2022 22:56:12

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : GAME OF LIFE APPLICATION
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; CREATION : 05-JULY-2021
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; TITLE    : SYSTEM CONSTANTS
00001000                            14  ; AUTHOR   : ANTONI BURGUERA
00001000                            15  ; HISTORY  : 05-JULY-2021 - CREATION
00001000                            16  ; COMMENTS : * MOUVAL AND MOUEDGE FORMAT IS AS FOLLOWS:
00001000                            17  ;              +---+---+---+---+---+---+---+---+
00001000                            18  ;              | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            19  ;              +---+---+---+---+---+---+---+---+
00001000                            20  ;              \-------------------/ |   |   |
00001000                            21  ;                        |           |   |   +-- LEFT MOUSE BUTTON
00001000                            22  ;                        |           |   +------ RIGHT MOUSE BUTTON
00001000                            23  ;                        |           +---------- CENTRAL MOUSE BUTTON
00001000                            24  ;                        +---------------------- 0
00001000                            25  ;              A "1" IN ONE OF THESE BITS IN MOUVAL MEANS "BUTTON PRESSED".
00001000                            26  ;              A "0" IN ONE OF THESE BITS IN MOUVAL MEANS "BUTTON NOT PRESSED".
00001000                            27  ;              A "1" IN ONE OF THESE BITS IN MOUEDGE MEANS "BUTTON CLICKED".
00001000                            28  ;              A "0" IN ONE OF THESE BITS IN MOUEDGE MEANS "BUTTON NOT CLICKED".
00001000                            29  ;              A "CLICK" IS A CHANGE FROM 0 TO 1 IN SUBSEQUENT UPDATES.
00001000                            30  ;              BOTH MOUVEL AND MOUEDGE ARE UPDATED BY TRAP #MOUTRAP
00001000                            31  ;
00001000                            32  ;            * MASKS AND BIT POSITIONS ARE DEFINED TO EASE MOUSE ACCESS. FOR
00001000                            33  ;              EXAMPLE, ONE CAN DO THE FOLLOWING TO CHECK IF THE LEFT BUTTON
00001000                            34  ;              IS PRESSED:
00001000                            35  ;
00001000                            36  ;              BTST.L #MOUBITLF,(MOUVAL)
00001000                            37  ;              BNE ...
00001000                            38  ;
00001000                            39  ;              ALTERNATIVELY, ONE CAN ALSO DO THE FOLLOWING DEPENDING ON THE
00001000                            40  ;              CONTEXT:
00001000                            41  ;
00001000                            42  ;              MOVE.B  (MOUVAL),D0
00001000                            43  ;              AND.B   #MOUMSKLF,D0
00001000                            44  ;              BNE ...
00001000                            45  ; =============================================================================
00001000                            46  
00001000                            47  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            48  
00001000  =00000000                 49  SCRTRAP     EQU     0                       ; SCREEN REFRESH TRAP NUMBER
00001000  =00000320                 50  SCRWIDTH    EQU     800                     ; SCREEN WIDTH (PIXELS)
00001000  =00000258                 51  SCRHEIGH    EQU     600                     ; SCREEN HEIGHT (PIXELS)
00001000                            52  
00001000                            53  ; --- MOUSE RELATED CONSTANTS -------------------------------------------------
00001000                            54  
00001000  =00000001                 55  MOUTRAP     EQU     1                       ; MOUSE QUERY TRAP NUMBER
00001000  =00000001                 56  MOUMSKLF    EQU     %00000001               ; LEFT MOUSE BUTTON MASK
00001000  =00000002                 57  MOUMSKRT    EQU     %00000010               ; RIGHT MOUSE BUTTON MASK
00001000  =00000004                 58  MOUMSKMD    EQU     %00000100               ; MIDDLE MOUSE BUTTON MASL
00001000  =00000000                 59  MOUBITLF    EQU     0                       ; LEFT MOUSE BUTTON BIT POSITION
00001000  =00000001                 60  MOUBITRT    EQU     1                       ; RIGHT MOUSE BUTTON BIT POSITION
00001000  =00000002                 61  MOUBITMD    EQU     2                       ; MIDDLE MOUSE BUTTON BIT POSITION
00001000  =00000002                 62  -------------------- end include --------------------
00001000                            63              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            64  ; =============================================================================
00001000                            65  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            66  ; AUTHOR   : ANTONI BURGUERA
00001000                            67  ; HISTORY  : 05-JULY-2021 - CREATION
00001000                            68  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                            69  ;            - SYS : GENERIC.
00001000                            70  ;            - SCR : SCREEN MANAGEMENT.
00001000                            71  ;            - MOU : MOUSE MANAGEMENT
00001000                            72  ;            THE FORMAT OF MOUVAL AND MOUEDGE IS DESCRIBED IN SYSCONST.
00001000                            73  ; =============================================================================
00001000                            74  
00001000                            75  ; -----------------------------------------------------------------------------
00001000                            76  SYSINIT
00001000                            77  ; INITIALIZES THE SYSTEM AS FOLLOWS:
00001000                            78  ; * DISABLES INTERRUPTS
00001000                            79  ; * CALLS SCRINIT
00001000                            80  ; * CALLS MOUINIT
00001000                            81  ; * ENABLES SIMULATOR EXCEPTION PROCESSING
00001000                            82  ; * SWITCHES TO USER
00001000                            83  ; INPUT    - NONE
00001000                            84  ; OUTPUT   - NONE
00001000                            85  ; MODIFIES - NONE
00001000                            86  ; NOTE     - NOTE THAT INTERRUPTS REMAIN DISABLED AFTER THIS SUBROUTINE
00001000                            87  ; -----------------------------------------------------------------------------
00001000                            88              
00001000                            89              
00001000  007C 0700                 90              OR.W    #$0700,SR               ; Disables interrupts
00001004  4EB9 0000107E             91              JSR     SCRINIT                 ; Calls to SCRINIT
0000100A  4EB9 00001020             92              JSR     MOUINIT                 ; Calls to MOUINIT
00001010  103C 0020                 93              MOVE.B  #32,D0                  ; Enable exception processing
00001014  123C 0005                 94              MOVE.B  #5,D1                   
00001018  4E4F                      95              TRAP    #15                      
0000101A  46FC 2000                 96              MOVE    #$2000,SR               ; Switches to user 
0000101E                            97              
0000101E  4E75                      98              RTS
00001020                            99  
00001020                           100  ; =============================================================================
00001020                           101  ; MOUSE MANAGEMENT (SYSTEM CODE)
00001020                           102  ; =============================================================================
00001020                           103  
00001020                           104  ; -----------------------------------------------------------------------------
00001020                           105  MOUINIT
00001020                           106  ; INITIALIZES MOUSE AS FOLLOWS:
00001020                           107  ; * STORES CURRENT MOUSE POSITION AND BUTTON STATUS INTO MOUY, MOUX AND MOUVAL
00001020                           108  ; * CLEARS MOUEDGE
00001020                           109  ; * INSTALLS MOUREAD INTO TRAP #MOUTRAP
00001020                           110  ; INPUT    - NONE
00001020                           111  ; OUTPUT   - NONE
00001020                           112  ; MODIFIES - ALL REGISTERS CAN BE MODIFIED
00001020                           113  ; -----------------------------------------------------------------------------
00001020                           114  
00001020  103C 003D                115              MOVE.B  #61, D0
00001024  123C 0000                116              MOVE.B  #0, D1
00001028  4E4F                     117              TRAP    #15
0000102A  C0BC 00000007            118              AND.L   #7, D0
00001030  13C0 00001872            119              MOVE.B  D0, MOUVAL
00001036  33C1 00001870            120              MOVE.W  D1, MOUX
0000103C  4841                     121              SWAP    D1
0000103E  33C1 0000186E            122              MOVE.W  D1, MOUY            
00001044  4239 00001873            123              CLR.B   MOUEDGE                 ; clears MOUEDGE
0000104A  21FC 00001054 0084       124              MOVE.L  #MOUREAD,($80+MOUTRAP*4) ;Installs mouread into moutrap
00001052                           125              
00001052  4E75                     126              RTS
00001054                           127  
00001054                           128  ; -----------------------------------------------------------------------------
00001054                           129  MOUREAD
00001054                           130  ; MOUSE READING TRAP SERVICE ROUTINE. IT DOES THE FOLLOWING:
00001054                           131  ; * STORES CURRENT MOUSE POSITION INTO MOUY AND MOUX.
00001054                           132  ; * STORES CURRENT BUTTON STATUS INTO MOUVAL
00001054                           133  ; * COMPUTES AND STORES MOUEDGE
00001054                           134  ; INPUT    - NONE
00001054                           135  ; OUTPUT   - NONE
00001054                           136  ; MODIFIES - NONE
00001054                           137  ; -----------------------------------------------------------------------------
00001054                           138                         
00001054  303C 003D                139              MOVE.W  #61,D0
00001058  4281                     140              CLR.L   D1
0000105A  4E4F                     141              TRAP    #15
0000105C  23C1 0000186E            142              MOVE.L  D1,(MOUY)               ; STORES CURRENT POS TO MOUX/Y
00001062  C03C 0007                143              AND.B   #7,D0                   ; AND TO GET ONLY THE LAST 3 BITS
00001066  1439 00001872            144              MOVE.B  (MOUVAL),D2             ; COMPUTE EDGE
0000106C  4602                     145              NOT.B   D2                      ; EDGE=NOT(PREVIOUS) AND CURRENT
0000106E  C400                     146              AND.B   D0,D2
00001070  13C0 00001872            147              MOVE.B  D0,(MOUVAL)             ; STORES MOUSE STATUS TO MOUVAL 
00001076  13C2 00001873            148              MOVE.B  D2,(MOUEDGE)            ; STORES MOUEDGE
0000107C                           149                  
0000107C  4E73                     150              RTE
0000107E                           151  
0000107E                           152  ; =============================================================================
0000107E                           153  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000107E                           154  ; =============================================================================
0000107E                           155  
0000107E                           156  ; -----------------------------------------------------------------------------
0000107E                           157  SCRINIT
0000107E                           158  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS AS FOLLOWS:
0000107E                           159  ; * INSTALLS SCRUPD INTO TRAP #SCRTRAP
0000107E                           160  ; * SETS OUTPUT RESOLUTION TO SCRWIDTH*SCRHEIGH
0000107E                           161  ; * SETS OUTPUT TO WINDOWED MODE
0000107E                           162  ; * ENABLES DOUBLE BUFFER AND CLEARS BOTH SCREEN BUFFERS
0000107E                           163  ; INPUT    - NONE
0000107E                           164  ; OUTPUT   - NONE
0000107E                           165  ; MODIFIES - ALL REGISTERS CAN BE MODIFIED
0000107E                           166  ; -----------------------------------------------------------------------------
0000107E  21FC 000010B6 0080       167              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001086  223C 03200258            168              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000108C  103C 0021                169              MOVE.B  #33,D0
00001090  4E4F                     170              TRAP    #15
00001092  7201                     171              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001094  4E4F                     172              TRAP    #15
00001096  323C FF00                173              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000109A  103C 000B                174              MOVE.B  #11,D0
0000109E  4E4F                     175              TRAP    #15
000010A0  123C 0011                176              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
000010A4  103C 005C                177              MOVE.B  #92,D0
000010A8  4E4F                     178              TRAP    #15
000010AA  323C FF00                179              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010AE  103C 000B                180              MOVE.B  #11,D0
000010B2  4E4F                     181              TRAP    #15
000010B4  4E75                     182              RTS
000010B6                           183  
000010B6                           184  ; -----------------------------------------------------------------------------
000010B6                           185  SCRUPD
000010B6                           186  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
000010B6                           187  ; BUFFER FOR THE NEXT ONE. PERFORMS TWO TASKS:
000010B6                           188  ; * CLEARS ACTIVE (HIDDEN) GRAPHICS BUFFER
000010B6                           189  ; * SWITCHES ACTIVE AND VISIBLE GRAPHICS BUFFER
000010B6                           190  ; INPUT    - NONE
000010B6                           191  ; OUTPUT   - NONE
000010B6                           192  ; MODIFIES - NONE
000010B6                           193  ; -----------------------------------------------------------------------------
000010B6  48A7 C000                194              MOVEM.W D0-D1,-(A7)
000010BA  103C 005E                195              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010BE  4E4F                     196              TRAP    #15
000010C0  323C FF00                197              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010C4  103C 000B                198              MOVE.B  #11,D0
000010C8  4E4F                     199              TRAP    #15
000010CA  4C9F 0003                200              MOVEM.W (A7)+,D0-D1
000010CE  4E73                     201              RTE
000010D0                           202  
000010D0                           203  
000010D0                           204  
000010D0                           205  
000010D0                           206  
000010D0                           207  
000010D0                           208  -------------------- end include --------------------
000010D0                           209              INCLUDE "CONST.X68"             ; USER CONSTANTS
000010D0                           210  ; =============================================================================
000010D0                           211  ; TITLE    : USER CONSTANTS
000010D0                           212  ; AUTHOR   : ANTONI BURGUERA
000010D0                           213  ; HISTORY  : 05-JULY-2021 - CREATION
000010D0                           214  ; COMMENTS : * MOST OF THE CONSTANTS HELP IN PRODUCING A CLEAN CODE
000010D0                           215  ;              IN ACCORDANCE TO THE ASSIGNMENT SPECS, THOUGH THEIR USE IS
000010D0                           216  ;              NOT MANDATORY AS LONG AS THE ASSIGNMENT SPECS ARE FOLLOWED.
000010D0                           217  ;
000010D0                           218  ;            * THE UICOLORS ARE THE BASIC USER INTERFACE COLORS. USING THEM
000010D0                           219  ;              WILL LEAD TO A VISUALLY CONSISTENT USER INTERFACE.
000010D0                           220  ;
000010D0                           221  ;            * THE CHARACTER SIZES SPECIFY WIDTH AND HEIGHT IN PIXELS OF THE
000010D0                           222  ;              TEXT CHARACTERS. THIS SIZE DEPENDS ON THE SYSTEM (WINDOWS) FONTS
000010D0                           223  ;              AND CAN CHANGE FROM ONE COMPUTER TO ANOTHER. FEEL FREE TO ADAPT
000010D0                           224  ;              THEM TO YOUR OWN COMPUTER.
000010D0                           225  ;
000010D0                           226  ;            * CHARACTER SIZES ARE SPECIFIED AS AN EXPONENT AND THE SIZE ITSELF
000010D0                           227  ;              THE EXPONENT IS USEFUL TO MULTIPLY/DIVIDE, WHEN NECESSARY,
000010D0                           228  ;              USING SHIFTS. DEPENDING ON YOUR SYSTEM (WINDOWS) FONTS, CHAR
000010D0                           229  ;              SIZES MAY NOT BE POWER OF TWO. IF THIS IS THE CASE, DO YOUR BEST
000010D0                           230  ;              TO AVOID MULU AND DIVU.
000010D0                           231  ;
000010D0                           232  ;            * MOST OF THE GRD CONSTANTS ARE EXPRESSIONS TO EASE TESTING
000010D0                           233  ;              DIFFERENT RESOLUTIONS. IF TESTS WITH OTHER RESOLUTIONS ARE
000010D0                           234  ;              PERFORMED, TAKE INTO ACCOUNT THAT ALL EXPRESSIONS MUST EVALUATE
000010D0                           235  ;              TO INTEGER. IF THEY DON'T, UNEXPECTED RESULTS CAN HAPPEN.
000010D0                           236  ; =============================================================================
000010D0                           237  
000010D0                           238  ; --- UI COLORS ---------------------------------------------------------------
000010D0                           239  
000010D0  =00000000                240  CLRBLACK    EQU     $00000000               ; BLACK
000010D0  =00FFFFFF                241  CLRWHITE    EQU     $00FFFFFF               ; WHITE
000010D0  =00005500                242  CLRDKGRN    EQU     $00005500               ; DARK GREEN
000010D0  =00006600                243  CLRMDGRN    EQU     $00006600               ; MEDIUN GREEN
000010D0  =0000AA00                244  CLRLTGRN    EQU     $0000AA00               ; LIGHT GREEN
000010D0  =00FF0000                245  CLRLTBLU    EQU     $00FF0000               ; LIGHT BLUE
000010D0  =000000FF                246  CLRLTRED    EQU     $000000FF               ; LIGHT RED
000010D0                           247  
000010D0                           248  ; --- CHARACTER SIZES ---------------------------------------------------------
000010D0                           249  
000010D0  =00000004                250  CHRSHHEI    EQU     4                       ; CHARACTER HEIGHT AS EXPONENT OF 2
000010D0  =00000003                251  CHRSHWID    EQU     3                       ; CHARACTER WIDTH AS EXPONENT OF 2
000010D0  =00000010                252  CHRHEIGH    EQU     1<<CHRSHHEI             ; CHARACTER HEIGHT
000010D0  =00000008                253  CHRWIDTH    EQU     1<<CHRSHWID             ; CHARACTER WIDTH
000010D0                           254  
000010D0                           255  ; --- BUTTON ------------------------------------------------------------------
000010D0                           256  
000010D0  =00000004                257  BTNPENWD    EQU     4                       ; BUTTON LINE WIDTH
000010D0  =00005500                258  BTNPENCL    EQU     CLRDKGRN                ; BUTTON LINE COLOR
000010D0  =0000AA00                259  BTNSELCL    EQU     CLRLTGRN                ; BUTTON SELECTED FILL COLOR
000010D0  =00006600                260  BTNPRSCL    EQU     CLRMDGRN                ; BUTTON PRESSED FILL COLOR
000010D0  =00000006                261  BTNSZVDB    EQU     6                       ; SIZE (BYTES) OF VDB
000010D0                           262  
000010D0                           263  ; --- BUTTON LIST -------------------------------------------------------------
000010D0                           264  
000010D0  =0000000A                265  BTLMXVDB    EQU     10                      ; SIZE OF THE BUTTON LIST (ITEMS)
000010D0  =00000028                266  BTLVERSZ    EQU     40                      ; HEIGHT OF BUTTONS
000010D0  =0000000A                267  BTLVEMRG    EQU     10                      ; VERTICAL VISUAL MARGIN (TOP&BOT)
000010D0  =0000000A                268  BTLHOMRG    EQU     10                      ; HORIZONTAL VISUAL MARGIN (L & R)
000010D0                           269  
000010D0                           270  ; --- APPLICATION -------------------------------------------------------------
000010D0                           271  
000010D0  =00000000                272  GOLSPAUS    EQU     0                       ; PAUSED STATE
000010D0  =00000001                273  GOLSEXEC    EQU     1                       ; EXECUTION STATE
000010D0  =000000FA                274  GOLMAXGN    EQU     250                     ; MAXIMUM NUMBER OF GENERATIONS
000010D0                           275  
000010D0                           276  ; --- GRID --------------------------------------------------------------------
000010D0                           277  
000010D0  =00FF0000                278  GRDCOLP1    EQU     CLRLTBLU                ; PLAYER 1 COLOR
000010D0  =000000FF                279  GRDCOLP2    EQU     CLRLTRED                ; PLAYER 2 COLOR
000010D0  =00000006                280  GRDSHWID    EQU     6                       ; SHIFT TO ACHIEVE GRDWIDTH
000010D0  =00000005                281  GRDSHHEI    EQU     5                       ; SHIFT TO ACHIEVE GRDHEIGH
000010D0  =00000040                282  GRDWIDTH    EQU     1<<GRDSHWID             ; NUMBER OF GRID COLUMNS
000010D0  =00000020                283  GRDHEIGH    EQU     1<<GRDSHHEI             ; NUMBER OF ROWS
000010D0  =0000003F                284  GRDMSWID    EQU     GRDWIDTH-1              ; MASK TO GET X FROM GRID OFFSET
000010D0  =0000001F                285  GRDMSHEI    EQU     GRDHEIGH-1              ; MASK TO GET Y FROM GRID OFFSET
000010D0  =00000300                286  GRDPXWID    EQU     768                     ; GRID DISPLAY WIDTH (PIXELS)
000010D0  =00000180                287  GRDPXHEI    EQU     GRDHEIGH*GRDPXWID/GRDWIDTH ; GRID DISPLAY HEIGHT (PIXELS)
000010D0  =0000000C                288  GRDSZCEL    EQU     GRDPXWID/GRDWIDTH       ; GRID CELL SIZE (PIXELS)
000010D0  =0000006E                289  GRDVEMRG    EQU     3*BTLVEMRG+2*BTLVERSZ   ; TOP MARGIN (2 BUTTON ROWS)
000010D0  =00000010                290  GRDXOFF     EQU     (SCRWIDTH-GRDPXWID)/2   ; X OFFSETS TO DISPLAY CENTERED GRID
000010D0  =0000009E                291  GRDYOFF     EQU     (SCRHEIGH-GRDPXHEI+GRDVEMRG-BTLVEMRG)/2 ; Y OFFSET CENT. GRD
000010D0  =00000002                292  GRDSCP1X    EQU     GRDXOFF/CHRWIDTH        ; PLAYER 1 SCORE X (CHAR RESOL.)
000010D0  =00000009                293  GRDSCP1Y    EQU     GRDYOFF/CHRHEIGH        ; PLAYER 1 SCORE Y (CHAR RESOL.)
000010D0  =0000005E                294  GRDSCP2X    EQU     (GRDXOFF+GRDPXWID)/CHRWIDTH-4 ; PLAYER 2 SCORE X (CHAR RES.)
000010D0  =00000009                295  GRDSCP2Y    EQU     GRDYOFF/CHRHEIGH        ; PLAYER 2 SCORE Y (CHAR RESOL.)
000010D0  =00000030                296  GRDSCNGX    EQU     (SCRWIDTH/(CHRWIDTH*2))-2 ; NUM. GENER. X (CHAR RESOL.)
000010D0  =00000009                297  GRDSCNGY    EQU     GRDYOFF/CHRHEIGH        ; NUM. GENER. Y (CHAR RESOL.)
000010D0  =00000009                298  -------------------- end include --------------------
000010D0                           299              INCLUDE "UTIL.X68"              ; UTILITY CODE
000010D0                           300  ; =============================================================================
000010D0                           301  ; TITLE    : UTILITY SUBROUTINES
000010D0                           302  ; AUTHOR   : ANTONI BURGUERA
000010D0                           303  ; HISTORY  : 05-JULY-2021 - CREATION
000010D0                           304  ; COMMENTS : GENERAL PURPOSE SUBROUTINES.
000010D0                           305  ; =============================================================================
000010D0                           306  
000010D0                           307  ; -----------------------------------------------------------------------------
000010D0                           308  UTLINIT
000010D0                           309  ; INITIALIZES UTILITIES.
000010D0                           310  ; INPUT    : NONE
000010D0                           311  ; OUTPUT   : NONE
000010D0                           312  ; MODIFIES : NONE
000010D0                           313  ; -----------------------------------------------------------------------------
000010D0  4239 00001874            314              CLR.B   (UTLRNDIX)
000010D6  4E75                     315              RTS
000010D8                           316  
000010D8                           317  ; -----------------------------------------------------------------------------
000010D8                           318  UTLSTRLN
000010D8                           319  ; COMPUTES THE LENGTH OF A ZERO-TERMINATED STRING
000010D8                           320  ; INPUT    - A1 POINTER TO THE STRING
000010D8                           321  ; OUTPUT   - D0.W STRING LENGTH
000010D8                           322  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010D8                           323  ; -----------------------------------------------------------------------------
000010D8  2F09                     324              MOVE.L  A1,-(A7)
000010DA  4240                     325              CLR.W   D0
000010DC  4A19                     326  .LOOP       TST.B   (A1)+
000010DE  6700 0006                327              BEQ     .END
000010E2  5240                     328              ADDQ.W  #1,D0
000010E4  60F6                     329              BRA     .LOOP
000010E6  225F                     330  .END        MOVE.L  (A7)+,A1
000010E8  4E75                     331              RTS
000010EA                           332  
000010EA                           333  ; -----------------------------------------------------------------------------
000010EA                           334  UTLRAND
000010EA                           335  ; PROVIDES A PSEUDO-RANDOM COIN FLIP (RETURNS 1 OR 2)
000010EA                           336  ; INPUT    - NONE
000010EA                           337  ; OUTPUT   - D1.L RANDOM VALUE (ONLY BYTE)
000010EA                           338  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010EA                           339  ; -----------------------------------------------------------------------------
000010EA  2F08                     340              MOVE.L  A0,-(A7)
000010EC  41F9 00001108            341              LEA     .RANDVEC,A0
000010F2  4281                     342              CLR.L   D1
000010F4  1239 00001874            343              MOVE.B  (UTLRNDIX),D1
000010FA  1230 1800                344              MOVE.B  (A0,D1.L),D1
000010FE  5239 00001874            345              ADDQ.B  #1,(UTLRNDIX)
00001104  205F                     346              MOVE.L  (A7)+,A0
00001106  4E75                     347              RTS
00001108                           348  
00001108= 02 02 02 02 01 02 ...    349  .RANDVEC    DC.B    2, 2, 2, 2, 1, 2, 1, 2
00001110= 01 01 01 02 01 01 ...    350              DC.B    1, 1, 1, 2, 1, 1, 1, 2
00001118= 02 01 02 01 01 02 ...    351              DC.B    2, 1, 2, 1, 1, 2, 2, 1
00001120= 02 01 02 01 01 01 ...    352              DC.B    2, 1, 2, 1, 1, 1, 1, 2
00001128= 02 02 01 01 02 02 ...    353              DC.B    2, 2, 1, 1, 2, 2, 1, 1
00001130= 02 01 02 02 02 01 ...    354              DC.B    2, 1, 2, 2, 2, 1, 1, 1
00001138= 02 02 01 01 01 01 ...    355              DC.B    2, 2, 1, 1, 1, 1, 1, 2
00001140= 01 01 01 02 01 02 ...    356              DC.B    1, 1, 1, 2, 1, 2, 1, 2
00001148= 02 02 02 02 01 02 ...    357              DC.B    2, 2, 2, 2, 1, 2, 1, 2
00001150= 01 01 02 02 02 01 ...    358              DC.B    1, 1, 2, 2, 2, 1, 2, 1
00001158= 02 02 02 01 01 02 ...    359              DC.B    2, 2, 2, 1, 1, 2, 1, 1
00001160= 01 02 01 01 01 02 ...    360              DC.B    1, 2, 1, 1, 1, 2, 1, 2
00001168= 01 02 02 01 02 01 ...    361              DC.B    1, 2, 2, 1, 2, 1, 2, 2
00001170= 01 02 01 02 01 01 ...    362              DC.B    1, 2, 1, 2, 1, 1, 2, 1
00001178= 01 02 01 01 01 01 ...    363              DC.B    1, 2, 1, 1, 1, 1, 1, 1
00001180= 02 01 01 02 01 01 ...    364              DC.B    2, 1, 1, 2, 1, 1, 1, 2
00001188= 02 01 01 01 01 02 ...    365              DC.B    2, 1, 1, 1, 1, 2, 1, 1
00001190= 01 01 02 01 01 02 ...    366              DC.B    1, 1, 2, 1, 1, 2, 1, 2
00001198= 02 02 01 01 02 02 ...    367              DC.B    2, 2, 1, 1, 2, 2, 2, 2
000011A0= 01 01 02 01 02 02 ...    368              DC.B    1, 1, 2, 1, 2, 2, 1, 2
000011A8= 01 02 01 02 02 02 ...    369              DC.B    1, 2, 1, 2, 2, 2, 2, 1
000011B0= 01 01 02 02 01 01 ...    370              DC.B    1, 1, 2, 2, 1, 1, 2, 1
000011B8= 02 02 01 02 01 02 ...    371              DC.B    2, 2, 1, 2, 1, 2, 1, 1
000011C0= 02 01 02 01 01 02 ...    372              DC.B    2, 1, 2, 1, 1, 2, 1, 2
000011C8= 01 01 02 02 02 01 ...    373              DC.B    1, 1, 2, 2, 2, 1, 1, 1
000011D0= 01 01 02 02 01 02 ...    374              DC.B    1, 1, 2, 2, 1, 2, 1, 2
000011D8= 01 02 01 01 01 02 ...    375              DC.B    1, 2, 1, 1, 1, 2, 1, 1
000011E0= 02 01 01 02 01 02 ...    376              DC.B    2, 1, 1, 2, 1, 2, 2, 2
000011E8= 02 01 01 01 02 02 ...    377              DC.B    2, 1, 1, 1, 2, 2, 1, 1
000011F0= 02 02 02 01 02 02 ...    378              DC.B    2, 2, 2, 1, 2, 2, 1, 2
000011F8= 01 02 01 01 02 01 ...    379              DC.B    1, 2, 1, 1, 2, 1, 2, 2
00001200= 02 02 02 01 01 01 ...    380              DC.B    2, 2, 2, 1, 1, 1, 1, 2
00001200= 02 02 02 01 01 01 ...    381  -------------------- end include --------------------
00001208                           382              INCLUDE "BUTTON.X68"            ; BUTTON MANAGEMENT
00001208                           383  ; =============================================================================
00001208                           384  ; TITLE    : BUTTON MANAGEMENT
00001208                           385  ; AUTHOR   : ANTONI BURGUERA
00001208                           386  ; HISTORY  : 05-JULY-2021 - CREATION
00001208                           387  ; COMMENTS : * A BUTTON IS DEFINED BY A STATIC DATA BLOCK (SDB), WHICH DOES NOT
00001208                           388  ;              CHANGE OVER TIME, AND A VARIABLE DATA BLOCK (VDB), THAT CAN
00001208                           389  ;              CHANGE OVER TIME. CHANGES IN THE VDB ARE PRODUCED WHEN CALLING
00001208                           390  ;              SUBROUTINE BTNUPD.
00001208                           391  ;
00001208                           392  ;            * THE BUTTON SDB (CAN BE IN ROM) HAS THE FOLLOWING FIELDS. THE
00001208                           393  ;              NUMBER DENOTES THE OFFSET WITH RESPECT TO THE SDB START:
00001208                           394  ;
00001208                           395  ;                +0  - WORD - YTOP COORDINATE (PIXELS)
00001208                           396  ;                +2  - WORD - XLEFT COORDINATE (PIXELS)
00001208                           397  ;                +4  - WORD - HEIGHT (PIXELS)
00001208                           398  ;                +6  - WORD - WIDTH (PIXELS)
00001208                           399  ;                +8  - LONG - CALLBACK POINTER
00001208                           400  ;                +12 - BYTE STRING - ZERO TERMINATED STRING. TEXT TO SHOW.
00001208                           401  ;
00001208                           402  ;            * THE BUTTON VDB (MUST BE IN RAM) IS:
00001208                           403  ;
00001208                           404  ;                +0 - LONG - POINTER TO THE STATIC DATABLOCK
00001208                           405  ;                +4 - BYTE - STATUS WITH FORMAT XXXXXCPI WHERE:
00001208                           406  ;                            - I (BIT 0) - 1=MOUSE INSIDE, 0=MOUSE OUTSIDE
00001208                           407  ;                            - P (BIT 1) - 1=MOUSE PRESSED INSIDE
00001208                           408  ;                                          0=MOUSE NOT PRESSED INSIDE
00001208                           409  ;                            - C (BIT 2) - 1=MOUSE CLICKED INSIDE
00001208                           410  ;                                          0=MOUSE NOT CLICKED INSIDE
00001208                           411  ;                            NOTE THAT IF I=0 THEN P=C=0, IF I=1 AND P=0
00001208                           412  ;                            THEN C=0.
00001208                           413  ; =============================================================================
00001208                           414  
00001208                           415  ; -----------------------------------------------------------------------------
00001208                           416  BTNINIT
00001208                           417  ; INITIALIZES THE BUTTON BY:
00001208                           418  ;  * COPYING THE SDB POINTER INTO THE VDB.
00001208                           419  ;  * CLEARING THE STATUS BYTE.
00001208                           420  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001208                           421  ;            A1 - POINTER TO THE STATIC DATABLOCK
00001208                           422  ; OUTPUT   : NONE
00001208                           423  ; MODIFIES : NONE
00001208                           424  ; -----------------------------------------------------------------------------
00001208                           425  
00001208  48E7 FFC0                426              MOVEM.L D0-D7/A0-A1,-(A7)       ; Save content registers
0000120C                           427              
0000120C  2089                     428              MOVE.L  A1,(A0)                 ; Copy SDB pointer into VDB
0000120E  4228 0004                429              CLR.B   4(A0)                   ; CLEAR STATUS BYTE(VDB)                
00001212                           430  
00001212  4CDF 03FF                431              MOVEM.L (A7)+,D0-D7/A0-A1       ; Restore content resgiters
00001216                           432              
00001216  4E75                     433              RTS
00001218                           434  
00001218                           435  ; -----------------------------------------------------------------------------
00001218                           436  BTNUPD
00001218                           437  ; UPDATES THE BUTTON VDB AND EXECUTES THE CALLBACK IF REQUIRED
00001218                           438  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001218                           439  ; OUTPUT   : NONE
00001218                           440  ; MODIFIES : NONE
00001218                           441  ; -----------------------------------------------------------------------------
00001218                           442  
00001218  48E7 FFFE                443              MOVEM.L D0-D7/A0-A6,-(A7)       ; Save content registers
0000121C                           444              
0000121C  117C 0000 0004           445              MOVE.B   #0,4(A0)                ; CLEAR STATUS BYTE
00001222  2250                     446              MOVE.L  (A0),A1                 ; COPY @ SDB OF BUTTON
00001224                           447              
00001224                           448              ; COPY MOUSE POSITION
00001224  3039 0000186E            449              MOVE.W  MOUY,D0
0000122A  3239 00001870            450              MOVE.W  MOUX,D1
00001230                           451                   
00001230                           452              ; GET BUTTON POSITION
00001230  3419                     453              MOVE.W  (A1)+,D2                ; TOP Y
00001232  3619                     454              MOVE.W  (A1)+,D3                ; LEFT X
00001234  3819                     455              MOVE.W  (A1)+,D4                ; HEIGHT
00001236  3A19                     456              MOVE.W  (A1)+,D5                ; WIDTH
00001238                           457              
00001238  B042                     458              CMP.W   D2,D0
0000123A  6E00 0006                459              BGT     .CHECKLEFTX
0000123E  6000 0066                460              BRA     .RT
00001242                           461              
00001242  B243                     462  .CHECKLEFTX CMP.W   D3,D1
00001244  6E00 0006                463              BGT     .CHECKLWY
00001248  6000 005C                464              BRA     .RT
0000124C                           465            
0000124C  3444                     466  .CHECKLWY   MOVE.W  D4,A2
0000124E  D4C2                     467              ADD.W   D2,A2
00001250  B04A                     468              CMP.W   A2,D0
00001252  6D00 0006                469              BLT     .CHECKRTX
00001256  6000 004E                470              BRA     .RT
0000125A                           471              
0000125A  3443                     472  .CHECKRTX   MOVE.W  D3,A2
0000125C  D4C5                     473              ADD.W   D5,A2
0000125E  B04A                     474              CMP.W   A2,D0
00001260  6D00 0006                475              BLT     .UPTI
00001264  6000 0030                476              BRA     .CLEARSTUS
00001268                           477  
00001268  117C 0001 0004           478  .UPTI       MOVE.B  #1,4(A0)
0000126E  0839 0000 00001872       479              BTST    #0,MOUVAL
00001276  6700 002E                480              BEQ     .RT
0000127A  117C 0003 0004           481              MOVE.B  #3,4(A0)
00001280  0839 0000 00001873       482              BTST    #0,MOUEDGE 
00001288  6700 001C                483              BEQ     .RT
0000128C  117C 0007 0004           484              MOVE.B  #7,4(A0)
00001292  6000 000A                485              BRA     .CALLBACK
00001296                           486  
00001296  4228 0004                487  .CLEARSTUS  CLR.B   4(A0)
0000129A  6000 000A                488              BRA     .RT
0000129E                           489  
0000129E  2451                     490  .CALLBACK   MOVE.L  (A1),A2
000012A0  4E92                     491              JSR     (A2)
000012A2  6000 0002                492              BRA     .RT           
000012A6                           493              
000012A6  4CDF 7FFF                494  .RT         MOVEM.L (A7)+,D0-D7/A0-A6       ; Restore content resgiters
000012AA                           495  
000012AA  4E75                     496              RTS
000012AC                           497  
000012AC                           498  ; -----------------------------------------------------------------------------
000012AC                           499  BTNPLOT
000012AC                           500  ; PLOTS THE BUTTON. A RECTANGLE IS DRAWN WITH THICKNESS BTNPENWD. THE CONTOUR
000012AC                           501  ; COLOR IS BTNPENCL. THE FILL COLOR IS BLACK IF THE MOUSE IS NOT INSIDE,
000012AC                           502  ; BTNSELCL IF THE MOUSE IS INSIDE BUT THE MOUSE BUTTON IS NOT PRESSED AND
000012AC                           503  ; BTNPRSCL IF THE MOUSE BUTTON IS PRESSED INSIDE.
000012AC                           504  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
000012AC                           505  ; OUTPUT   : NONE
000012AC                           506  ; MODIFIES : NONE
000012AC                           507  ; -----------------------------------------------------------------------------
000012AC                           508  
000012AC  48E7 FFE0                509              MOVEM.L D0-D7/A0-A2,-(A7)       ; Save content registers
000012B0                           510              
000012B0                           511              ; SET PEN COLOR
000012B0  103C 0050                512              MOVE.B  #80,D0
000012B4  223C 00005500            513              MOVE.L  #BTNPENCL,D1
000012BA  4E4F                     514              TRAP    #15
000012BC                           515              
000012BC                           516              ; SET PEN WIDTH/THICKNESS
000012BC  103C 005D                517              MOVE.B  #93,D0
000012C0  7204                     518              MOVE.L  #BTNPENWD,D1
000012C2  4E4F                     519              TRAP    #15
000012C4                           520              
000012C4                           521              ; Cambio de colores de los rectangulos
000012C4  0C28 0000 0004           522              CMP.B   #0,4(A0)
000012CA  6700 002A                523              BEQ     .MOUFUERA
000012CE  0810 0001                524              BTST.B  #1,(A0)
000012D2  6700 0012                525              BEQ     .MOUPRESIONADO 
000012D6                           526      
000012D6                           527              ;Mouse encima del rectangulo   
000012D6  223C 0000AA00            528              MOVE.L  #BTNSELCL,D1
000012DC  103C 0051                529              MOVE.B  #81,D0
000012E0  4E4F                     530              TRAP    #15
000012E2  6000 001A                531              BRA     .SALIR
000012E6                           532                
000012E6                           533  .MOUPRESIONADO            
000012E6                           534              ;Mouse presionando rectangulo
000012E6  223C 00006600            535              MOVE.L  #BTNPRSCL,D1
000012EC  103C 0051                536              MOVE.B  #81,D0
000012F0  4E4F                     537              TRAP    #15
000012F2  6000 000A                538              BRA     .SALIR
000012F6                           539              
000012F6                           540  .MOUFUERA
000012F6                           541              ;Mouse fuera del rectangulo            
000012F6  7200                     542              MOVE.L  #CLRBLACK,D1
000012F8  103C 0051                543              MOVE.B  #81,D0
000012FC  4E4F                     544              TRAP    #15
000012FE                           545              
000012FE                           546  .SALIR      
000012FE  2250                     547              MOVE.L  (A0),A1                 ; COPY @ SDB OF BUTTON
00001300  4281                     548              CLR.L   D1
00001302                           549              
00001302                           550              ; GET COORDINATES(UP)
00001302  3419                     551              MOVE.W  (A1)+,D2                ; UPPER Y
00001304  3219                     552              MOVE.W  (A1)+,D1                ; LEFT X
00001306                           553              
00001306                           554              ; GET HEIGHT
00001306  3819                     555              MOVE.W  (A1)+,D4
00001308  3F04                     556              MOVE.W  D4,-(A7)
0000130A                           557              
0000130A                           558              ; GET WIDTH 
0000130A  3619                     559              MOVE.W  (A1)+,D3
0000130C  3E03                     560              MOVE.W  D3,D7
0000130E                           561  
0000130E                           562              ; GET COORDINATES(LOW)
0000130E  D641                     563              ADD.W   D1,D3                   ; RIGHT X
00001310  3A02                     564              MOVE.W  D2,D5                   
00001312  DA44                     565              ADD.W   D4,D5                   ; LOWER Y
00001314  3805                     566              MOVE.W  D5,D4 
00001316                           567              
00001316                           568              ; DRAW BUTTON
00001316  103C 0057                569              MOVE.B  #87,D0
0000131A  4E4F                     570              TRAP    #15
0000131C                           571              
0000131C                           572              ; SET PEN COLOR
0000131C  3A01                     573              MOVE.W  D1,D5                   ; SAVE D1 CONTENT
0000131E  103C 0050                574              MOVE.B  #80,D0
00001322  223C 00FFFFFF            575              MOVE.L  #CLRWHITE,D1
00001328  4E4F                     576              TRAP    #15
0000132A  4281                     577              CLR.L   D1
0000132C  3205                     578              MOVE.W  D5,D1                   ; RESTORE D1
0000132E                           579              
0000132E                           580              ; GET & DRAW TEXT
0000132E  5849                     581              ADD.W   #4,A1
00001330                           582              ; TEXTWIDTH  = NUMCAR*CHRWIDTH ; CHARACTER WIDTH
00001330                           583              ; TEXTHEIGHT = CHRHEIGH        ; CHARACTER HEIGHT
00001330  4285                     584              CLR.L   D5
00001332  2450                     585              MOVE.L  (A0),A2
00001334  D4FC 000C                586              ADD.W   #12,A2
00001338  1C1A                     587              MOVE.B  (A2)+,D6
0000133A  BC7C 0000                588  .LOOP       CMP     #0,D6                   ; GET TEXT LENGTH            
0000133E  6700 0008                589              BEQ     .DONE
00001342  5245                     590              ADD.W   #1,D5
00001344  1C1A                     591              MOVE.B  (A2)+,D6                
00001346  60F2                     592              BRA     .LOOP
00001348  CAFC 0008                593  .DONE       MULU.W  #CHRWIDTH,D5
0000134C  9E45                     594              SUB.W   D5,D7                   ; WIDTH-TEXTWIDTH
0000134E  8EFC 0002                595              DIVU.W  #2,D7                   ; (WIDTH-TEXTWIDTH)/2
00001352  D247                     596              ADD.W   D7,D1                   ; LEFTX +(WIDTH-TEXTWIDTH)/2
00001354                           597  
00001354  381F                     598              MOVE.W  (A7)+,D4
00001356  0444 0010                599              SUB.W   #CHRHEIGH,D4            ; HEIGHT-TEXTHEIGHT
0000135A  88FC 0002                600              DIVU.W  #2,D4                   ; (HEIGHT-TEXTHEIGHT)/2
0000135E  D444                     601              ADD.W   D4,D2                   ; UPPERY+(HEIGHT-TEXTHEIGHT)/2
00001360                           602              
00001360  103C 005F                603              MOVE.B  #95,D0
00001364  4E4F                     604              TRAP    #15
00001366                           605              
00001366  4CDF 07FF                606              MOVEM.L (A7)+,D0-D7/A0-A2       ; Restore content resgiters
0000136A                           607              
0000136A  4E75                     608              RTS
0000136C                           609                      
0000136C                           610  
0000136C                           611  
0000136C                           612  
0000136C                           613  
0000136C                           614  
0000136C                           615  
0000136C                           616  
0000136C                           617  
0000136C                           618  
0000136C                           619  
0000136C                           620  
0000136C                           621  
0000136C                           622  
0000136C                           623  
0000136C                           624  -------------------- end include --------------------
0000136C                           625              INCLUDE "BTNLIST.X68"           ; BUTTON LIST MANAGEMENT
0000136C                           626  ; =============================================================================
0000136C                           627  ; TITLE    : BUTTON LIST MANAGEMENT
0000136C                           628  ; AUTHOR   : ANTONI BURGUERA
0000136C                           629  ; HISTORY  : 05-JULY-2021 - CREATION
0000136C                           630  ; COMMENTS : * ALLOWS ADDING, UPDATING AND PLOTTING A LIST OF BUTTONS. ALLOWS
0000136C                           631  ;              REMOVING THEM ALL, BUT NOT INDIVIDUALLY.
0000136C                           632  ;
0000136C                           633  ;            * THE LIST OF BUTTONS IS STORED AS A LIST OF BUTTON'S VDB. THIS
0000136C                           634  ;              LIST IS STORED AT BTLDATA.
0000136C                           635  ;
0000136C                           636  ;            * THE LIST OF VBD IS BUILT ASSUMING A MAXIMUM OF BTLMXVDB BUTTONS
0000136C                           637  ;              AND A SIZE OF BTNSZVDB BYTES FOR EACH VDB.
0000136C                           638  ; =============================================================================
0000136C                           639  
0000136C                           640  ; -----------------------------------------------------------------------------
0000136C                           641  BTLINIT
0000136C                           642  ; INITIALIZES BUTTON LIST BY SETTING ALL THE POINTERS TO STATIC DATA BLOCKS
0000136C                           643  ; TO $FFFFFFFF.
0000136C                           644  ; INPUT    : NONE
0000136C                           645  ; OUTPUT   : NONE
0000136C                           646  ; MODIFIES : NONE
0000136C                           647  ; -----------------------------------------------------------------------------
0000136C  48E7 8080                648              MOVEM.L D0/A0,-(A7)
00001370  41F9 00001876            649              LEA     BTLDATA,A0
00001376  303C 0009                650              MOVE.W  #BTLMXVDB-1,D0          ; NUM ITERATIONS
0000137A  20BC FFFFFFFF            651  .LOOP       MOVE.L  #$FFFFFFFF,(A0)         ; MARK SLOT AS EMPTY
00001380  5C88                     652              ADD.L   #BTNSZVDB,A0            ; GO TO NEXT SLOT
00001382  51C8 FFF6                653              DBRA.W  D0,.LOOP                ; LOOP FOR ALL SLOTS
00001386  4CDF 0101                654              MOVEM.L (A7)+,D0/A0
0000138A  4E75                     655              RTS
0000138C                           656  
0000138C                           657  ; -----------------------------------------------------------------------------
0000138C  =0000136C                658  BTLCLEAR    EQU     BTLINIT
0000138C                           659  ; CLEARS THE BUTTON LIST. SAME AS BTLINIT.
0000138C                           660  ; INPUT    : NONE
0000138C                           661  ; OUTPUT   : NONE
0000138C                           662  ; MODIFIES : NONE
0000138C                           663  ; -----------------------------------------------------------------------------
0000138C                           664  
0000138C                           665  ; -----------------------------------------------------------------------------
0000138C                           666  BTLADD
0000138C                           667  ; ADDS A NEW BUTTON INTO THE BUTTON LIST AND INITS IT.
0000138C                           668  ; INPUT    : A1 - POINTER TO THE BUTTON SDB
0000138C                           669  ; OUTPUT   : NONE
0000138C                           670  ; MODIFIES : NONE
0000138C                           671  ; -----------------------------------------------------------------------------
0000138C  48E7 8080                672              MOVEM.L A0/D0,-(A7)
00001390                           673  
00001390                           674              ; SEARCH FOR AN EMPTY SLOT
00001390                           675  
00001390  41F9 00001876            676              LEA     BTLDATA,A0
00001396  303C 0009                677              MOVE.W  #BTLMXVDB-1,D0
0000139A  0C90 FFFFFFFF            678  .LOOP       CMP.L   #$FFFFFFFF,(A0)
000013A0  6700 000E                679              BEQ     .FOUND
000013A4  5C88                     680              ADD.L   #BTNSZVDB,A0
000013A6  51C8 FFF2                681              DBRA.W  D0,.LOOP
000013AA                           682  
000013AA                           683              ; NO SLOT? DO NOTHING
000013AA                           684  
000013AA  4CDF 0101                685  .END        MOVEM.L (A7)+,A0/D0
000013AE  4E75                     686              RTS
000013B0                           687  
000013B0                           688              ; SLOT FOUND? PLACE THE BUTTON THERE BY CALLING BTNINIT
000013B0                           689  
000013B0  4EB8 1208                690  .FOUND      JSR     BTNINIT
000013B4  60F4                     691              BRA     .END
000013B6                           692  
000013B6                           693  ; -----------------------------------------------------------------------------
000013B6                           694  BTLUPD
000013B6                           695  ; CALLS BTNUPD FOR ALL THE BUTTONS IN THE BUTTON LIST.
000013B6                           696  ; INPUT    : NONE
000013B6                           697  ; OUTPUT   : NONE
000013B6                           698  ; MODIFIES : NONE
000013B6                           699  ; -----------------------------------------------------------------------------
000013B6                           700  
000013B6  48E7 8080                701              MOVEM.L A0/D0,-(A7)
000013BA                           702  
000013BA                           703              ; TRAVERSE THE LIST
000013BA                           704  
000013BA  41F9 00001876            705              LEA     BTLDATA,A0
000013C0  303C 0009                706              MOVE.W  #BTLMXVDB-1,D0
000013C4  0C90 FFFFFFFF            707  .LOOP       CMP.L   #$FFFFFFFF,(A0)
000013CA  6700 000C                708              BEQ     .DONE
000013CE                           709  
000013CE                           710              ; UPDATE EACH BUTTON
000013CE                           711  
000013CE  4EB8 1218                712              JSR     BTNUPD
000013D2                           713  
000013D2                           714              ; GO TO THE NEXT BUTTON
000013D2                           715  
000013D2  5C88                     716              ADD.L   #BTNSZVDB,A0
000013D4  51C8 FFEE                717              DBRA.W  D0,.LOOP
000013D8                           718  
000013D8  4CDF 0101                719  .DONE       MOVEM.L (A7)+,A0/D0
000013DC  4E75                     720              RTS
000013DE                           721  
000013DE                           722  
000013DE                           723  ; -----------------------------------------------------------------------------
000013DE                           724  BTLPLOT
000013DE                           725  ; CALLS BTNPLOT FOR ALL THE BUTTONS IN THE BUTTON LIST.
000013DE                           726  ; INPUT    : NONE
000013DE                           727  ; OUTPUT   : NONE
000013DE                           728  ; MODIFIES : NONE
000013DE                           729  ; -----------------------------------------------------------------------------
000013DE                           730  
000013DE                           731  ; TODO : PLACE YOUR CODE HERE
000013DE                           732              ; JSR BTLUPD
000013DE                           733              ; RTS
000013DE  48E7 8080                734              MOVEM.L A0/D0,-(A7)             ; Save content registers
000013E2                           735              
000013E2  41F9 00001876            736              LEA     BTLDATA,A0              ; @ OF THE BUTTONS
000013E8  303C 0009                737              MOVE.W  #BTLMXVDB-1,D0
000013EC  0C90 FFFFFFFF            738  .LOOP       CMP.L   #$FFFFFFFF,(A0)         ; Until end of list
000013F2  6700 000C                739              BEQ     .DONE
000013F6                           740  
000013F6  4EB8 12AC                741              JSR     BTNPLOT                 ; Calls BTNUPD
000013FA                           742  
000013FA  5C88                     743              ADD.L   #BTNSZVDB,A0            ; Next button
000013FC  51C8 FFEE                744              DBRA.W  D0,.LOOP
00001400                           745              
00001400  4CDF 0101                746  .DONE       MOVEM.L (A7)+,A0/D0             ; Restore content resgiters
00001404                           747              
00001404  4E75                     748              RTS
00001406                           749  
00001406                           750              
00001406                           751  
00001406                           752  
00001406                           753  
00001406                           754  
00001406                           755  
00001406                           756  
00001406                           757  
00001406                           758  
00001406                           759  
00001406                           760  -------------------- end include --------------------
00001406                           761              INCLUDE "GRID.X68"              ; GRID MANAGEMENT
00001406                           762  ; =============================================================================
00001406                           763  ; TITLE    : GRID MANAGEMENT
00001406                           764  ; AUTHOR   : ANTONI BURGUERA
00001406                           765  ; HISTORY  : 05-JULY-2021 - CREATION
00001406                           766  ; COMMENTS : * THERE ARE TWO MATRICES (GRDMATR0 AND GRDMATR1) AND TWO POINTERS
00001406                           767  ;              TO THESE MATRICES (GRDSRC AND GRDDST).
00001406                           768  ;
00001406                           769  ;            * THE MATRIX TO BE PLOTTED IS ALWAYS THE ONE POINTED BY GRDDST.
00001406                           770  ;
00001406                           771  ;            * THE MATRIX TO BE UPDATED BY THE MOUSE (GRDMUPD) IS ALWAYS THE
00001406                           772  ;              ONE POINTED BY GRDDST.
00001406                           773  ;
00001406                           774  ;            * THE RULES-UPDATE (GRDRUPD) SWITCHES THE POINTERS AND THEN READS
00001406                           775  ;              THE NEW SOURCE MATRIX (GRDSRC) TO DETERMINE THE NUMBER OF
00001406                           776  ;              NEIGHBORS. THE RESULTING CELL VALUE IS WRITTEN TO THE DESTINA-
00001406                           777  ;              TION MATRIX, POINTED BY GRDDST.
00001406                           778  ; =============================================================================
00001406                           779  
00001406                           780  ; -----------------------------------------------------------------------------
00001406                           781  GRDINIT
00001406                           782  ; INITIALIZE THE GRID AS FOLLOWS:
00001406                           783  ; * POINTS THE SOURCE GRID POINTER TO GRDMATR0.
00001406                           784  ; * POINTS THE DESTINATION GRID POINTER TO GRDMATR1.
00001406                           785  ; * RESETS THE COUNTERS (GRDNPLR1, GRDNPLR2, GRDNGEN).
00001406                           786  ; * FILLS THE TWO MATRICES (GRDMATR0 AND GRDMATR1) WITH ZEROS.
00001406                           787  ; INPUT    : NONE
00001406                           788  ; OUTPUT   : NONE
00001406                           789  ; MODIFIES : NONE
00001406                           790  ; -----------------------------------------------------------------------------
00001406  48E7 8080                791              MOVEM.L A0/D0,-(A7)
0000140A  23FC 000018BA 000018B2   792              MOVE.L  #GRDMATR0,(GRDSRC)
00001414  23FC 000020BA 000018B6   793              MOVE.L  #GRDMATR1,(GRDDST)
0000141E  4279 000028BA            794              CLR.W   (GRDNPLR1)
00001424  4279 000028BC            795              CLR.W   (GRDNPLR2)
0000142A  4279 000028BE            796              CLR.W   (GRDNGEN)
00001430  41F9 000018BA            797              LEA     GRDMATR0,A0
00001436  303C 0FFF                798              MOVE.W  #GRDWIDTH*GRDHEIGH*2-1,D0
0000143A  4218                     799  .LOOP       CLR.B   (A0)+
0000143C  51C8 FFFC                800              DBRA.W  D0,.LOOP
00001440  4CDF 0101                801              MOVEM.L (A7)+,A0/D0
00001444  4E75                     802              RTS
00001446                           803  
00001446                           804  ; -----------------------------------------------------------------------------
00001446                           805  GRDMUPD
00001446                           806  ; GRID UPDATE USING MOUSE. THE INTERFACE IS AS FOLLOWS:
00001446                           807  ; * IF MOUSE IS NOT PRESSED OR IS OUTSIDE THE PLOTTED GRID, DOES NOTHING.
00001446                           808  ; * IF LEFT MOUSE BUTTON IS PRESSED INSIDE THE GRID:
00001446                           809  ;   - A PLAYER 1 (VALUE=1) CELL IS CREATED AT THE MOUSE POSITION IF THE MOUSE
00001446                           810  ;     IS ON THE LEFT HALF OF THE GRID.
00001446                           811  ;   - A PLAYER 2 (VALUE=2) CELL IS CREATED AT THE MOUSE POSITION IF THE MOUSE
00001446                           812  ;     IS ON THE RIGHT HALF OF THE GRID.
00001446                           813  ; * IF RIGHT MOUSE BUTTON IS PRESSED INSIDE THE GRID, THE CELL WHERE THE MOUSE
00001446                           814  ;   IS IS CLEARED (VALUE=0).
00001446                           815  ; INPUT    : NONE
00001446                           816  ; OUTPUT   : NONE
00001446                           817  ; MODIFIES : NONE
00001446                           818  ; -----------------------------------------------------------------------------
00001446                           819  
00001446                           820  ; TODO : PLACE YOUR CODE HERE
00001446                           821  
00001446                           822  
00001446  48E7 FFFE                823              MOVEM.L D0-D7/A0-A6,-(A7)
0000144A                           824  
0000144A                           825  
0000144A  4CDF 7FFF                826              MOVEM.L (A7)+,D0-D7/A0-A6       
0000144E  4E75                     827              RTS
00001450                           828  
00001450                           829  ; -----------------------------------------------------------------------------
00001450                           830  GRDRUPD
00001450                           831  ; UPDATES THE GRID ACCORDING TO 2-PLAYER GAME OF LIFE RULES AS FOLLOWS:
00001450                           832  ; * ADDS 1 TO THE NUMBER OF GENERATIONS (GRDNGEN)
00001450                           833  ; * SWITCHES THE MATRIX POINTERS (GRDDST AND GRDSRC).
00001450                           834  ; * CHECKS THE NEIGHBORS USING THE NEW SOURCE MATRIX (POINTER BY GRDDRC)
00001450                           835  ; * THE RESULTS OF APPLYING THE RULES ARE WRITTEN INTO THE NEW DESTINATION
00001450                           836  ;   MATRIX (POINTED BY GRDDST).
00001450                           837  ; * THE RULES ARE THE FOLLOWING, WHERE P1 AND P2 ARE 1 AND 2 RESPECTIVELY,
00001450                           838  ;   DEAD CELLS ARE REPRESENTED BY 0 AND NP1 AND NP2 DENOTE THE NUMBER OF
00001450                           839  ;   PLAYER 1 AND PLAYER 2 NEIGHBORS RESPECTIVELY:
00001450                           840  ;   + SURVIVAL RULES
00001450                           841  ;     - IF CELL IS P1 AND NP1-NP2 IS 2 OR 3 -> NEW VALUE IS P1
00001450                           842  ;     - IF CELL IS P1 AND NP1-NP2 IS 1 AND NP1>=2 -> NEW VALUE IS P1
00001450                           843  ;     - OTHERWISE -> NEW VALUE IS 0
00001450                           844  ;     - IF CELL IS P2 AND NP2-NP1 IS 2 OR 3 -> NEW VALUE IS P2
00001450                           845  ;     - IF CELL IS P2 AND NP2-NP1 IS 1 AND NP2>=2 -> NEW VALUE IS P2
00001450                           846  ;     - OTHERWISE -> NEW VALUE IS 0
00001450                           847  ;   + BIRTH RULES
00001450                           848  ;     - THE CELL HAS EXACTLY THREE P1 NEIGHBOURS AND THE NUMBER
00001450                           849  ;       OF P2 NEIGHBOURS IS DIFFERENT FROM THREE. IN THIS CASE A
00001450                           850  ;       P1 TOKEN IS BORN IN THE CELL.
00001450                           851  ;     - THE CELL HAS EXACTLY THREE P2 NEIGHBOURS AND THE NUMBER
00001450                           852  ;       OF P1 NEIGHBOURS IS DIFFERENT FROM THREE. IN THIS CASE A
00001450                           853  ;       P2 TOKEN IS BORN IN THE CELL.
00001450                           854  ;     - THE CELL HAS EXACTLY THREE WHITE AND THREE BLACK NEIGHBOURS.
00001450                           855  ;       IN THIS CASE AN UNBIASED COIN DETERMINES WHETHER A WHITE OR
00001450                           856  ;       BLACK TOKEN IS BORN IN THE CELL.
00001450                           857  ; INPUT    : NONE
00001450                           858  ; OUTPUT   : NONE
00001450                           859  ; MODIFIES : NONE
00001450                           860  ; -----------------------------------------------------------------------------
00001450                           861  
00001450                           862  ; TODO : PLACE YOUR CODE HERE
00001450                           863  
00001450  48E7 FFFE                864              MOVEM.L D0-D7/A0-A6,-(A7)
00001454                           865  
00001454                           866  
00001454                           867          
00001454                           868  
00001454  4CDF 7FFF                869              MOVEM.L (A7)+,D0-D7/A0-A6       
00001458  4E75                     870              RTS
0000145A                           871  
0000145A                           872  ; -----------------------------------------------------------------------------
0000145A                           873  GRDSAVE
0000145A                           874  ; SAVES THE GRID INTO A FILE IN CSV FORMAT
0000145A                           875  ; INPUT    : NONE
0000145A                           876  ; OUTPUT   : NONE
0000145A                           877  ; MODIFIES : NONE
0000145A                           878  ; NOTE     : THE LOCAL BUFFER SIZE MUST BE MAX(512,2*GRDWIDTH+1). PLEASE CHANGE
0000145A                           879  ;            IT ACCORDINGLY IF GRDWIDTH*2+1 IS LARGER THAN 512.
0000145A                           880  ; -----------------------------------------------------------------------------
0000145A  48E7 FFFE                881              MOVEM.L D0-D7/A0-A6,-(A7)       ; TO BE OPTIMIZED
0000145E  103C 0032                882              MOVE.B  #50,D0                  ; CLOSE ALL FILES (RECOMMENDED)
00001462  4E4F                     883              TRAP    #15
00001464  9FFC 00000200            884              SUB.L   #512,A7                 ; ROW BUFFER IN LOCAL MEMORY
0000146A  103C 003A                885              MOVE.B  #58,D0                  ; SHOW FILE DIALOG TASK
0000146E  7201                     886              MOVE.L  #1,D1                   ; DISPLAY SAVE DIALOG
00001470  43F9 000014E6            887              LEA     .MSG,A1                 ; STANDARD MESSAGE
00001476  45F9 00001500            888              LEA     .FILTER,A2              ; NO FILTER
0000147C  264F                     889              MOVE.L  A7,A3                   ; FILE NAME BUFFER
0000147E  4253                     890              CLR.W   (A3)                    ; ENSURE THERE IS NO STRING
00001480  4E4F                     891              TRAP    #15
00001482  4A01                     892              TST.B   D1
00001484  6700 0054                893              BEQ     .END                    ; IF CANCELLED, DO NOTHING
00001488  224B                     894              MOVE.L  A3,A1                   ; PLACE THE FILENAME INTO A1
0000148A  103C 0034                895              MOVE.B  #52,D0                  ; CREATE NEW FILE
0000148E  4E4F                     896              TRAP    #15
00001490  4A40                     897              TST.W   D0                      ; CHECK CREATION ERROR
00001492  6600 0046                898              BNE     .END                    ; DO NOTHING MORE IF ERROR
00001496  2C4F                     899              MOVE.L  A7,A6                   ; PUT A6 INTO START OF BUFFER
00001498  224F                     900              MOVE.L  A7,A1                   ; PUT A1 INTO START OF BUFFER
0000149A  2079 000018B6            901              MOVE.L  (GRDDST), A0            ; A0: POINTER TO THE DATA TO WRITE
000014A0  363C 001F                902              MOVE.W  #GRDHEIGH-1,D3          ; D3: NUMBER OF ROWS - 1
000014A4  343C 003F                903  .LOOPY      MOVE.W  #GRDWIDTH-1,D2          ; D2: NUMBER OF COLUMNS - 1
000014A8  103C 0030                904  .LOOP       MOVE.B  #'0',D0                 ; ADD CHAR '0' AND THE CELL VALUE
000014AC  D018                     905              ADD.B   (A0)+,D0
000014AE  1CC0                     906              MOVE.B  D0, (A6)+               ; STORE IT IN THE BUFFER
000014B0  1CFC 002C                907              MOVE.B  #',',(A6)+              ; NOW PUT THE COMMA
000014B4  51CA FFF2                908              DBRA.W  D2,.LOOP
000014B8  1D7C 000D FFFF           909              MOVE.B  #$0D,-1(A6)             ; STORE CARRIAGE RETURN (REMOVE ',')
000014BE  1CBC 000A                910              MOVE.B  #$0A,(A6)               ; STORE LINE FEED
000014C2  103C 0036                911              MOVE.B  #54,D0                  ; WRITE TO FILE TASK NUMBER
000014C6  243C 00000081            912              MOVE.L  #GRDWIDTH*2+1,D2        ; NUMBER OF BYTES TO WRITE
000014CC  4E4F                     913              TRAP    #15                     ; WRITE (A1 IS ALREADY THERE)
000014CE  2C49                     914              MOVE.L  A1,A6                   ; GO BACK TO THE BUFFER START
000014D0  51CB FFD2                915              DBRA.W  D3,.LOOPY
000014D4  103C 0038                916              MOVE.B  #56,D0                  ; CLOSE FILE
000014D8  4E4F                     917              TRAP    #15
000014DA  DFFC 00000200            918  .END        ADD.L   #512,A7                 ; RESTORE STACK
000014E0  4CDF 7FFF                919              MOVEM.L (A7)+,D0-D7/A0-A6       ; TO BE OPTIMIZED
000014E4  4E75                     920              RTS
000014E6= 53 45 4C 45 43 54 ...    921  .MSG        DC.B    'SELECT A CSV FILE TO SAVE',0
00001500= 2A 2E 43 53 56 00        922  .FILTER     DC.B    '*.CSV',0
00001506                           923              DS.W    0
00001506                           924  
00001506                           925  ; -----------------------------------------------------------------------------
00001506                           926  GRDLOAD
00001506                           927  ; LOADS THE GRID FROM A CSV FORMATTED FILE
00001506                           928  ; INPUT    : NONE
00001506                           929  ; OUTPUT   : NONE
00001506                           930  ; MODIFIES : NONE
00001506                           931  ; NOTE     : THE LOCAL BUFFER SIZE MUST BE MAX(512,2*GRDWIDTH+1). PLEASE CHANGE
00001506                           932  ;            IT ACCORDINGLY IF GRDWIDTH*2+1 IS LARGER THAN 512.
00001506                           933  ; -----------------------------------------------------------------------------
00001506  48E7 FFFE                934              MOVEM.L D0-D7/A0-A6,-(A7)       ; TO BE OPTIMIZED
0000150A  103C 0032                935              MOVE.B  #50,D0                  ; CLOSE ALL FILES (RECOMMENDED)
0000150E  4E4F                     936              TRAP    #15
00001510  9FFC 00000200            937              SUB.L   #512,A7                 ; ROW BUFFER IN LOCAL MEMORY
00001516  103C 003A                938              MOVE.B  #58,D0                  ; SHOW FILE DIALOG TASK
0000151A  4281                     939              CLR.L   D1                      ; DISPLAY LOAD DIALOG
0000151C  43F9 00001586            940              LEA     .MSG,A1                 ; STANDARD MESSAGE
00001522  45F9 000015A0            941              LEA     .FILTER,A2              ; NO FILTER
00001528  264F                     942              MOVE.L  A7,A3                   ; FILE NAME BUFFER
0000152A  4253                     943              CLR.W   (A3)                    ; ENSURE THERE IS NO STRING
0000152C  4E4F                     944              TRAP    #15
0000152E  4A01                     945              TST.B   D1
00001530  6700 0048                946              BEQ     .END                    ; IF CANCELLED, DO NOTHING
00001534  224B                     947              MOVE.L  A3,A1                   ; PLACE THE FILENAME INTO A1
00001536  103C 0033                948              MOVE.B  #51,D0                  ; OPEN EXISTING FILE
0000153A  4E4F                     949              TRAP    #15
0000153C  4A40                     950              TST.W   D0                      ; CHECK ERRORS
0000153E  6600 003A                951              BNE     .END                    ; IF ERRORS, DO NOTHING MORE
00001542  2C4F                     952              MOVE.L  A7,A6                   ; PUT A6 INTO START OF BUFFER
00001544  224F                     953              MOVE.L  A7,A1                   ; PUT A1 INTO START OF BUFFER
00001546  2079 000018B6            954              MOVE.L  (GRDDST), A0            ; POINTER TO STORE PROCESS. DATA
0000154C  363C 001F                955              MOVE.W  #GRDHEIGH-1,D3
00001550  224E                     956  .LOOP       MOVE.L  A6,A1
00001552  103C 0035                957              MOVE.B  #53,D0                  ; READ DATA TASK NUMBER
00001556  243C 00000081            958              MOVE.L  #GRDWIDTH*2+1,D2        ; NUMBER OF BYTES TO READ
0000155C  4E4F                     959              TRAP    #15                     ; READ THE DATA
0000155E  343C 003F                960              MOVE.W  #GRDWIDTH-1,D2
00001562  1019                     961  .COPY       MOVE.B  (A1)+,D0                ; PICK ONE LOADED CHARACTER
00001564  0400 0030                962              SUB.B   #'0',D0                 ; CONVERT FROM ASCII TO NUMBER
00001568  10C0                     963              MOVE.B  D0,(A0)+                ; STORE DATA
0000156A  5289                     964              ADDQ.L  #1,A1                   ; SKIP THE COMMA
0000156C  51CA FFF4                965              DBRA.W  D2,.COPY
00001570  51CB FFDE                966              DBRA.W  D3,.LOOP
00001574  103C 0038                967              MOVE.B  #56,D0                  ; CLOSE FILE
00001578  4E4F                     968              TRAP    #15
0000157A  DFFC 00000200            969  .END        ADD.L   #512,A7                 ; RESTORE STACK
00001580  4CDF 7FFF                970              MOVEM.L (A7)+,D0-D7/A0-A6       ; TO BE OPTIMIZED
00001584  4E75                     971              RTS
00001586= 53 45 4C 45 43 54 ...    972  .MSG        DC.B    'SELECT A CSV FILE TO LOAD',0
000015A0= 2A 2E 43 53 56 00        973  .FILTER     DC.B    '*.CSV',0
000015A6                           974              DS.W    0
000015A6                           975  
000015A6                           976  ; -----------------------------------------------------------------------------
000015A6                           977  GRDLLEFT
000015A6                           978  ; LOADS THE LEFT PART OF THE GRID FROM A CSV FORMATTED FILE
000015A6                           979  ; INPUT    : NONE
000015A6                           980  ; OUTPUT   : NONE
000015A6                           981  ; MODIFIES : NONE
000015A6                           982  ; NOTE     : THE LOCAL BUFFER SIZE MUST BE MAX(512,2*GRDWIDTH+1). PLEASE CHANGE
000015A6                           983  ;            IT ACCORDINGLY IF GRDWIDTH*2+1 IS LARGER THAN 512.
000015A6                           984  ; NOTE     : ALL THE ACTIVE CELLS ARE STORED AS PLAYER 1 INDEPENDLY OF THEIR
000015A6                           985  ;            ACTUAL VALUE.
000015A6                           986  ; -----------------------------------------------------------------------------
000015A6                           987  
000015A6                           988  ; TODO : PLACE YOUR CODE HERE
000015A6                           989  
000015A6                           990  
000015A6  48E7 FFFE                991              MOVEM.L D0-D7/A0-A6,-(A7)       ; SAVE CONTENT REGISTERS
000015AA                           992              
000015AA  103C 0032                993              MOVE.B  #50,D0                  ; CLOSE ALL FILES
000015AE  4E4F                     994              TRAP    #15
000015B0  9FFC 00000200            995              SUB.L   #512,A7                 ; ROW BUFFER IN LOCAL MEMORY
000015B6  103C 003A                996              MOVE.B  #58,D0                  ; SHOW FILE DIALOG TASK
000015BA  4281                     997              CLR.L   D1                      ; DISPLAY LOAD DIALOG
000015BC  43F9 000015EE            998              LEA     .MSG,A1                 ; STANDARD MESSAGE
000015C2  45F9 00001608            999              LEA     .FILTER,A2              ; NO FILTER
000015C8  264F                    1000              MOVE.L  A7,A3                   ; FILE NAME BUFFER
000015CA  4253                    1001              CLR.W   (A3)                    ; ENSURE THERE IS NO STRING
000015CC  4E4F                    1002              TRAP    #15
000015CE  4A01                    1003              TST.B   D1
000015D0  6700 0010               1004              BEQ     .END                    ; IF CANCELLED, DO NOTHING
000015D4  224B                    1005              MOVE.L  A3,A1                   ; PLACE THE FILENAME INTO A1
000015D6  103C 0033               1006              MOVE.B  #51,D0                  ; OPEN EXISTING FILE
000015DA  4E4F                    1007              TRAP    #15
000015DC  4A40                    1008              TST.W   D0                      ; CHECK ERRORS
000015DE  6600 0002               1009              BNE     .END                    ; IF ERRORS, DO NOTHING MORE
000015E2                          1010              
000015E2  DFFC 00000200           1011  .END        ADD.L   #512,A7                 ; RESTORE STACK
000015E8  4CDF 7FFF               1012              MOVEM.L (A7)+,D0-D7/A0-A6       ; RESTORES CONTENT REGISTERS
000015EC  4E75                    1013              RTS
000015EE                          1014  
000015EE= 53 45 4C 45 43 54 ...   1015  .MSG        DC.B    'SELECT A CSV FILE TO LOAD',0
00001608= 2A 2E 43 53 56 00       1016  .FILTER     DC.B    '*.CSV',0
0000160E                          1017              DS.W    0
0000160E                          1018  
0000160E                          1019  ; -----------------------------------------------------------------------------
0000160E                          1020  GRDLRGT
0000160E                          1021  ; LOADS THE RIGHT PART OF THE GRID FROM A CSV FORMATTED FILE
0000160E                          1022  ; INPUT    : NONE
0000160E                          1023  ; OUTPUT   : NONE
0000160E                          1024  ; MODIFIES : NONE
0000160E                          1025  ; NOTE     : THE LOCAL BUFFER SIZE MUST BE MAX(512,2*GRDWIDTH+1). PLEASE CHANGE
0000160E                          1026  ;            IT ACCORDINGLY IF GRDWIDTH*2+1 IS LARGER THAN 512.
0000160E                          1027  ; NOTE     : ALL THE ACTIVE CELLS ARE STORED AS PLAYER 2 INDEPENDLY OF THEIR
0000160E                          1028  ;            ACTUAL VALUE.
0000160E                          1029  ; -----------------------------------------------------------------------------
0000160E                          1030  
0000160E                          1031  ; TODO : PLACE YOUR CODE HERE
0000160E                          1032  
0000160E  48E7 FFFE               1033              MOVEM.L D0-D7/A0-A6,-(A7)       ; SAVE CONTENT REGISTERS
00001612  103C 0032               1034              MOVE.B  #50,D0                  ; CLOSE ALL FILES 
00001616  4E4F                    1035              TRAP    #15
00001618                          1036  
00001618                          1037              
00001618                          1038              
00001618  4CDF 7FFF               1039              MOVEM.L (A7)+,D0-D7/A0-A6       ; RESTORES CONTENT REGISTERS
0000161C  4E75                    1040              RTS
0000161E                          1041  
0000161E= 53 45 4C 45 43 54 ...   1042  .MSG        DC.B    'SELECT A CSV FILE TO LOAD',0
00001638= 2A 2E 43 53 56 00       1043  .FILTER     DC.B    '*.CSV',0
0000163E                          1044              DS.W    0
0000163E                          1045  
0000163E                          1046  ; -----------------------------------------------------------------------------
0000163E                          1047  GRDPLOT
0000163E                          1048  ; PLOTS THE GRID
0000163E                          1049  ; INPUT    : NONE
0000163E                          1050  ; OUTPUT   : NONE
0000163E                          1051  ; MODIFIES : NONE
0000163E                          1052  ; -----------------------------------------------------------------------------
0000163E                          1053  
0000163E                          1054  ; TODO : PLACE YOUR CODE HERE
0000163E                          1055  
0000163E  48E7 FFFE               1056              MOVEM.L D0-D7/A0-A6,-(A7)       ; SAVE CONTENT REGISTERS
00001642                          1057              
00001642                          1058              ; SET PEN COLOR
00001642  103C 0050               1059              MOVE.B  #80,D0
00001646  223C 00005500           1060              MOVE.L  #CLRDKGRN,D1
0000164C  4E4F                    1061              TRAP    #15
0000164E                          1062              
0000164E                          1063              ; SET PEN WIDTH/THICKNESS
0000164E  103C 005D               1064              MOVE.B  #93,D0
00001652  7201                    1065              MOVE.L  #1,D1
00001654  4E4F                    1066              TRAP    #15
00001656                          1067              
00001656                          1068  
00001656  343C 001F               1069              MOVE.W  #GRDMSHEI,D2
0000165A  0642 006E               1070              ADD.W   #GRDVEMRG,D2
0000165E                          1071              
0000165E  363C 000C               1072              MOVE.W  #GRDSZCEL,D3
00001662  383C 000C               1073              MOVE.W  #GRDSZCEL,D4
00001666                          1074              
00001666  3A02                    1075              MOVE.W  D2,D5                   
00001668  DA44                    1076              ADD.W   D4,D5                   ; LOWER Y
0000166A  3805                    1077              MOVE.W  D5,D4 
0000166C  3A3C 0001               1078              MOVE.W  #1,D5
00001670  3E3C 001F               1079              MOVE.W  #GRDHEIGH-1,D7         
00001674  3C3C 0040               1080  .LOOPROWS   MOVE.W  #GRDWIDTH,D6
00001678  323C FFFE               1081              MOVE.W  #BTLHOMRG-GRDSZCEL,D1  
0000167C  363C 0000               1082              MOVE.W  #0,D3
00001680  0642 000C               1083              ADD.W   #GRDSZCEL,D2
00001684  0644 000C               1084              ADD.W   #GRDSZCEL,D4
00001688                          1085  .LOOPCLMS   
00001688  0641 000C               1086              ADD.W   #GRDSZCEL,D1
0000168C  363C 000C               1087              MOVE.W  #GRDSZCEL,D3
00001690  D641                    1088              ADD.W   D1,D3
00001692  103C 0057               1089              MOVE.B  #87,D0
00001696  4E4F                    1090              TRAP    #15
00001698  51CE FFEE               1091              DBRA.W  D6,.LOOPCLMS
0000169C  51CF FFD6               1092              DBRA.W  D7,.LOOPROWS
000016A0                          1093              
000016A0                          1094                        
000016A0  4CDF 7FFF               1095              MOVEM.L (A7)+,D0-D7/A0-A6       ; RESTORE CONTENT REGISTERS
000016A4                          1096       
000016A4  4E75                    1097              RTS
000016A6                          1098  
000016A6                          1099  
000016A6                          1100  
000016A6                          1101  
000016A6                          1102  
000016A6                          1103  
000016A6                          1104  
000016A6                          1105  
000016A6                          1106  
000016A6                          1107  
000016A6                          1108  
000016A6                          1109  
000016A6                          1110  
000016A6                          1111  
000016A6                          1112  
000016A6                          1113  
000016A6                          1114  
000016A6                          1115  
000016A6                          1116  
000016A6                          1117  
000016A6                          1118  
000016A6                          1119  
000016A6                          1120  
000016A6                          1121  
000016A6                          1122  
000016A6                          1123  
000016A6                          1124  
000016A6                          1125  
000016A6                          1126  
000016A6                          1127  
000016A6                          1128  
000016A6                          1129  
000016A6                          1130  
000016A6                          1131  -------------------- end include --------------------
000016A6                          1132              INCLUDE "GOL.X68"               ; GAME OF LIFE APPLICATION
000016A6                          1133  ; =============================================================================
000016A6                          1134  ; TITLE    : GAME OF LIFE APPLICATION
000016A6                          1135  ; AUTHOR   : ANTONI BURGUERA
000016A6                          1136  ; HISTORY  : 05-JULY-2021 - CREATION
000016A6                          1137  ; COMMENTS : THIS IS AN APPLICATION. SO, IT IMPLEMENTS INITIALIZATION, UPDATE
000016A6                          1138  ;            AND PLOT, AS WELL AS SOME AUXILIARY SUBROUTINES.
000016A6                          1139  ; =============================================================================
000016A6                          1140  
000016A6                          1141  ; -----------------------------------------------------------------------------
000016A6                          1142  GOLINIT
000016A6                          1143  ; INITIALIZE GAME OF LIFE APPLICATION AS FOLLOWS:
000016A6                          1144  ; * MAKES THE INTERNAL STATE TO BE "PAUSED/STOPPED"
000016A6                          1145  ; * INITIALIZES THE USER INTERFACE (BY INITIALIZING THE BUTTONS LIST AND
000016A6                          1146  ;   ADDING BUTTONS INTO IT)
000016A6                          1147  ; * INITIALIZES THE GRID.
000016A6                          1148  ; * INITIALIZES THE UTILITY CODE.
000016A6                          1149  ; INPUT    : NONE
000016A6                          1150  ; OUTPUT   : NONE
000016A6                          1151  ; MODIFIES : NONE
000016A6                          1152  ; -----------------------------------------------------------------------------
000016A6  48E7 FFFE               1153              MOVEM.L D0-D7/A0-A6,-(A7)
000016AA  13FC 0000 000028C0      1154              MOVE.B  #GOLSPAUS,(GOLSTATE)
000016B2  4EB8 136C               1155              JSR     BTLINIT
000016B6  41F9 000016DC           1156              LEA     .SDBLIST,A0
000016BC  2258                    1157  .LOOP       MOVE.L  (A0)+,A1
000016BE  B3FC FFFFFFFF           1158              CMP.L   #-1,A1
000016C4  6700 0008               1159              BEQ     .END
000016C8  4EB8 138C               1160              JSR     BTLADD
000016CC  60EE                    1161              BRA     .LOOP
000016CE  4EB8 1406               1162  .END        JSR     GRDINIT
000016D2  4EB8 10D0               1163              JSR     UTLINIT
000016D6  4CDF 7FFF               1164              MOVEM.L (A7)+,D0-D7/A0-A6
000016DA  4E75                    1165              RTS
000016DC= 000017B8 000017CA ...   1166  .SDBLIST    DC.L    GOLCLRBT,GOLRUNBT,GOLSTPBT,GOLSTEBT,GOLLLFBT,GOLLRTBT
000016F4= 0000182C 00001842 ...   1167              DC.L    GOLLOABT,GOLSAVBT,-1
00001700                          1168  
00001700                          1169  ; -----------------------------------------------------------------------------
00001700                          1170  GOLUPD
00001700                          1171  ; UPDATE GAME OF LIFE APPLICATION AS FOLLOWS:
00001700                          1172  ; * UPDATES THE BUTTON LIST
00001700                          1173  ; * EXECUTES CODE DEPENDING ON THE CURRENT APPLICATION STATE.
00001700                          1174  ; INPUT    : NONE
00001700                          1175  ; OUTPUT   : NONE
00001700                          1176  ; MODIFIES : NONE
00001700                          1177  ; -----------------------------------------------------------------------------
00001700  48E7 C0C0               1178              MOVEM.L A0-A1/D0-D1,-(A7)
00001704  4EB8 13B6               1179              JSR     BTLUPD
00001708  41F9 00001724           1180              LEA     .JMPTBL,A0
0000170E  4280                    1181              CLR.L   D0
00001710  1039 000028C0           1182              MOVE.B  (GOLSTATE),D0
00001716  E508                    1183              LSL.B   #2,D0
00001718  2070 0000               1184              MOVE.L  (A0,D0),A0
0000171C  4E90                    1185              JSR     (A0)
0000171E  4CDF 0303               1186              MOVEM.L (A7)+,A0-A1/D0-D1
00001722  4E75                    1187              RTS
00001724= 00001446 00001734       1188  .JMPTBL     DC.L    GRDMUPD,GOLDORUN
0000172C                          1189  
0000172C                          1190  ; -----------------------------------------------------------------------------
0000172C                          1191  GOLPLOT
0000172C                          1192  ; PLOTS THE APPLICATION BY CALLING BTLPLOT AND GRDPLOT
0000172C                          1193  ; INPUT    : NONE
0000172C                          1194  ; OUTPUT   : NONE
0000172C                          1195  ; MODIFIES : NONE
0000172C                          1196  ; -----------------------------------------------------------------------------
0000172C  4EB8 13DE               1197              JSR     BTLPLOT
00001730  4EF8 163E               1198              JMP     GRDPLOT
00001734                          1199  
00001734                          1200  ; -----------------------------------------------------------------------------
00001734                          1201  GOLDORUN
00001734                          1202  ; EXECUTES THE RUN STATE. IT ALSO CHECKS IF THE MAXIMUM NUMBER OF GENERATIONS
00001734                          1203  ; IS REACHED AND, IF SO, ANNOUNCES THE WINNER.
00001734                          1204  ; INPUT    : NONE
00001734                          1205  ; OUTPUT   : NONE
00001734                          1206  ; MODIFIES : NONE
00001734                          1207  ; -----------------------------------------------------------------------------
00001734  48E7 8040               1208              MOVEM.L D0/A1,-(A7)
00001738  0C79 00FA 000028BE      1209              CMP.W   #GOLMAXGN,(GRDNGEN)
00001740  6D00 0034               1210              BLT     .DOIT
00001744  43F9 00001796           1211              LEA     .TIE,A1
0000174A  3039 000028BA           1212              MOVE.W  (GRDNPLR1),D0
00001750  B079 000028BC           1213              CMP.W   (GRDNPLR2),D0
00001756  6700 0012               1214              BEQ     .PLAYSOUND
0000175A  43F9 00001780           1215              LEA     .P1WINS,A1
00001760  6E00 0008               1216              BGT     .PLAYSOUND
00001764  43F9 0000178B           1217              LEA     .P2WINS,A1
0000176A  103C 0046               1218  .PLAYSOUND  MOVE.B  #70,D0
0000176E  4E4F                    1219              TRAP    #15
00001770  4EB9 000017AE           1220  .NOSOUND    JSR     GOLTOPAU
00001776  4EB8 1450               1221  .DOIT       JSR     GRDRUPD
0000177A  4CDF 0201               1222              MOVEM.L (A7)+,D0/A1
0000177E  4E75                    1223              RTS
00001780= 50 31 57 49 4E 53 ...   1224  .P1WINS     DC.B    'P1WINS.WAV',0
0000178B= 50 32 57 49 4E 53 ...   1225  .P2WINS     DC.B    'P2WINS.WAV',0
00001796= 54 49 45 2E 57 41 ...   1226  .TIE        DC.B    'TIE.WAV',0
0000179E                          1227              DS.W    0
0000179E                          1228  
0000179E                          1229  ; -----------------------------------------------------------------------------
0000179E                          1230  GOLTORUN
0000179E                          1231  ; SWITCHES TO RUN STATE
0000179E                          1232  ; INPUT    : NONE
0000179E                          1233  ; OUTPUT   : NONE
0000179E                          1234  ; MODIFIES : NONE
0000179E                          1235  ; -----------------------------------------------------------------------------
0000179E  4279 000028BE           1236              CLR.W   (GRDNGEN)               ; CLEAR GENERATIONS COUNT
000017A4  13FC 0001 000028C0      1237              MOVE.B  #GOLSEXEC,(GOLSTATE)
000017AC  4E75                    1238              RTS
000017AE                          1239  
000017AE                          1240  ; -----------------------------------------------------------------------------
000017AE                          1241  GOLTOPAU
000017AE                          1242  ; SWITCHES TO PAUSE STATE
000017AE                          1243  ; INPUT    : NONE
000017AE                          1244  ; OUTPUT   : NONE
000017AE                          1245  ; MODIFIES : NONE
000017AE                          1246  ; -----------------------------------------------------------------------------
000017AE  13FC 0000 000028C0      1247              MOVE.B  #GOLSPAUS,(GOLSTATE)
000017B6  4E75                    1248              RTS
000017B8                          1249  
000017B8                          1250  ; --- STATIC DATA -------------------------------------------------------------
000017B8                          1251  
000017B8                          1252  ; CLEAR BUTTON SDB
000017B8                          1253  
000017B8= 000A                    1254  GOLCLRBT    DC.W    BTLVEMRG                ; YTOP
000017BA= 000A                    1255              DC.W    0*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
000017BC= 0028                    1256              DC.W    BTLVERSZ                ; HEIGHT
000017BE= 00B4                    1257              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
000017C0                          1258  ; TODO: PLACE THE CALLBACK HERE
000017C0= 00001406                1259              DC.L    GRDINIT                 ; CALLBACK(GRID.X68)
000017C4= 43 4C 45 41 52 00       1260              DC.B    'CLEAR',0               ; TEXT
000017CA                          1261              DS.W    0
000017CA                          1262  
000017CA                          1263  ; RUN BUTTON SDB
000017CA                          1264  
000017CA= 000A                    1265  GOLRUNBT    DC.W    BTLVEMRG                ; YTOP
000017CC= 00D2                    1266              DC.W    1*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
000017CE= 0028                    1267              DC.W    BTLVERSZ                ; HEIGHT
000017D0= 00B4                    1268              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
000017D2                          1269  ; TODO: PLACE THE CALLBACK HERE
000017D2= 0000179E                1270              DC.L    GOLTORUN                ; CALLBACK(GOL.X68)
000017D6= 52 55 4E 00             1271              DC.B    'RUN',0                 ; TEXT
000017DA                          1272              DS.W    0
000017DA                          1273  
000017DA                          1274  ; STOP BUTTON SDB
000017DA                          1275  
000017DA= 000A                    1276  GOLSTPBT    DC.W    BTLVEMRG                ; YTOP
000017DC= 019A                    1277              DC.W    2*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
000017DE= 0028                    1278              DC.W    BTLVERSZ                ; HEIGHT
000017E0= 00B4                    1279              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
000017E2                          1280  ; TODO: PLACE THE CALLBACK HERE
000017E2= 000017AE                1281              DC.L    GOLTOPAU                ; CALLBACK(GOL.X68)
000017E6= 53 54 4F 50 00          1282              DC.B    'STOP',0                ; TEXT
000017EC                          1283              DS.W    0
000017EC                          1284  
000017EC                          1285  ; STEP BUTTON SDB
000017EC                          1286  
000017EC= 000A                    1287  GOLSTEBT    DC.W    BTLVEMRG                ; YTOP
000017EE= 0262                    1288              DC.W    3*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
000017F0= 0028                    1289              DC.W    BTLVERSZ                ; HEIGHT
000017F2= 00B4                    1290              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
000017F4                          1291  ; TODO: PLACE THE CALLBACK HERE
000017F4= 00001450                1292              DC.L    GRDRUPD                 ; CALLBACK(GRID.X68)
000017F8= 53 54 45 50 00          1293              DC.B    'STEP',0                ; TEXT
000017FE                          1294              DS.W    0
000017FE                          1295  
000017FE                          1296  ; LOAD LEFT BUTTON SDB
000017FE                          1297  
000017FE= 003C                    1298  GOLLLFBT    DC.W    2*BTLVEMRG+BTLVERSZ     ; YTOP
00001800= 000A                    1299              DC.W    0*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001802= 0028                    1300              DC.W    BTLVERSZ                ; HEIGHT
00001804= 00B4                    1301              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001806                          1302  ; TODO: PLACE THE CALLBACK HERE
00001806= 000015A6                1303              DC.L    GRDLLEFT                ; CALLBACK(GRID.X68)
0000180A= 4C 4F 41 44 20 4C ...   1304              DC.B    'LOAD LEFT',0           ; TEXT
00001814                          1305              DS.W    0
00001814                          1306  
00001814                          1307  ; LOAD RIGHT BUTTON SDB
00001814                          1308  
00001814= 003C                    1309  GOLLRTBT    DC.W    2*BTLVEMRG+BTLVERSZ     ; YTOP
00001816= 00D2                    1310              DC.W    1*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001818= 0028                    1311              DC.W    BTLVERSZ                ; HEIGHT
0000181A= 00B4                    1312              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
0000181C                          1313  ; TODO: PLACE THE CALLBACK HERE
0000181C= 0000160E                1314              DC.L    GRDLRGT                 ; CALLBACK(GRID.X68)
00001820= 4C 4F 41 44 20 52 ...   1315              DC.B    'LOAD RIGHT',0          ; TEXT
0000182C                          1316              DS.W    0
0000182C                          1317  
0000182C                          1318  ; LOAD ALL BUTTON SDB
0000182C                          1319  
0000182C= 003C                    1320  GOLLOABT    DC.W    2*BTLVEMRG+BTLVERSZ     ; YTOP
0000182E= 019A                    1321              DC.W    2*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001830= 0028                    1322              DC.W    BTLVERSZ                ; HEIGHT
00001832= 00B4                    1323              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
00001834                          1324  ; TODO: PLACE THE CALLBACK HERE
00001834= 00001506                1325              DC.L    GRDLOAD                 ; CALLBACK(GRID.X68)
00001838= 4C 4F 41 44 20 41 ...   1326              DC.B    'LOAD ALL',0            ; TEXT
00001842                          1327              DS.W    0
00001842                          1328  
00001842                          1329  ; SAVE BUTTON SDB
00001842                          1330  
00001842= 003C                    1331  GOLSAVBT    DC.W    2*BTLVEMRG+BTLVERSZ     ; YTOP
00001844= 0262                    1332              DC.W    3*(SCRWIDTH/4)+BTLHOMRG ; XLEFT
00001846= 0028                    1333              DC.W    BTLVERSZ                ; HEIGHT
00001848= 00B4                    1334              DC.W    SCRWIDTH/4-2*BTLHOMRG   ; WIDTH
0000184A                          1335  ; TODO: PLACE THE CALLBACK HERE
0000184A= 0000145A                1336              DC.L    GRDSAVE                 ; CALLBACK (GRID.X68)
0000184E= 53 41 56 45 00          1337              DC.B    'SAVE',0                ; TEXT
00001854                          1338              DS.W    0
00001854                          1339  
00001854                          1340  -------------------- end include --------------------
00001854                          1341  
00001854                          1342  ; --- INITIALIZE --------------------------------------------------------------
00001854                          1343  
00001854  4EB8 1000               1344  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM CODE
00001858  4EB8 16A6               1345              JSR     GOLINIT                 ; INITIALIZE GAME OF LIFE
0000185C                          1346  
0000185C                          1347  ; --- UPDATE ------------------------------------------------------------------
0000185C                          1348  
0000185C  4E41                    1349  .LOOP       TRAP    #MOUTRAP                ; READ MOUSE
0000185E  4EB8 1700               1350              JSR     GOLUPD                  ; UPDATE APPLICATION
00001862                          1351  
00001862                          1352  ; --- PLOT --------------------------------------------------------------------
00001862                          1353  
00001862  4EB8 172C               1354              JSR     GOLPLOT                 ; PLOT APPLICATION
00001866  4E40                    1355              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001868  60F2                    1356              BRA     .LOOP
0000186A  FFFF FFFF               1357              SIMHALT
0000186E                          1358  
0000186E                          1359  ; --- VARIABLES ---------------------------------------------------------------
0000186E                          1360  
0000186E                          1361              INCLUDE "SYSVAR.X68"            ; SYSTEM VARIABLES
0000186E                          1362  ; =============================================================================
0000186E                          1363  ; TITLE    : SYSTEM VARS
0000186E                          1364  ; AUTHOR   : ANTONI BURGUERA
0000186E                          1365  ; HISTORY  : 05-JULY-2021 - CREATION
0000186E                          1366  ; COMMENTS : * ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
0000186E                          1367  ;              THEY MUST NOT BE IN PROTECTED MEMORY.
0000186E                          1368  ;
0000186E                          1369  ;            * SINCE SOME SUBROUTINES TAKE ADVANTAGE OF THE ORDER IN WHICH
0000186E                          1370  ;              THE VARIABLES ARE IN MEMORY, THEIR ORDER SHOULD NOT BE ALTERED.
0000186E                          1371  ; =============================================================================
0000186E                          1372  
0000186E                          1373  ; --- MOUSE RELATED VARIABLES -------------------------------------------------
0000186E                          1374  
0000186E                          1375  MOUY        DS.W    1                       ; MOUSE Y COORDINATE
00001870                          1376  MOUX        DS.W    1                       ; MOUSE X COORDINATE
00001872                          1377  MOUVAL      DS.B    1                       ; CURRENT MOUSE BUTTON STATUS
00001873                          1378  MOUEDGE     DS.B    1                       ; RISING EDGES IN MOUVAL
00001874                          1379              DS.W    0
00001874                          1380  -------------------- end include --------------------
00001874                          1381              INCLUDE "VAR.X68"               ; USER VARIABLES
00001874                          1382  ; =============================================================================
00001874                          1383  ; TITLE    : USER VARS
00001874                          1384  ; AUTHOR   : ANTONI BURGUERA
00001874                          1385  ; HISTORY  : 05-JULY-2021 - CREATION
00001874                          1386  ; COMMENTS : SEE THE CORRESPONDING FILES (UTIL.X68, BTNLIST.X68, GRID.X68 OR
00001874                          1387  ;            GOL.X68) TO LEARN ABOUT THE MEANING OF THESE VARIABLES.
00001874                          1388  ; =============================================================================
00001874                          1389  
00001874                          1390  ; --- UTILITY VARS ------------------------------------------------------------
00001874                          1391  
00001874                          1392  UTLRNDIX    DS.B    1                       ; RANDOM GENERATOR INDEX
00001876                          1393              DS.W    0
00001876                          1394  
00001876                          1395  ; --- BUTTON LIST -------------------------------------------------------------
00001876                          1396  
00001876                          1397  BTLDATA     DS.B    BTLMXVDB*BTNSZVDB       ; BUTTONS VDB STORAGE
000018B2                          1398              DS.W    0
000018B2                          1399  
000018B2                          1400  ; --- GRID --------------------------------------------------------------------
000018B2                          1401  
000018B2                          1402  GRDSRC      DS.L    1                       ; SOURCE MATRIX POINTER
000018B6                          1403  GRDDST      DS.L    1                       ; DESTINATION MATRIX POINTER
000018BA                          1404  GRDMATR0    DS.B    GRDWIDTH*GRDHEIGH       ; ONE OF THE GRIDS...
000020BA                          1405  GRDMATR1    DS.B    GRDWIDTH*GRDHEIGH       ; THE OTHER GRID
000028BA                          1406  GRDNPLR1    DS.W    1                       ; NUMBER OF PLAYER 1 CELLS
000028BC                          1407  GRDNPLR2    DS.W    1                       ; NUMBER OF PLAYER 2 CELLS
000028BE                          1408  GRDNGEN     DS.W    1                       ; NUMOER OF GENERATIONS
000028C0                          1409  
000028C0                          1410  ; --- APPLICATION -------------------------------------------------------------
000028C0                          1411  
000028C0                          1412  GOLSTATE    DS.B    1                       ; APPLICATION STATE
000028C2                          1413              DS.W    0
000028C2                          1414  -------------------- end include --------------------
000028C2                          1415  
000028C2                          1416              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BTLADD              138C
BTLADD:END          13AA
BTLADD:FOUND        13B0
BTLADD:LOOP         139A
BTLCLEAR            136C
BTLDATA             1876
BTLHOMRG            A
BTLINIT             136C
BTLINIT:LOOP        137A
BTLMXVDB            A
BTLPLOT             13DE
BTLPLOT:DONE        1400
BTLPLOT:LOOP        13EC
BTLUPD              13B6
BTLUPD:DONE         13D8
BTLUPD:LOOP         13C4
BTLVEMRG            A
BTLVERSZ            28
BTNINIT             1208
BTNPENCL            5500
BTNPENWD            4
BTNPLOT             12AC
BTNPLOT:DONE        1348
BTNPLOT:LOOP        133A
BTNPLOT:MOUFUERA    12F6
BTNPLOT:MOUPRESIONADO  12E6
BTNPLOT:SALIR       12FE
BTNPRSCL            6600
BTNSELCL            AA00
BTNSZVDB            6
BTNUPD              1218
BTNUPD:CALLBACK     129E
BTNUPD:CHECKLEFTX   1242
BTNUPD:CHECKLWY     124C
BTNUPD:CHECKRTX     125A
BTNUPD:CLEARSTUS    1296
BTNUPD:RT           12A6
BTNUPD:UPTI         1268
CHRHEIGH            10
CHRSHHEI            4
CHRSHWID            3
CHRWIDTH            8
CLRBLACK            0
CLRDKGRN            5500
CLRLTBLU            FF0000
CLRLTGRN            AA00
CLRLTRED            FF
CLRMDGRN            6600
CLRWHITE            FFFFFF
GOLCLRBT            17B8
GOLDORUN            1734
GOLDORUN:DOIT       1776
GOLDORUN:NOSOUND    1770
GOLDORUN:P1WINS     1780
GOLDORUN:P2WINS     178B
GOLDORUN:PLAYSOUND  176A
GOLDORUN:TIE        1796
GOLINIT             16A6
GOLINIT:END         16CE
GOLINIT:LOOP        16BC
GOLINIT:SDBLIST     16DC
GOLLLFBT            17FE
GOLLOABT            182C
GOLLRTBT            1814
GOLMAXGN            FA
GOLPLOT             172C
GOLRUNBT            17CA
GOLSAVBT            1842
GOLSEXEC            1
GOLSPAUS            0
GOLSTATE            28C0
GOLSTEBT            17EC
GOLSTPBT            17DA
GOLTOPAU            17AE
GOLTORUN            179E
GOLUPD              1700
GOLUPD:JMPTBL       1724
GRDCOLP1            FF0000
GRDCOLP2            FF
GRDDST              18B6
GRDHEIGH            20
GRDINIT             1406
GRDINIT:LOOP        143A
GRDLLEFT            15A6
GRDLLEFT:END        15E2
GRDLLEFT:FILTER     1608
GRDLLEFT:MSG        15EE
GRDLOAD             1506
GRDLOAD:COPY        1562
GRDLOAD:END         157A
GRDLOAD:FILTER      15A0
GRDLOAD:LOOP        1550
GRDLOAD:MSG         1586
GRDLRGT             160E
GRDLRGT:FILTER      1638
GRDLRGT:MSG         161E
GRDMATR0            18BA
GRDMATR1            20BA
GRDMSHEI            1F
GRDMSWID            3F
GRDMUPD             1446
GRDNGEN             28BE
GRDNPLR1            28BA
GRDNPLR2            28BC
GRDPLOT             163E
GRDPLOT:LOOPCLMS    1688
GRDPLOT:LOOPROWS    1674
GRDPXHEI            180
GRDPXWID            300
GRDRUPD             1450
GRDSAVE             145A
GRDSAVE:END         14DA
GRDSAVE:FILTER      1500
GRDSAVE:LOOP        14A8
GRDSAVE:LOOPY       14A4
GRDSAVE:MSG         14E6
GRDSCNGX            30
GRDSCNGY            9
GRDSCP1X            2
GRDSCP1Y            9
GRDSCP2X            5E
GRDSCP2Y            9
GRDSHHEI            5
GRDSHWID            6
GRDSRC              18B2
GRDSZCEL            C
GRDVEMRG            6E
GRDWIDTH            40
GRDXOFF             10
GRDYOFF             9E
MOUBITLF            0
MOUBITMD            2
MOUBITRT            1
MOUEDGE             1873
MOUINIT             1020
MOUMSKLF            1
MOUMSKMD            4
MOUMSKRT            2
MOUREAD             1054
MOUTRAP             1
MOUVAL              1872
MOUX                1870
MOUY                186E
SCRHEIGH            258
SCRINIT             107E
SCRTRAP             0
SCRUPD              10B6
SCRWIDTH            320
START               1854
START:LOOP          185C
SYSINIT             1000
UTLINIT             10D0
UTLRAND             10EA
UTLRAND:RANDVEC     1108
UTLRNDIX            1874
UTLSTRLN            10D8
UTLSTRLN:END        10E6
UTLSTRLN:LOOP       10DC
