000013E0 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 10/01/2022 0:26:37

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : GAME OF LIFE APPLICATION
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; CREATION : 05-JULY-2021
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; TITLE    : SYSTEM CONSTANTS
00001000                            14  ; AUTHOR   : ANTONI BURGUERA
00001000                            15  ; HISTORY  : 05-JULY-2021 - CREATION
00001000                            16  ; COMMENTS : * MOUVAL AND MOUEDGE FORMAT IS AS FOLLOWS:
00001000                            17  ;              +---+---+---+---+---+---+---+---+
00001000                            18  ;              | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            19  ;              +---+---+---+---+---+---+---+---+
00001000                            20  ;              \-------------------/ |   |   |
00001000                            21  ;                        |           |   |   +-- LEFT MOUSE BUTTON
00001000                            22  ;                        |           |   +------ RIGHT MOUSE BUTTON
00001000                            23  ;                        |           +---------- CENTRAL MOUSE BUTTON
00001000                            24  ;                        +---------------------- 0
00001000                            25  ;              A "1" IN ONE OF THESE BITS IN MOUVAL MEANS "BUTTON PRESSED".
00001000                            26  ;              A "0" IN ONE OF THESE BITS IN MOUVAL MEANS "BUTTON NOT PRESSED".
00001000                            27  ;              A "1" IN ONE OF THESE BITS IN MOUEDGE MEANS "BUTTON CLICKED".
00001000                            28  ;              A "0" IN ONE OF THESE BITS IN MOUEDGE MEANS "BUTTON NOT CLICKED".
00001000                            29  ;              A "CLICK" IS A CHANGE FROM 0 TO 1 IN SUBSEQUENT UPDATES.
00001000                            30  ;              BOTH MOUVEL AND MOUEDGE ARE UPDATED BY TRAP #MOUTRAP
00001000                            31  ;
00001000                            32  ;            * MASKS AND BIT POSITIONS ARE DEFINED TO EASE MOUSE ACCESS. FOR
00001000                            33  ;              EXAMPLE, ONE CAN DO THE FOLLOWING TO CHECK IF THE LEFT BUTTON
00001000                            34  ;              IS PRESSED:
00001000                            35  ;
00001000                            36  ;              BTST.L #MOUBITLF,(MOUVAL)
00001000                            37  ;              BNE ...
00001000                            38  ;
00001000                            39  ;              ALTERNATIVELY, ONE CAN ALSO DO THE FOLLOWING DEPENDING ON THE
00001000                            40  ;              CONTEXT:
00001000                            41  ;
00001000                            42  ;              MOVE.B  (MOUVAL),D0
00001000                            43  ;              AND.B   #MOUMSKLF,D0
00001000                            44  ;              BNE ...
00001000                            45  ; =============================================================================
00001000                            46  
00001000                            47  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            48  
00001000  =00000000                 49  SCRTRAP     EQU     0                       ; SCREEN REFRESH TRAP NUMBER
00001000  =00000320                 50  SCRWIDTH    EQU     800                     ; SCREEN WIDTH (PIXELS)
00001000  =00000258                 51  SCRHEIGH    EQU     600                     ; SCREEN HEIGHT (PIXELS)
00001000                            52  
00001000                            53  ; --- MOUSE RELATED CONSTANTS -------------------------------------------------
00001000                            54  
00001000  =00000001                 55  MOUTRAP     EQU     1                       ; MOUSE QUERY TRAP NUMBER
00001000  =00000001                 56  MOUMSKLF    EQU     %00000001               ; LEFT MOUSE BUTTON MASK
00001000  =00000002                 57  MOUMSKRT    EQU     %00000010               ; RIGHT MOUSE BUTTON MASK
00001000  =00000004                 58  MOUMSKMD    EQU     %00000100               ; MIDDLE MOUSE BUTTON MASL
00001000  =00000000                 59  MOUBITLF    EQU     0                       ; LEFT MOUSE BUTTON BIT POSITION
00001000  =00000001                 60  MOUBITRT    EQU     1                       ; RIGHT MOUSE BUTTON BIT POSITION
00001000  =00000002                 61  MOUBITMD    EQU     2                       ; MIDDLE MOUSE BUTTON BIT POSITION
00001000  =00000002                 62  -------------------- end include --------------------
00001000                            63              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            64  ; =============================================================================
00001000                            65  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            66  ; AUTHOR   : ANTONI BURGUERA
00001000                            67  ; HISTORY  : 05-JULY-2021 - CREATION
00001000                            68  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                            69  ;            - SYS : GENERIC.
00001000                            70  ;            - SCR : SCREEN MANAGEMENT.
00001000                            71  ;            - MOU : MOUSE MANAGEMENT
00001000                            72  ;            THE FORMAT OF MOUVAL AND MOUEDGE IS DESCRIBED IN SYSCONST.
00001000                            73  ; =============================================================================
00001000                            74  
00001000                            75  ; -----------------------------------------------------------------------------
00001000                            76  SYSINIT
00001000                            77  ; INITIALIZES THE SYSTEM AS FOLLOWS:
00001000                            78  ; * DISABLES INTERRUPTS
00001000                            79  ; * CALLS SCRINIT
00001000                            80  ; * CALLS MOUINIT
00001000                            81  ; * ENABLES SIMULATOR EXCEPTION PROCESSING
00001000                            82  ; * SWITCHES TO USER
00001000                            83  ; INPUT    - NONE
00001000                            84  ; OUTPUT   - NONE
00001000                            85  ; MODIFIES - NONE
00001000                            86  ; NOTE     - NOTE THAT INTERRUPTS REMAIN DISABLED AFTER THIS SUBROUTINE
00001000                            87  ; -----------------------------------------------------------------------------
00001000                            88              
00001000                            89              
00001000  007C 0700                 90              OR.W    #$0700,SR               ; Disables interrupts
00001004  4EB9 0000107E             91              JSR     SCRINIT                 ; Calls to SCRINIT
0000100A  4EB9 00001020             92              JSR     MOUINIT                 ; Calls to MOUINIT
00001010  103C 0020                 93              MOVE.B  #32,D0                  ; Enable exception processing
00001014  123C 0005                 94              MOVE.B  #5,D1                   
00001018  4E4F                      95              TRAP    #15                      
0000101A  46FC 2000                 96              MOVE    #$2000,SR               ; Switches to user 
0000101E                            97              
0000101E  4E75                      98              RTS
00001020                            99  
00001020                           100  ; =============================================================================
00001020                           101  ; MOUSE MANAGEMENT (SYSTEM CODE)
00001020                           102  ; =============================================================================
00001020                           103  
00001020                           104  ; -----------------------------------------------------------------------------
00001020                           105  MOUINIT
00001020                           106  ; INITIALIZES MOUSE AS FOLLOWS:
00001020                           107  ; * STORES CURRENT MOUSE POSITION AND BUTTON STATUS INTO MOUY, MOUX AND MOUVAL
00001020                           108  ; * CLEARS MOUEDGE
00001020                           109  ; * INSTALLS MOUREAD INTO TRAP #MOUTRAP
00001020                           110  ; INPUT    - NONE
00001020                           111  ; OUTPUT   - NONE
00001020                           112  ; MODIFIES - ALL REGISTERS CAN BE MODIFIED
00001020                           113  ; -----------------------------------------------------------------------------
00001020                           114  
00001020  103C 003D                115              MOVE.B  #61, D0
00001024  123C 0000                116              MOVE.B  #0, D1
00001028  4E4F                     117              TRAP    #15
0000102A  C0BC 00000007            118              AND.L   #7, D0
00001030  13C0 000014E0            119              MOVE.B  D0, MOUVAL
00001036  33C1 000014DE            120              MOVE.W  D1, MOUX
0000103C  4841                     121              SWAP    D1
0000103E  33C1 000014DC            122              MOVE.W  D1, MOUY            
00001044  4239 000014E1            123              CLR.B   MOUEDGE                 ; clears MOUEDGE
0000104A  21FC 00001054 0084       124              MOVE.L  #MOUREAD,($80+MOUTRAP*4) ;Installs mouread into moutrap
00001052                           125              
00001052  4E75                     126              RTS
00001054                           127  
00001054                           128  ; -----------------------------------------------------------------------------
00001054                           129  MOUREAD
00001054                           130  ; MOUSE READING TRAP SERVICE ROUTINE. IT DOES THE FOLLOWING:
00001054                           131  ; * STORES CURRENT MOUSE POSITION INTO MOUY AND MOUX.
00001054                           132  ; * STORES CURRENT BUTTON STATUS INTO MOUVAL
00001054                           133  ; * COMPUTES AND STORES MOUEDGE
00001054                           134  ; INPUT    - NONE
00001054                           135  ; OUTPUT   - NONE
00001054                           136  ; MODIFIES - NONE
00001054                           137  ; -----------------------------------------------------------------------------
00001054                           138                         
00001054  303C 003D                139              MOVE.W  #61,D0
00001058  4281                     140              CLR.L   D1
0000105A  4E4F                     141              TRAP    #15
0000105C  23C1 000014DC            142              MOVE.L  D1,(MOUY)               ; STORES CURRENT POS TO MOUX/Y
00001062  C03C 0007                143              AND.B   #7,D0                   ; AND TO GET ONLY THE LAST 3 BITS
00001066  1439 000014E0            144              MOVE.B  (MOUVAL),D2             ; COMPUTE EDGE
0000106C  4602                     145              NOT.B   D2                      ; EDGE=NOT(PREVIOUS) AND CURRENT
0000106E  C400                     146              AND.B   D0,D2
00001070  13C0 000014E0            147              MOVE.B  D0,(MOUVAL)             ; STORES MOUSE STATUS TO MOUVAL 
00001076  13C2 000014E1            148              MOVE.B  D2,(MOUEDGE)            ; STORES MOUEDGE
0000107C                           149                  
0000107C  4E73                     150              RTE
0000107E                           151  
0000107E                           152  ; =============================================================================
0000107E                           153  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000107E                           154  ; =============================================================================
0000107E                           155  
0000107E                           156  ; -----------------------------------------------------------------------------
0000107E                           157  SCRINIT
0000107E                           158  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS AS FOLLOWS:
0000107E                           159  ; * INSTALLS SCRUPD INTO TRAP #SCRTRAP
0000107E                           160  ; * SETS OUTPUT RESOLUTION TO SCRWIDTH*SCRHEIGH
0000107E                           161  ; * SETS OUTPUT TO WINDOWED MODE
0000107E                           162  ; * ENABLES DOUBLE BUFFER AND CLEARS BOTH SCREEN BUFFERS
0000107E                           163  ; INPUT    - NONE
0000107E                           164  ; OUTPUT   - NONE
0000107E                           165  ; MODIFIES - ALL REGISTERS CAN BE MODIFIED
0000107E                           166  ; -----------------------------------------------------------------------------
0000107E  21FC 000010B6 0080       167              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001086  223C 03200258            168              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000108C  103C 0021                169              MOVE.B  #33,D0
00001090  4E4F                     170              TRAP    #15
00001092  7201                     171              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001094  4E4F                     172              TRAP    #15
00001096  323C FF00                173              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000109A  103C 000B                174              MOVE.B  #11,D0
0000109E  4E4F                     175              TRAP    #15
000010A0  123C 0011                176              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
000010A4  103C 005C                177              MOVE.B  #92,D0
000010A8  4E4F                     178              TRAP    #15
000010AA  323C FF00                179              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010AE  103C 000B                180              MOVE.B  #11,D0
000010B2  4E4F                     181              TRAP    #15
000010B4  4E75                     182              RTS
000010B6                           183  
000010B6                           184  ; -----------------------------------------------------------------------------
000010B6                           185  SCRUPD
000010B6                           186  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
000010B6                           187  ; BUFFER FOR THE NEXT ONE. PERFORMS TWO TASKS:
000010B6                           188  ; * CLEARS ACTIVE (HIDDEN) GRAPHICS BUFFER
000010B6                           189  ; * SWITCHES ACTIVE AND VISIBLE GRAPHICS BUFFER
000010B6                           190  ; INPUT    - NONE
000010B6                           191  ; OUTPUT   - NONE
000010B6                           192  ; MODIFIES - NONE
000010B6                           193  ; -----------------------------------------------------------------------------
000010B6  48A7 C000                194              MOVEM.W D0-D1,-(A7)
000010BA  103C 005E                195              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010BE  4E4F                     196              TRAP    #15
000010C0  323C FF00                197              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010C4  103C 000B                198              MOVE.B  #11,D0
000010C8  4E4F                     199              TRAP    #15
000010CA  4C9F 0003                200              MOVEM.W (A7)+,D0-D1
000010CE  4E73                     201              RTE
000010D0                           202  
000010D0                           203  
000010D0                           204  
000010D0                           205  
000010D0                           206  
000010D0                           207  
000010D0                           208  -------------------- end include --------------------
000010D0                           209              INCLUDE "CONST.X68"             ; USER CONSTANTS
000010D0                           210  ; =============================================================================
000010D0                           211  ; TITLE    : USER CONSTANTS
000010D0                           212  ; AUTHOR   : ANTONI BURGUERA
000010D0                           213  ; HISTORY  : 05-JULY-2021 - CREATION
000010D0                           214  ; COMMENTS : * MOST OF THE CONSTANTS HELP IN PRODUCING A CLEAN CODE
000010D0                           215  ;              IN ACCORDANCE TO THE ASSIGNMENT SPECS, THOUGH THEIR USE IS
000010D0                           216  ;              NOT MANDATORY AS LONG AS THE ASSIGNMENT SPECS ARE FOLLOWED.
000010D0                           217  ;
000010D0                           218  ;            * THE UICOLORS ARE THE BASIC USER INTERFACE COLORS. USING THEM
000010D0                           219  ;              WILL LEAD TO A VISUALLY CONSISTENT USER INTERFACE.
000010D0                           220  ;
000010D0                           221  ;            * THE CHARACTER SIZES SPECIFY WIDTH AND HEIGHT IN PIXELS OF THE
000010D0                           222  ;              TEXT CHARACTERS. THIS SIZE DEPENDS ON THE SYSTEM (WINDOWS) FONTS
000010D0                           223  ;              AND CAN CHANGE FROM ONE COMPUTER TO ANOTHER. FEEL FREE TO ADAPT
000010D0                           224  ;              THEM TO YOUR OWN COMPUTER.
000010D0                           225  ;
000010D0                           226  ;            * CHARACTER SIZES ARE SPECIFIED AS AN EXPONENT AND THE SIZE ITSELF
000010D0                           227  ;              THE EXPONENT IS USEFUL TO MULTIPLY/DIVIDE, WHEN NECESSARY,
000010D0                           228  ;              USING SHIFTS. DEPENDING ON YOUR SYSTEM (WINDOWS) FONTS, CHAR
000010D0                           229  ;              SIZES MAY NOT BE POWER OF TWO. IF THIS IS THE CASE, DO YOUR BEST
000010D0                           230  ;              TO AVOID MULU AND DIVU.
000010D0                           231  ;
000010D0                           232  ;            * MOST OF THE GRD CONSTANTS ARE EXPRESSIONS TO EASE TESTING
000010D0                           233  ;              DIFFERENT RESOLUTIONS. IF TESTS WITH OTHER RESOLUTIONS ARE
000010D0                           234  ;              PERFORMED, TAKE INTO ACCOUNT THAT ALL EXPRESSIONS MUST EVALUATE
000010D0                           235  ;              TO INTEGER. IF THEY DON'T, UNEXPECTED RESULTS CAN HAPPEN.
000010D0                           236  ; =============================================================================
000010D0                           237  
000010D0                           238  ; --- UI COLORS ---------------------------------------------------------------
000010D0                           239  
000010D0  =00000000                240  CLRBLACK    EQU     $00000000               ; BLACK
000010D0  =00FFFFFF                241  CLRWHITE    EQU     $00FFFFFF               ; WHITE
000010D0  =00005500                242  CLRDKGRN    EQU     $00005500               ; DARK GREEN
000010D0  =00006600                243  CLRMDGRN    EQU     $00006600               ; MEDIUN GREEN
000010D0  =0000AA00                244  CLRLTGRN    EQU     $0000AA00               ; LIGHT GREEN
000010D0  =00FF0000                245  CLRLTBLU    EQU     $00FF0000               ; LIGHT BLUE
000010D0  =000000FF                246  CLRLTRED    EQU     $000000FF               ; LIGHT RED
000010D0                           247  
000010D0                           248  ; --- CHARACTER SIZES ---------------------------------------------------------
000010D0                           249  
000010D0  =00000004                250  CHRSHHEI    EQU     4                       ; CHARACTER HEIGHT AS EXPONENT OF 2
000010D0  =00000003                251  CHRSHWID    EQU     3                       ; CHARACTER WIDTH AS EXPONENT OF 2
000010D0  =00000010                252  CHRHEIGH    EQU     1<<CHRSHHEI             ; CHARACTER HEIGHT
000010D0  =00000008                253  CHRWIDTH    EQU     1<<CHRSHWID             ; CHARACTER WIDTH
000010D0                           254  
000010D0                           255  ; --- BUTTON ------------------------------------------------------------------
000010D0                           256  
000010D0  =00000004                257  BTNPENWD    EQU     4                       ; BUTTON LINE WIDTH
000010D0  =00005500                258  BTNPENCL    EQU     CLRDKGRN                ; BUTTON LINE COLOR
000010D0  =0000AA00                259  BTNSELCL    EQU     CLRLTGRN                ; BUTTON SELECTED FILL COLOR
000010D0  =00006600                260  BTNPRSCL    EQU     CLRMDGRN                ; BUTTON PRESSED FILL COLOR
000010D0  =00000006                261  BTNSZVDB    EQU     6                       ; SIZE (BYTES) OF VDB
000010D0                           262  
000010D0                           263  ; --- BUTTON LIST -------------------------------------------------------------
000010D0                           264  
000010D0  =0000000A                265  BTLMXVDB    EQU     10                      ; SIZE OF THE BUTTON LIST (ITEMS)
000010D0  =00000028                266  BTLVERSZ    EQU     40                      ; HEIGHT OF BUTTONS
000010D0  =0000000A                267  BTLVEMRG    EQU     10                      ; VERTICAL VISUAL MARGIN (TOP&BOT)
000010D0  =0000000A                268  BTLHOMRG    EQU     10                      ; HORIZONTAL VISUAL MARGIN (L & R)
000010D0                           269  
000010D0                           270  ; --- APPLICATION -------------------------------------------------------------
000010D0                           271  
000010D0  =00000000                272  GOLSPAUS    EQU     0                       ; PAUSED STATE
000010D0  =00000001                273  GOLSEXEC    EQU     1                       ; EXECUTION STATE
000010D0  =000000FA                274  GOLMAXGN    EQU     250                     ; MAXIMUM NUMBER OF GENERATIONS
000010D0                           275  
000010D0                           276  ; --- GRID --------------------------------------------------------------------
000010D0                           277  
000010D0  =00FF0000                278  GRDCOLP1    EQU     CLRLTBLU                ; PLAYER 1 COLOR
000010D0  =000000FF                279  GRDCOLP2    EQU     CLRLTRED                ; PLAYER 2 COLOR
000010D0  =00000006                280  GRDSHWID    EQU     6                       ; SHIFT TO ACHIEVE GRDWIDTH
000010D0  =00000005                281  GRDSHHEI    EQU     5                       ; SHIFT TO ACHIEVE GRDHEIGH
000010D0  =00000040                282  GRDWIDTH    EQU     1<<GRDSHWID             ; NUMBER OF GRID COLUMNS
000010D0  =00000020                283  GRDHEIGH    EQU     1<<GRDSHHEI             ; NUMBER OF ROWS
000010D0  =0000003F                284  GRDMSWID    EQU     GRDWIDTH-1              ; MASK TO GET X FROM GRID OFFSET
000010D0  =0000001F                285  GRDMSHEI    EQU     GRDHEIGH-1              ; MASK TO GET Y FROM GRID OFFSET
000010D0  =00000300                286  GRDPXWID    EQU     768                     ; GRID DISPLAY WIDTH (PIXELS)
000010D0  =00000180                287  GRDPXHEI    EQU     GRDHEIGH*GRDPXWID/GRDWIDTH ; GRID DISPLAY HEIGHT (PIXELS)
000010D0  =0000000C                288  GRDSZCEL    EQU     GRDPXWID/GRDWIDTH       ; GRID CELL SIZE (PIXELS)
000010D0  =0000006E                289  GRDVEMRG    EQU     3*BTLVEMRG+2*BTLVERSZ   ; TOP MARGIN (2 BUTTON ROWS)
000010D0  =00000010                290  GRDXOFF     EQU     (SCRWIDTH-GRDPXWID)/2   ; X OFFSETS TO DISPLAY CENTERED GRID
000010D0  =0000009E                291  GRDYOFF     EQU     (SCRHEIGH-GRDPXHEI+GRDVEMRG-BTLVEMRG)/2 ; Y OFFSET CENT. GRD
000010D0  =00000002                292  GRDSCP1X    EQU     GRDXOFF/CHRWIDTH        ; PLAYER 1 SCORE X (CHAR RESOL.)
000010D0  =00000009                293  GRDSCP1Y    EQU     GRDYOFF/CHRHEIGH        ; PLAYER 1 SCORE Y (CHAR RESOL.)
000010D0  =0000005E                294  GRDSCP2X    EQU     (GRDXOFF+GRDPXWID)/CHRWIDTH-4 ; PLAYER 2 SCORE X (CHAR RES.)
000010D0  =00000009                295  GRDSCP2Y    EQU     GRDYOFF/CHRHEIGH        ; PLAYER 2 SCORE Y (CHAR RESOL.)
000010D0  =00000030                296  GRDSCNGX    EQU     (SCRWIDTH/(CHRWIDTH*2))-2 ; NUM. GENER. X (CHAR RESOL.)
000010D0  =00000009                297  GRDSCNGY    EQU     GRDYOFF/CHRHEIGH        ; NUM. GENER. Y (CHAR RESOL.)
000010D0  =00000009                298  -------------------- end include --------------------
000010D0                           299              INCLUDE "UTIL.X68"              ; UTILITY CODE
000010D0                           300  ; =============================================================================
000010D0                           301  ; TITLE    : UTILITY SUBROUTINES
000010D0                           302  ; AUTHOR   : ANTONI BURGUERA
000010D0                           303  ; HISTORY  : 05-JULY-2021 - CREATION
000010D0                           304  ; COMMENTS : GENERAL PURPOSE SUBROUTINES.
000010D0                           305  ; =============================================================================
000010D0                           306  
000010D0                           307  ; -----------------------------------------------------------------------------
000010D0                           308  UTLINIT
000010D0                           309  ; INITIALIZES UTILITIES.
000010D0                           310  ; INPUT    : NONE
000010D0                           311  ; OUTPUT   : NONE
000010D0                           312  ; MODIFIES : NONE
000010D0                           313  ; -----------------------------------------------------------------------------
000010D0  4239 000014E2            314              CLR.B   (UTLRNDIX)
000010D6  4E75                     315              RTS
000010D8                           316  
000010D8                           317  ; -----------------------------------------------------------------------------
000010D8                           318  UTLSTRLN
000010D8                           319  ; COMPUTES THE LENGTH OF A ZERO-TERMINATED STRING
000010D8                           320  ; INPUT    - A1 POINTER TO THE STRING
000010D8                           321  ; OUTPUT   - D0.W STRING LENGTH
000010D8                           322  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010D8                           323  ; -----------------------------------------------------------------------------
000010D8  2F09                     324              MOVE.L  A1,-(A7)
000010DA  4240                     325              CLR.W   D0
000010DC  4A19                     326  .LOOP       TST.B   (A1)+
000010DE  6700 0006                327              BEQ     .END
000010E2  5240                     328              ADDQ.W  #1,D0
000010E4  60F6                     329              BRA     .LOOP
000010E6  225F                     330  .END        MOVE.L  (A7)+,A1
000010E8  4E75                     331              RTS
000010EA                           332  
000010EA                           333  ; -----------------------------------------------------------------------------
000010EA                           334  UTLRAND
000010EA                           335  ; PROVIDES A PSEUDO-RANDOM COIN FLIP (RETURNS 1 OR 2)
000010EA                           336  ; INPUT    - NONE
000010EA                           337  ; OUTPUT   - D1.L RANDOM VALUE (ONLY BYTE)
000010EA                           338  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010EA                           339  ; -----------------------------------------------------------------------------
000010EA  2F08                     340              MOVE.L  A0,-(A7)
000010EC  41F9 00001108            341              LEA     .RANDVEC,A0
000010F2  4281                     342              CLR.L   D1
000010F4  1239 000014E2            343              MOVE.B  (UTLRNDIX),D1
000010FA  1230 1800                344              MOVE.B  (A0,D1.L),D1
000010FE  5239 000014E2            345              ADDQ.B  #1,(UTLRNDIX)
00001104  205F                     346              MOVE.L  (A7)+,A0
00001106  4E75                     347              RTS
00001108                           348  
00001108= 02 02 02 02 01 02 ...    349  .RANDVEC    DC.B    2, 2, 2, 2, 1, 2, 1, 2
00001110= 01 01 01 02 01 01 ...    350              DC.B    1, 1, 1, 2, 1, 1, 1, 2
00001118= 02 01 02 01 01 02 ...    351              DC.B    2, 1, 2, 1, 1, 2, 2, 1
00001120= 02 01 02 01 01 01 ...    352              DC.B    2, 1, 2, 1, 1, 1, 1, 2
00001128= 02 02 01 01 02 02 ...    353              DC.B    2, 2, 1, 1, 2, 2, 1, 1
00001130= 02 01 02 02 02 01 ...    354              DC.B    2, 1, 2, 2, 2, 1, 1, 1
00001138= 02 02 01 01 01 01 ...    355              DC.B    2, 2, 1, 1, 1, 1, 1, 2
00001140= 01 01 01 02 01 02 ...    356              DC.B    1, 1, 1, 2, 1, 2, 1, 2
00001148= 02 02 02 02 01 02 ...    357              DC.B    2, 2, 2, 2, 1, 2, 1, 2
00001150= 01 01 02 02 02 01 ...    358              DC.B    1, 1, 2, 2, 2, 1, 2, 1
00001158= 02 02 02 01 01 02 ...    359              DC.B    2, 2, 2, 1, 1, 2, 1, 1
00001160= 01 02 01 01 01 02 ...    360              DC.B    1, 2, 1, 1, 1, 2, 1, 2
00001168= 01 02 02 01 02 01 ...    361              DC.B    1, 2, 2, 1, 2, 1, 2, 2
00001170= 01 02 01 02 01 01 ...    362              DC.B    1, 2, 1, 2, 1, 1, 2, 1
00001178= 01 02 01 01 01 01 ...    363              DC.B    1, 2, 1, 1, 1, 1, 1, 1
00001180= 02 01 01 02 01 01 ...    364              DC.B    2, 1, 1, 2, 1, 1, 1, 2
00001188= 02 01 01 01 01 02 ...    365              DC.B    2, 1, 1, 1, 1, 2, 1, 1
00001190= 01 01 02 01 01 02 ...    366              DC.B    1, 1, 2, 1, 1, 2, 1, 2
00001198= 02 02 01 01 02 02 ...    367              DC.B    2, 2, 1, 1, 2, 2, 2, 2
000011A0= 01 01 02 01 02 02 ...    368              DC.B    1, 1, 2, 1, 2, 2, 1, 2
000011A8= 01 02 01 02 02 02 ...    369              DC.B    1, 2, 1, 2, 2, 2, 2, 1
000011B0= 01 01 02 02 01 01 ...    370              DC.B    1, 1, 2, 2, 1, 1, 2, 1
000011B8= 02 02 01 02 01 02 ...    371              DC.B    2, 2, 1, 2, 1, 2, 1, 1
000011C0= 02 01 02 01 01 02 ...    372              DC.B    2, 1, 2, 1, 1, 2, 1, 2
000011C8= 01 01 02 02 02 01 ...    373              DC.B    1, 1, 2, 2, 2, 1, 1, 1
000011D0= 01 01 02 02 01 02 ...    374              DC.B    1, 1, 2, 2, 1, 2, 1, 2
000011D8= 01 02 01 01 01 02 ...    375              DC.B    1, 2, 1, 1, 1, 2, 1, 1
000011E0= 02 01 01 02 01 02 ...    376              DC.B    2, 1, 1, 2, 1, 2, 2, 2
000011E8= 02 01 01 01 02 02 ...    377              DC.B    2, 1, 1, 1, 2, 2, 1, 1
000011F0= 02 02 02 01 02 02 ...    378              DC.B    2, 2, 2, 1, 2, 2, 1, 2
000011F8= 01 02 01 01 02 01 ...    379              DC.B    1, 2, 1, 1, 2, 1, 2, 2
00001200= 02 02 02 01 01 01 ...    380              DC.B    2, 2, 2, 1, 1, 1, 1, 2
00001200= 02 02 02 01 01 01 ...    381  -------------------- end include --------------------
00001208                           382              INCLUDE "BUTTON.X68"            ; BUTTON MANAGEMENT
00001208                           383  ; =============================================================================
00001208                           384  ; TITLE    : BUTTON MANAGEMENT
00001208                           385  ; AUTHOR   : ANTONI BURGUERA
00001208                           386  ; HISTORY  : 05-JULY-2021 - CREATION
00001208                           387  ; COMMENTS : * A BUTTON IS DEFINED BY A STATIC DATA BLOCK (SDB), WHICH DOES NOT
00001208                           388  ;              CHANGE OVER TIME, AND A VARIABLE DATA BLOCK (VDB), THAT CAN
00001208                           389  ;              CHANGE OVER TIME. CHANGES IN THE VDB ARE PRODUCED WHEN CALLING
00001208                           390  ;              SUBROUTINE BTNUPD.
00001208                           391  ;
00001208                           392  ;            * THE BUTTON SDB (CAN BE IN ROM) HAS THE FOLLOWING FIELDS. THE
00001208                           393  ;              NUMBER DENOTES THE OFFSET WITH RESPECT TO THE SDB START:
00001208                           394  ;
00001208                           395  ;                +0  - WORD - YTOP COORDINATE (PIXELS)
00001208                           396  ;                +2  - WORD - XLEFT COORDINATE (PIXELS)
00001208                           397  ;                +4  - WORD - HEIGHT (PIXELS)
00001208                           398  ;                +6  - WORD - WIDTH (PIXELS)
00001208                           399  ;                +8  - LONG - CALLBACK POINTER
00001208                           400  ;                +12 - BYTE STRING - ZERO TERMINATED STRING. TEXT TO SHOW.
00001208                           401  ;
00001208                           402  ;            * THE BUTTON VDB (MUST BE IN RAM) IS:
00001208                           403  ;
00001208                           404  ;                +0 - LONG - POINTER TO THE STATIC DATABLOCK
00001208                           405  ;                +4 - BYTE - STATUS WITH FORMAT XXXXXCPI WHERE:
00001208                           406  ;                            - I (BIT 0) - 1=MOUSE INSIDE, 0=MOUSE OUTSIDE
00001208                           407  ;                            - P (BIT 1) - 1=MOUSE PRESSED INSIDE
00001208                           408  ;                                          0=MOUSE NOT PRESSED INSIDE
00001208                           409  ;                            - C (BIT 2) - 1=MOUSE CLICKED INSIDE
00001208                           410  ;                                          0=MOUSE NOT CLICKED INSIDE
00001208                           411  ;                            NOTE THAT IF I=0 THEN P=C=0, IF I=1 AND P=0
00001208                           412  ;                            THEN C=0.
00001208                           413  ; =============================================================================
00001208                           414  
00001208                           415  ; -----------------------------------------------------------------------------
00001208                           416  BTNINIT
00001208                           417  ; INITIALIZES THE BUTTON BY:
00001208                           418  ;  * COPYING THE SDB POINTER INTO THE VDB.
00001208                           419  ;  * CLEARING THE STATUS BYTE.
00001208                           420  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001208                           421  ;            A1 - POINTER TO THE STATIC DATABLOCK
00001208                           422  ; OUTPUT   : NONE
00001208                           423  ; MODIFIES : NONE
00001208                           424  ; -----------------------------------------------------------------------------
00001208                           425  
00001208  48E7 FFC0                426              MOVEM.L D0-D7/A0-A1,-(A7)       ; Save content registers
0000120C                           427              
0000120C  2089                     428              MOVE.L  A1,(A0)                 ; Copy SDB pointer into VDB
0000120E  4228 0004                429              CLR.B   4(A0)                   ; CLEAR STATUS BYTE(VDB)                
00001212                           430  
00001212  4CDF 03FF                431              MOVEM.L (A7)+,D0-D7/A0-A1       ; Restore content resgiters
00001216                           432              
00001216  4E75                     433              RTS
00001218                           434  
00001218                           435  ; -----------------------------------------------------------------------------
00001218                           436  BTNUPD
00001218                           437  ; UPDATES THE BUTTON VDB AND EXECUTES THE CALLBACK IF REQUIRED
00001218                           438  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001218                           439  ; OUTPUT   : NONE
00001218                           440  ; MODIFIES : NONE
00001218                           441  ; -----------------------------------------------------------------------------
00001218                           442              
00001218  48E7 FCE0                443              MOVEM.L D0-D5/A0-A2,-(A7)       ; Save content registers
0000121C                           444              
0000121C  117C 0000 0004           445              MOVE.B   #0,4(A0)               ; CLEAR STATUS BYTE
00001222  2250                     446              MOVE.L  (A0),A1                 ; COPY @ SDB OF BUTTON
00001224                           447              
00001224                           448              ; COPY MOUSE POSITION
00001224  3039 000014DC            449              MOVE.W  MOUY,D0                 ; COPY MOUSE Y POSITION
0000122A  3239 000014DE            450              MOVE.W  MOUX,D1                 ; COPY MOUSE X POSITION
00001230                           451              
00001230                           452              ; GET BUTTON POSITION
00001230  3419                     453              MOVE.W  (A1)+,D2                ; TOP Y
00001232  3619                     454              MOVE.W  (A1)+,D3                ; LEFT X
00001234  3819                     455              MOVE.W  (A1)+,D4                ; HEIGHT
00001236  3A19                     456              MOVE.W  (A1)+,D5                ; WIDTH  
00001238                           457              
00001238                           458              ; IF D2<D0 MOUSE NOT INSIDE (IS UPPER THAN THE BUTTON)
00001238  B042                     459              CMP.W   D2,D0
0000123A  6D00 004A                460              BLT     .MOUSEOUT
0000123E                           461              
0000123E                           462              ; IF D3<D1 MOUSE NOT INSIDE (IS ON THE LEFT SIDE)
0000123E  B243                     463              CMP.W   D3,D1
00001240  6D00 0044                464              BLT     .MOUSEOUT
00001244                           465              
00001244                           466              ; IF D4>D0 MOUSE NOT INSIDE (IS LOWER THAN THE BUTTON)
00001244  D842                     467              ADD.W   D2,D4
00001246  B044                     468              CMP.W   D4,D0
00001248  6E00 003C                469              BGT     .MOUSEOUT
0000124C                           470              
0000124C                           471              ; IF D5>D0 MOUSE NOT INSIDE (IS ON THE RIGHT SIDE)
0000124C  DA43                     472              ADD.W   D3,D5
0000124E  B245                     473              CMP.W   D5,D1
00001250  6E00 0034                474              BGT     .MOUSEOUT
00001254                           475  
00001254                           476              ; UPDATE VDB 
00001254  117C 0001 0004           477              MOVE.B  #1,4(A0)                ; I (BIT 0) = 1
0000125A  0839 0000 000014E0       478              BTST    #0,MOUVAL               ; BUTTON NOT PRESSED?
00001262  6700 0026                479              BEQ     .END                    ; BUTTON NOT PRESSED
00001266  117C 0003 0004           480              MOVE.B  #3,4(A0)                ; P (BIT 1) = 1
0000126C  0839 0000 000014E1       481              BTST    #0,MOUEDGE              ; BUTTON NOT CLICKED?
00001274  6700 0014                482              BEQ     .END                    ; BUTTON NOT CLICKED
00001278  117C 0007 0004           483              MOVE.B  #7,4(A0)                ; C (BIT 2) = 1
0000127E                           484              
0000127E                           485              ; EXECUTE CALLBACK
0000127E  2451                     486              MOVE.L  (A1),A2                 ; COPY @ CALLBACK
00001280  4E92                     487              JSR     (A2)                    ; JUMP TO CALLBACK SUBR
00001282  6000 0006                488              BRA     .END                    
00001286                           489              
00001286  4228 0004                490  .MOUSEOUT   CLR.B   4(A0)                   ; I,P,C = 0
0000128A                           491  
0000128A  4CDF 073F                492  .END        MOVEM.L (A7)+,D0-D5/A0-A2       ; Restore content resgiters
0000128E                           493             
0000128E  4E75                     494              RTS
00001290                           495  
00001290                           496  ; -----------------------------------------------------------------------------
00001290                           497  BTNPLOT
00001290                           498  ; PLOTS THE BUTTON. A RECTANGLE IS DRAWN WITH THICKNESS BTNPENWD. THE CONTOUR
00001290                           499  ; COLOR IS BTNPENCL. THE FILL COLOR IS BLACK IF THE MOUSE IS NOT INSIDE,
00001290                           500  ; BTNSELCL IF THE MOUSE IS INSIDE BUT THE MOUSE BUTTON IS NOT PRESSED AND
00001290                           501  ; BTNPRSCL IF THE MOUSE BUTTON IS PRESSED INSIDE.
00001290                           502  ; INPUT    : A0 - POINTER TO THE VARIABLE DATABLOCK
00001290                           503  ; OUTPUT   : NONE
00001290                           504  ; MODIFIES : NONE
00001290                           505  ; -----------------------------------------------------------------------------
00001290                           506  
00001290  48E7 FFE0                507              MOVEM.L D0-D7/A0-A2,-(A7)       ; Save content registers
00001294                           508              
00001294                           509              ; SET PEN COLOR
00001294  103C 0050                510              MOVE.B  #80,D0
00001298  223C 00005500            511              MOVE.L  #BTNPENCL,D1
0000129E  4E4F                     512              TRAP    #15
000012A0                           513              
000012A0                           514              ; SET PEN WIDTH/THICKNESS
000012A0  103C 005D                515              MOVE.B  #93,D0
000012A4  7204                     516              MOVE.L  #BTNPENWD,D1
000012A6  4E4F                     517              TRAP    #15
000012A8                           518              
000012A8  0C28 0000 0004           519              CMP.B   #0,4(A0)                
000012AE  6700 0020                520              BEQ     .MOUSEOUT
000012B2                           521      
000012B2  0C28 0002 0004           522              CMP.B   #2,4(A0) 
000012B8  6700 000C                523              BEQ     .MOUPRESD 
000012BC                           524      
000012BC                           525              ; MOUSE INSIDE   
000012BC  223C 0000AA00            526              MOVE.L  #BTNSELCL,D1
000012C2  6000 000E                527              BRA     .SALIR
000012C6                           528                
000012C6  223C 00006600            529  .MOUPRESD   MOVE.L  #BTNPRSCL,D1            ; MOUSE PRESSED
000012CC  6000 0004                530              BRA     .SALIR
000012D0                           531              
000012D0  7200                     532  .MOUSEOUT   MOVE.L  #CLRBLACK,D1            ; MOUSE OUTSIDE
000012D2                           533              
000012D2  103C 0051                534  .SALIR      MOVE.B  #81,D0                  ; DRAW BUTTON
000012D6  4E4F                     535              TRAP    #15
000012D8                           536              
000012D8  2250                     537              MOVE.L  (A0),A1                 ; COPY @ SDB OF BUTTON
000012DA  4281                     538              CLR.L   D1
000012DC                           539              
000012DC                           540              ; GET COORDINATES(UP)
000012DC  3419                     541              MOVE.W  (A1)+,D2                ; UPPER Y
000012DE  3219                     542              MOVE.W  (A1)+,D1                ; LEFT X
000012E0                           543              
000012E0                           544              ; GET HEIGHT
000012E0  3819                     545              MOVE.W  (A1)+,D4
000012E2  3F04                     546              MOVE.W  D4,-(A7)
000012E4                           547              
000012E4                           548              ; GET WIDTH 
000012E4  3619                     549              MOVE.W  (A1)+,D3
000012E6  3E03                     550              MOVE.W  D3,D7
000012E8                           551  
000012E8                           552              ; GET COORDINATES(LOW)
000012E8  D641                     553              ADD.W   D1,D3                   ; RIGHT X
000012EA  3A02                     554              MOVE.W  D2,D5                   
000012EC  DA44                     555              ADD.W   D4,D5                   ; LOWER Y
000012EE  3805                     556              MOVE.W  D5,D4 
000012F0                           557              
000012F0                           558              ; DRAW BUTTON
000012F0  103C 0057                559              MOVE.B  #87,D0
000012F4  4E4F                     560              TRAP    #15
000012F6                           561              
000012F6                           562              ; SET PEN COLOR
000012F6  3A01                     563              MOVE.W  D1,D5                   ; SAVE D1 CONTENT
000012F8  103C 0050                564              MOVE.B  #80,D0
000012FC  223C 00FFFFFF            565              MOVE.L  #CLRWHITE,D1
00001302  4E4F                     566              TRAP    #15
00001304  4281                     567              CLR.L   D1
00001306  3205                     568              MOVE.W  D5,D1                   ; RESTORE D1
00001308                           569              
00001308                           570              ; GET & DRAW TEXT
00001308  5849                     571              ADD.W   #4,A1
0000130A                           572              ; TEXTWIDTH  = NUMCAR*CHRWIDTH ; CHARACTER WIDTH
0000130A                           573              ; TEXTHEIGHT = CHRHEIGH        ; CHARACTER HEIGHT
0000130A  4285                     574              CLR.L   D5
0000130C  2450                     575              MOVE.L  (A0),A2
0000130E  D4FC 000C                576              ADD.W   #12,A2
00001312  1C1A                     577              MOVE.B  (A2)+,D6
00001314  BC7C 0000                578  .LOOP       CMP     #0,D6                   ; GET TEXT LENGTH            
00001318  6700 0008                579              BEQ     .DONE
0000131C  5245                     580              ADD.W   #1,D5
0000131E  1C1A                     581              MOVE.B  (A2)+,D6                
00001320  60F2                     582              BRA     .LOOP
00001322  CAFC 0008                583  .DONE       MULU.W  #CHRWIDTH,D5
00001326  9E45                     584              SUB.W   D5,D7                   ; WIDTH-TEXTWIDTH
00001328  8EFC 0002                585              DIVU.W  #2,D7                   ; (WIDTH-TEXTWIDTH)/2
0000132C  D247                     586              ADD.W   D7,D1                   ; LEFTX +(WIDTH-TEXTWIDTH)/2
0000132E                           587  
0000132E  381F                     588              MOVE.W  (A7)+,D4
00001330  0444 0010                589              SUB.W   #CHRHEIGH,D4            ; HEIGHT-TEXTHEIGHT
00001334  88FC 0002                590              DIVU.W  #2,D4                   ; (HEIGHT-TEXTHEIGHT)/2
00001338  D444                     591              ADD.W   D4,D2                   ; UPPERY+(HEIGHT-TEXTHEIGHT)/2
0000133A                           592              
0000133A  103C 005F                593              MOVE.B  #95,D0
0000133E  4E4F                     594              TRAP    #15
00001340                           595              
00001340  4CDF 07FF                596              MOVEM.L (A7)+,D0-D7/A0-A2       ; Restore content resgiters
00001344                           597              
00001344  4E75                     598              RTS
00001346                           599                  
00001346                           600  -------------------- end include --------------------
00001346                           601              INCLUDE "BTNLIST.X68"           ; BUTTON LIST MANAGEMENT
00001346                           602  ; =============================================================================
00001346                           603  ; TITLE    : BUTTON LIST MANAGEMENT
00001346                           604  ; AUTHOR   : ANTONI BURGUERA
00001346                           605  ; HISTORY  : 05-JULY-2021 - CREATION
00001346                           606  ; COMMENTS : * ALLOWS ADDING, UPDATING AND PLOTTING A LIST OF BUTTONS. ALLOWS
00001346                           607  ;              REMOVING THEM ALL, BUT NOT INDIVIDUALLY.
00001346                           608  ;
00001346                           609  ;            * THE LIST OF BUTTONS IS STORED AS A LIST OF BUTTON'S VDB. THIS
00001346                           610  ;              LIST IS STORED AT BTLDATA.
00001346                           611  ;
00001346                           612  ;            * THE LIST OF VBD IS BUILT ASSUMING A MAXIMUM OF BTLMXVDB BUTTONS
00001346                           613  ;              AND A SIZE OF BTNSZVDB BYTES FOR EACH VDB.
00001346                           614  ; =============================================================================
00001346                           615  
00001346                           616  ; -----------------------------------------------------------------------------
00001346                           617  BTLINIT
00001346                           618  ; INITIALIZES BUTTON LIST BY SETTING ALL THE POINTERS TO STATIC DATA BLOCKS
00001346                           619  ; TO $FFFFFFFF.
00001346                           620  ; INPUT    : NONE
00001346                           621  ; OUTPUT   : NONE
00001346                           622  ; MODIFIES : NONE
00001346                           623  ; -----------------------------------------------------------------------------
00001346  48E7 8080                624              MOVEM.L D0/A0,-(A7)
0000134A  41F9 000014E4            625              LEA     BTLDATA,A0
00001350  303C 0009                626              MOVE.W  #BTLMXVDB-1,D0          ; NUM ITERATIONS
00001354  20BC FFFFFFFF            627  .LOOP       MOVE.L  #$FFFFFFFF,(A0)         ; MARK SLOT AS EMPTY
0000135A  5C88                     628              ADD.L   #BTNSZVDB,A0            ; GO TO NEXT SLOT
0000135C  51C8 FFF6                629              DBRA.W  D0,.LOOP                ; LOOP FOR ALL SLOTS
00001360  4CDF 0101                630              MOVEM.L (A7)+,D0/A0
00001364  4E75                     631              RTS
00001366                           632  
00001366                           633  ; -----------------------------------------------------------------------------
00001366  =00001346                634  BTLCLEAR    EQU     BTLINIT
00001366                           635  ; CLEARS THE BUTTON LIST. SAME AS BTLINIT.
00001366                           636  ; INPUT    : NONE
00001366                           637  ; OUTPUT   : NONE
00001366                           638  ; MODIFIES : NONE
00001366                           639  ; -----------------------------------------------------------------------------
00001366                           640  
00001366                           641  ; -----------------------------------------------------------------------------
00001366                           642  BTLADD
00001366                           643  ; ADDS A NEW BUTTON INTO THE BUTTON LIST AND INITS IT.
00001366                           644  ; INPUT    : A1 - POINTER TO THE BUTTON SDB
00001366                           645  ; OUTPUT   : NONE
00001366                           646  ; MODIFIES : NONE
00001366                           647  ; -----------------------------------------------------------------------------
00001366  48E7 8080                648              MOVEM.L A0/D0,-(A7)
0000136A                           649  
0000136A                           650              ; SEARCH FOR AN EMPTY SLOT
0000136A                           651  
0000136A  41F9 000014E4            652              LEA     BTLDATA,A0
00001370  303C 0009                653              MOVE.W  #BTLMXVDB-1,D0
00001374  0C90 FFFFFFFF            654  .LOOP       CMP.L   #$FFFFFFFF,(A0)
0000137A  6700 000E                655              BEQ     .FOUND
0000137E  5C88                     656              ADD.L   #BTNSZVDB,A0
00001380  51C8 FFF2                657              DBRA.W  D0,.LOOP
00001384                           658  
00001384                           659              ; NO SLOT? DO NOTHING
00001384                           660  
00001384  4CDF 0101                661  .END        MOVEM.L (A7)+,A0/D0
00001388  4E75                     662              RTS
0000138A                           663  
0000138A                           664              ; SLOT FOUND? PLACE THE BUTTON THERE BY CALLING BTNINIT
0000138A                           665  
0000138A  4EB8 1208                666  .FOUND      JSR     BTNINIT
0000138E  60F4                     667              BRA     .END
00001390                           668  
00001390                           669  ; -----------------------------------------------------------------------------
00001390                           670  BTLUPD
00001390                           671  ; CALLS BTNUPD FOR ALL THE BUTTONS IN THE BUTTON LIST.
00001390                           672  ; INPUT    : NONE
00001390                           673  ; OUTPUT   : NONE
00001390                           674  ; MODIFIES : NONE
00001390                           675  ; -----------------------------------------------------------------------------
00001390                           676  
00001390  48E7 8080                677              MOVEM.L A0/D0,-(A7)
00001394                           678  
00001394                           679              ; TRAVERSE THE LIST
00001394                           680  
00001394  41F9 000014E4            681              LEA     BTLDATA,A0
0000139A  303C 0009                682              MOVE.W  #BTLMXVDB-1,D0
0000139E  0C90 FFFFFFFF            683  .LOOP       CMP.L   #$FFFFFFFF,(A0)
000013A4  6700 000C                684              BEQ     .DONE
000013A8                           685  
000013A8                           686              ; UPDATE EACH BUTTON
000013A8                           687  
000013A8  4EB8 1218                688              JSR     BTNUPD
000013AC                           689  
000013AC                           690              ; GO TO THE NEXT BUTTON
000013AC                           691  
000013AC  5C88                     692              ADD.L   #BTNSZVDB,A0
000013AE  51C8 FFEE                693              DBRA.W  D0,.LOOP
000013B2                           694  
000013B2  4CDF 0101                695  .DONE       MOVEM.L (A7)+,A0/D0
000013B6  4E75                     696              RTS
000013B8                           697  
000013B8                           698  
000013B8                           699  ; -----------------------------------------------------------------------------
000013B8                           700  BTLPLOT
000013B8                           701  ; CALLS BTNPLOT FOR ALL THE BUTTONS IN THE BUTTON LIST.
000013B8                           702  ; INPUT    : NONE
000013B8                           703  ; OUTPUT   : NONE
000013B8                           704  ; MODIFIES : NONE
000013B8                           705  ; -----------------------------------------------------------------------------
000013B8                           706  
000013B8                           707  ; TODO : PLACE YOUR CODE HERE
000013B8                           708              ; JSR BTLUPD
000013B8                           709              ; RTS
000013B8  48E7 8080                710              MOVEM.L A0/D0,-(A7)             ; Save content registers
000013BC                           711              
000013BC  41F9 000014E4            712              LEA     BTLDATA,A0              ; @ OF THE BUTTONS
000013C2  303C 0009                713              MOVE.W  #BTLMXVDB-1,D0
000013C6  0C90 FFFFFFFF            714  .LOOP       CMP.L   #$FFFFFFFF,(A0)         ; Until end of list
000013CC  6700 000C                715              BEQ     .DONE
000013D0                           716  
000013D0  4EB8 1290                717              JSR     BTNPLOT                 ; Calls BTNUPD
000013D4                           718  
000013D4  5C88                     719              ADD.L   #BTNSZVDB,A0            ; Next button
000013D6  51C8 FFEE                720              DBRA.W  D0,.LOOP
000013DA                           721              
000013DA  4CDF 0101                722  .DONE       MOVEM.L (A7)+,A0/D0             ; Restore content resgiters
000013DE                           723              
000013DE  4E75                     724              RTS
000013E0                           725  
000013E0                           726              
000013E0                           727  
000013E0                           728  
000013E0                           729  
000013E0                           730  
000013E0                           731  
000013E0                           732  
000013E0                           733  
000013E0                           734  
000013E0                           735  
000013E0                           736  -------------------- end include --------------------
000013E0                           737  
000013E0                           738  ; --- INITIALIZE --------------------------------------------------------------
000013E0                           739  
000013E0  4EB8 1000                740  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM CODE
000013E4  4EB9 0000145E            741              JSR     UIINIT                  ; INITIALIZE THE USER INTERFACE
000013EA                           742  
000013EA                           743  ; --- UPDATE ------------------------------------------------------------------
000013EA                           744  
000013EA  4E41                     745  .LOOP       TRAP    #MOUTRAP                ; READ MOUSE
000013EC  4EB8 1390                746              JSR     BTLUPD                  ; UPDATE THE USER INTERFACE
000013F0                           747  
000013F0                           748  ; --- PLOT --------------------------------------------------------------------
000013F0                           749  
000013F0  4EB8 13B8                750              JSR     BTLPLOT                 ; PLOT THE USER INTERFACE
000013F4  4E40                     751              TRAP    #SCRTRAP                ; SHOW GRAPHICS
000013F6  60F2                     752              BRA     .LOOP
000013F8  FFFF FFFF                753              SIMHALT
000013FC                           754  
000013FC                           755  ; --- CALLBACKS ---------------------------------------------------------------
000013FC                           756  
000013FC                           757  ; -----------------------------------------------------------------------------
000013FC                           758  CALP1WIN
000013FC                           759  ; SUBROUTINE (USED AS CALLBACK) THAT PLAYS THE SOUND "PLAYER 1 WINS"
000013FC                           760  ; INPUT    : NONE
000013FC                           761  ; OUTPUT   : NONE
000013FC                           762  ; MODIFIES : NONE
000013FC                           763  ; -----------------------------------------------------------------------------
000013FC  48E7 8040                764              MOVEM.L D0/A1,-(A7)
00001400  43F9 00001412            765              LEA     .FNAME,A1
00001406  103C 0046                766              MOVE.B  #70,D0
0000140A  4E4F                     767              TRAP    #15
0000140C  4CDF 0201                768              MOVEM.L (A7)+,D0/A1
00001410  4E75                     769              RTS
00001412= 50 31 57 49 4E 53 ...    770  .FNAME      DC.B    'P1WINS.WAV',0
0000141E                           771              DS.W    0
0000141E                           772  
0000141E                           773  ; -----------------------------------------------------------------------------
0000141E                           774  CALP2WIN
0000141E                           775  ; SUBROUTINE (USED AS CALLBACK) THAT PLAYS THE SOUND "PLAYER 2 WINS"
0000141E                           776  ; INPUT    : NONE
0000141E                           777  ; OUTPUT   : NONE
0000141E                           778  ; MODIFIES : NONE
0000141E                           779  ; -----------------------------------------------------------------------------
0000141E  48E7 8040                780              MOVEM.L D0/A1,-(A7)
00001422  43F9 00001434            781              LEA     .FNAME,A1
00001428  103C 0046                782              MOVE.B  #70,D0
0000142C  4E4F                     783              TRAP    #15
0000142E  4CDF 0201                784              MOVEM.L (A7)+,D0/A1
00001432  4E75                     785              RTS
00001434= 50 32 57 49 4E 53 ...    786  .FNAME      DC.B    'P2WINS.WAV',0
00001440                           787              DS.W    0
00001440                           788  
00001440                           789  ; -----------------------------------------------------------------------------
00001440                           790  CALTIE
00001440                           791  ; SUBROUTINE (USED AS CALLBACK) THAT PLAYS A SOUND SIMBOLIZING A TIE (SORT OF)
00001440                           792  ; INPUT    : NONE
00001440                           793  ; OUTPUT   : NONE
00001440                           794  ; MODIFIES : NONE
00001440                           795  ; -----------------------------------------------------------------------------
00001440  48E7 8040                796              MOVEM.L D0/A1,-(A7)
00001444  43F9 00001456            797              LEA     .FNAME,A1
0000144A  103C 0046                798              MOVE.B  #70,D0
0000144E  4E4F                     799              TRAP    #15
00001450  4CDF 0201                800              MOVEM.L (A7)+,D0/A1
00001454  4E75                     801              RTS
00001456= 54 49 45 2E 57 41 ...    802  .FNAME      DC.B    'TIE.WAV',0
0000145E                           803              DS.W    0
0000145E                           804  
0000145E                           805  ; --- SUBROUTINES -------------------------------------------------------------
0000145E                           806  
0000145E                           807  ; -----------------------------------------------------------------------------
0000145E                           808  UIINIT
0000145E                           809  ; INITS THE USER INTERFACE BY INSERTINT THE THREE BUTTONS INTO THE BUTTON LIST
0000145E                           810  ; INPUT    : NONE
0000145E                           811  ; OUTPUT   : NONE
0000145E                           812  ; MODIFIES : NONE
0000145E                           813  ; -----------------------------------------------------------------------------
0000145E  48E7 00C0                814              MOVEM.L A0/A1,-(A7)
00001462  4EB8 1346                815              JSR     BTLINIT
00001466  41F9 00001484            816              LEA     .SDBLIST,A0
0000146C  2258                     817  .LOOP       MOVE.L  (A0)+,A1
0000146E  B3FC FFFFFFFF            818              CMP.L   #-1,A1
00001474  6700 0008                819              BEQ     .END
00001478  4EB8 1366                820              JSR     BTLADD
0000147C  60EE                     821              BRA     .LOOP
0000147E  4CDF 0300                822  .END        MOVEM.L (A7)+,A0/A1
00001482  4E75                     823              RTS
00001484= 00001494 000014B0 ...    824  .SDBLIST    DC.L    SDBP1W,SDBP2W,SDBTIE,-1
00001494                           825  
00001494                           826  ; --- BUTTONS STATIC DATA BLOCKS ----------------------------------------------
00001494                           827  
00001494= 00E6                     828  SDBP1W      DC.W    (SCRHEIGH-3*BTLVERSZ-2*BTLVEMRG)/2 ; YTOP COORDINATE
00001496= 012C                     829              DC.W    (SCRWIDTH-200)/2        ; XLEFT COORDINATE
00001498= 0028                     830              DC.W    BTLVERSZ                ; HEIGHT
0000149A= 00C8                     831              DC.W    200                     ; WIDTH
0000149C= 000013FC                 832              DC.L    CALP1WIN                ; CALLBACK
000014A0= 50 4C 41 59 45 52 ...    833              DC.B    'PLAYER 1 WINS!',0      ; BUTTON TEXT
000014AF                           834  
000014B0= 0118                     835  SDBP2W      DC.W    (SCRHEIGH-BTLVERSZ)/2   ; YTOP COORDINATE
000014B2= 012C                     836              DC.W    (SCRWIDTH-200)/2        ; XLEFT COORDINATE
000014B4= 0028                     837              DC.W    BTLVERSZ                ; HEIGHT
000014B6= 00C8                     838              DC.W    200                     ; WIDTH
000014B8= 0000141E                 839              DC.L    CALP2WIN                ; CALLBACK
000014BC= 50 4C 41 59 45 52 ...    840              DC.B    'PLAYER 2 WINS!',0      ; BUTTON TEXT
000014CB                           841  
000014CC= 014A                     842  SDBTIE      DC.W    (SCRHEIGH+BTLVERSZ)/2+BTLVEMRG ; YTOP COORDINATE
000014CE= 012C                     843              DC.W    (SCRWIDTH-200)/2        ; XLEFT COORDINATE
000014D0= 0028                     844              DC.W    BTLVERSZ                ; HEIGHT
000014D2= 00C8                     845              DC.W    200                     ; WIDTH
000014D4= 00001440                 846              DC.L    CALTIE                  ; CALLBACK
000014D8= 54 49 45 00              847              DC.B    'TIE',0                 ; BUTTON TEXT
000014DC                           848  
000014DC                           849  ; --- VARIABLES ---------------------------------------------------------------
000014DC                           850  
000014DC                           851              INCLUDE "SYSVAR.X68"            ; SYSTEM VARIABLES
000014DC                           852  ; =============================================================================
000014DC                           853  ; TITLE    : SYSTEM VARS
000014DC                           854  ; AUTHOR   : ANTONI BURGUERA
000014DC                           855  ; HISTORY  : 05-JULY-2021 - CREATION
000014DC                           856  ; COMMENTS : * ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
000014DC                           857  ;              THEY MUST NOT BE IN PROTECTED MEMORY.
000014DC                           858  ;
000014DC                           859  ;            * SINCE SOME SUBROUTINES TAKE ADVANTAGE OF THE ORDER IN WHICH
000014DC                           860  ;              THE VARIABLES ARE IN MEMORY, THEIR ORDER SHOULD NOT BE ALTERED.
000014DC                           861  ; =============================================================================
000014DC                           862  
000014DC                           863  ; --- MOUSE RELATED VARIABLES -------------------------------------------------
000014DC                           864  
000014DC                           865  MOUY        DS.W    1                       ; MOUSE Y COORDINATE
000014DE                           866  MOUX        DS.W    1                       ; MOUSE X COORDINATE
000014E0                           867  MOUVAL      DS.B    1                       ; CURRENT MOUSE BUTTON STATUS
000014E1                           868  MOUEDGE     DS.B    1                       ; RISING EDGES IN MOUVAL
000014E2                           869              DS.W    0
000014E2                           870  -------------------- end include --------------------
000014E2                           871              INCLUDE "VAR.X68"               ; USER VARIABLES
000014E2                           872  ; =============================================================================
000014E2                           873  ; TITLE    : USER VARS
000014E2                           874  ; AUTHOR   : ANTONI BURGUERA
000014E2                           875  ; HISTORY  : 05-JULY-2021 - CREATION
000014E2                           876  ; COMMENTS : SEE THE CORRESPONDING FILES (UTIL.X68, BTNLIST.X68, GRID.X68 OR
000014E2                           877  ;            GOL.X68) TO LEARN ABOUT THE MEANING OF THESE VARIABLES.
000014E2                           878  ; =============================================================================
000014E2                           879  
000014E2                           880  ; --- UTILITY VARS ------------------------------------------------------------
000014E2                           881  
000014E2                           882  UTLRNDIX    DS.B    1                       ; RANDOM GENERATOR INDEX
000014E4                           883              DS.W    0
000014E4                           884  
000014E4                           885  ; --- BUTTON LIST -------------------------------------------------------------
000014E4                           886  
000014E4                           887  BTLDATA     DS.B    BTLMXVDB*BTNSZVDB       ; BUTTONS VDB STORAGE
00001520                           888              DS.W    0
00001520                           889  
00001520                           890  ; --- GRID --------------------------------------------------------------------
00001520                           891  
00001520                           892  GRDSRC      DS.L    1                       ; SOURCE MATRIX POINTER
00001524                           893  GRDDST      DS.L    1                       ; DESTINATION MATRIX POINTER
00001528                           894  GRDMATR0    DS.B    GRDWIDTH*GRDHEIGH       ; ONE OF THE GRIDS...
00001D28                           895  GRDMATR1    DS.B    GRDWIDTH*GRDHEIGH       ; THE OTHER GRID
00002528                           896  GRDNPLR1    DS.W    1                       ; NUMBER OF PLAYER 1 CELLS
0000252A                           897  GRDNPLR2    DS.W    1                       ; NUMBER OF PLAYER 2 CELLS
0000252C                           898  GRDNGEN     DS.W    1                       ; NUMOER OF GENERATIONS
0000252E                           899  
0000252E                           900  ; --- APPLICATION -------------------------------------------------------------
0000252E                           901  
0000252E                           902  GOLSTATE    DS.B    1                       ; APPLICATION STATE
00002530                           903              DS.W    0
00002530                           904  -------------------- end include --------------------
00002530                           905  
00002530                           906              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BTLADD              1366
BTLADD:END          1384
BTLADD:FOUND        138A
BTLADD:LOOP         1374
BTLCLEAR            1346
BTLDATA             14E4
BTLHOMRG            A
BTLINIT             1346
BTLINIT:LOOP        1354
BTLMXVDB            A
BTLPLOT             13B8
BTLPLOT:DONE        13DA
BTLPLOT:LOOP        13C6
BTLUPD              1390
BTLUPD:DONE         13B2
BTLUPD:LOOP         139E
BTLVEMRG            A
BTLVERSZ            28
BTNINIT             1208
BTNPENCL            5500
BTNPENWD            4
BTNPLOT             1290
BTNPLOT:DONE        1322
BTNPLOT:LOOP        1314
BTNPLOT:MOUPRESD    12C6
BTNPLOT:MOUSEOUT    12D0
BTNPLOT:SALIR       12D2
BTNPRSCL            6600
BTNSELCL            AA00
BTNSZVDB            6
BTNUPD              1218
BTNUPD:END          128A
BTNUPD:MOUSEOUT     1286
CALP1WIN            13FC
CALP1WIN:FNAME      1412
CALP2WIN            141E
CALP2WIN:FNAME      1434
CALTIE              1440
CALTIE:FNAME        1456
CHRHEIGH            10
CHRSHHEI            4
CHRSHWID            3
CHRWIDTH            8
CLRBLACK            0
CLRDKGRN            5500
CLRLTBLU            FF0000
CLRLTGRN            AA00
CLRLTRED            FF
CLRMDGRN            6600
CLRWHITE            FFFFFF
GOLMAXGN            FA
GOLSEXEC            1
GOLSPAUS            0
GOLSTATE            252E
GRDCOLP1            FF0000
GRDCOLP2            FF
GRDDST              1524
GRDHEIGH            20
GRDMATR0            1528
GRDMATR1            1D28
GRDMSHEI            1F
GRDMSWID            3F
GRDNGEN             252C
GRDNPLR1            2528
GRDNPLR2            252A
GRDPXHEI            180
GRDPXWID            300
GRDSCNGX            30
GRDSCNGY            9
GRDSCP1X            2
GRDSCP1Y            9
GRDSCP2X            5E
GRDSCP2Y            9
GRDSHHEI            5
GRDSHWID            6
GRDSRC              1520
GRDSZCEL            C
GRDVEMRG            6E
GRDWIDTH            40
GRDXOFF             10
GRDYOFF             9E
MOUBITLF            0
MOUBITMD            2
MOUBITRT            1
MOUEDGE             14E1
MOUINIT             1020
MOUMSKLF            1
MOUMSKMD            4
MOUMSKRT            2
MOUREAD             1054
MOUTRAP             1
MOUVAL              14E0
MOUX                14DE
MOUY                14DC
SCRHEIGH            258
SCRINIT             107E
SCRTRAP             0
SCRUPD              10B6
SCRWIDTH            320
SDBP1W              1494
SDBP2W              14B0
SDBTIE              14CC
START               13E0
START:LOOP          13EA
SYSINIT             1000
UIINIT              145E
UIINIT:END          147E
UIINIT:LOOP         146C
UIINIT:SDBLIST      1484
UTLINIT             10D0
UTLRAND             10EA
UTLRAND:RANDVEC     1108
UTLRNDIX            14E2
UTLSTRLN            10D8
UTLSTRLN:END        10E6
UTLSTRLN:LOOP       10DC
